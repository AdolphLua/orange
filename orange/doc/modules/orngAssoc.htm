<html><HEAD>
<LINK REL=StyleSheet HREF="../style.css" TYPE="text/css">
</HEAD>
<body>

<body>
<h1>orngAssoc: Orange Association Rules Module</h1>
<br>

<P>Module orngAssoc is a wrapper around AssociationRulesInducer that is implemented
in core Orange. It can help building association rules using slightly modified Agrawal's
algorithm. It also implements some functions for filtering as well as
for sorting the rules by various measures. The functions for cloning and printing the
rules are also implemented. Other features, like measures' calculations are implemented
in core Orange.</P>
<HR>

<H2>Implementations</H2>
<H3>Classes</H3>
<DL>
<DT><B>AssociationRules</B>
<DD class=ddfun>Class AssociationRules inherits class orange.AssociationRules and adds some
methods for sorting, filtering and printing.
</DD>
<DT><B>AssociationRulesInducer</B>
<DD class=ddfun>Class AssociationRulesInducer has no methods. It only let orange know that
orngAssoc.AssociationRules is called rather than orange.AssociationRules.
</DD>
</DL>

<H3>Functions</H3>
<DL>
<DT><B>build</B>(<EM>data, support, maxItemSets</EM>)
<DD class=ddfun>Takes the data set (<em>data</em>) and builds association rules by calling
<code>orange.AssociationRulesInducer()</code>. Only the rules with support grater than
support (set to 0.9 by default) are built. Please note that the default value might be too
high for your data set which may result in an empty list of rules. The upper limit of
generated item sets (<em>maxItemSets</em>) can also be set (its default value is 15000).
An exception will be raised in case the limit is set too low.
Returns a set of rules, ordered by support and confidence.</DD>
</DL>

Orange's dump and write functions are also defined to output a rule.
See 'Examples' for usage.

<H3>Methods</H3>
<DL>
<DT><B>sortByFields</B>(<EM>fields</EM>)
<DD class=ddfun>Takes the list of measures to sort the rules by. The order in which
the measures are specified matters - the rules will first be sorted by the first
measure in the list, then second etc.
Sorts the rules in place.</DD>

<DT><B>sortBySupport</B>()
<DD class=ddfun>Sorts the rules by support in place.</DD>

<DT><B>sortByConfidence</B>()
<DD class=ddfun>Sorts the rules by confidence in place.</DD>

<DT><B>filterBySupport</B>(<em>limit</em>)
<DD class=ddfun>Returns the rules with support grater than limit.</DD>

<DT><B>filterByConfidence</B>(<em>limit</em>)
<DD class=ddfun>Returns the rules with confidence grater than limit.</DD>

<DT><B>clone</B>()
<DD class=ddfun>Returns the list of rules which is a (deep) copy of rules to which
clone is applied to.</DD>

<DT><B>printMeasures</B>(<em>listOfMeasures</em>)
<DD class=ddfun>Prints out the rules with the measures specified in listOfMeasures.</DD>

</DL>
<HR>

<H2>Examples</H2>
<p class="header"><a href="assoc.py">assoc.py</a> (uses <a href=
"lung-cancer.tab">lung-cancer.tab</a>)</p>
<XMP class=code>import orange, orngAssoc

tab = orange.ExampleTable("lung-cancer.tab")
rules = orngAssoc.build(tab, 0.75)

#print out the number of rules and clone them
print "#rules = ",len(rules)
ar = rules.clone()
print "#rules = ",len(ar)

# a simple print put of rules, by default sorted by support and confidence
print rules
# sort by coverage, lift and support
rules.sortByFields(['coverage','lift','support'])
# print out the rules with its measures
rules.printMeasures(['support','confidence','lift','leverage','strength','coverage'])
# sort by confidence only
rules.sortByConfidence()

# print the support of the first rule
print rules[0].support
# print the first rule and the specified measures with dump function
print rules[0].dump("measures", ['support'])

# delete the first rule
del rules[0]

# an example of write function - the same as dump but writes to file
f = open("foo.txt", "wt")
rules[0].write(f, "measures", ["support"])
f.close()

# filter by support...
r1 = rules.filterBySupport(0.76)
# ... and confidence
r2 = rules.filterByConfidence(0.85)

# you can of course define your own filter function, e.g. filter on lift
r1=rules.filter(lambda x: x.lift>1.1)
print r1[0].dump("measures", ['lift'])


</XMP>
<HR>

</BODY>
</HTML> 