 /* This file has been generated by pyprops.py.
       (feel free to edit it and pyprops will feel free to undo your changes). */
#include "../myclasses.hpp"



/****** TRandomForestLearner *****/

TPropertyDescription TRandomForestLearner_properties[] = {
  {"randomSeed", "seed for the random generator", &typeid(int), NULL, offsetof(TRandomForestLearner, randomSeed), false, false},
  {"needs", "the kind of data that learner needs", &typeid(int), NULL, offsetof(TRandomForestLearner, needs), true, false},
  {NULL}
};

size_t const TRandomForestLearner_components[] = { 0};
TClassDescription TRandomForestLearner::st_classDescription = { "TRandomForestLearner", &typeid(TRandomForestLearner), &TLearner::st_classDescription, TRandomForestLearner_properties, TRandomForestLearner_components };
TClassDescription const *TRandomForestLearner::classDescription() const { return &TRandomForestLearner::st_classDescription; }
TOrange *TRandomForestLearner::clone() const { return mlnew TRandomForestLearner(*this); }


/****** TRandomForest *****/

TPropertyDescription TRandomForest_properties[] = {
  {"randomGenerator", "random generator", &typeid(POrange), &TRandomGenerator::st_classDescription, offsetof(TRandomForest, randomGenerator), true, false},
  {"classVar", "class variable", &typeid(POrange), &TVariable::st_classDescription, offsetof(TRandomForest, classVar), false, false},
  {"computesProbabilities", "set if classifier computes class probabilities (if not, it assigns 1.0 to the predicted)", &typeid(bool), NULL, offsetof(TRandomForest, computesProbabilities), false, false},
  {NULL}
};

size_t const TRandomForest_components[] = { offsetof(TRandomForest, randomGenerator), offsetof(TRandomForest, classVar), 0};
TClassDescription TRandomForest::st_classDescription = { "TRandomForest", &typeid(TRandomForest), &TClassifier::st_classDescription, TRandomForest_properties, TRandomForest_components };
TClassDescription const *TRandomForest::classDescription() const { return &TRandomForest::st_classDescription; }
TOrange *TRandomForest::clone() const { return mlnew TRandomForest(*this); }
