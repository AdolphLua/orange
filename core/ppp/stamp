(dp0
S'TComputeDomainContingency_ImputeWithClassifier'
p1
(i__main__
ClassDefinition
p2
(dp3
S'extended'
p4
I1
sS'imported'
p5
I01
sS'name'
p6
g1
sS'parent'
p7
S'TComputeDomainContingency'
p8
sS'components'
p9
(lp10
sS'abstract'
p11
I00
sS'properties'
p12
(lp13
(S'TLearner'
p14
S'learnerForDiscrete'
p15
g15
S'constructs a classifier for imputation of discrete values'
p16
I0
I0
I00
tp17
a(S'TLearner'
p18
S'learnerForContinuous'
p19
g19
S'constructs a classifier for imputation of continuous values'
p20
I0
I0
I00
tp21
a(S'bool'
p22
S'classIsOuter'
p23
g23
S'tells whether the class is the outer variable in contingencies'
p24
I0
I0
I01
tp25
asbsS'TRuleDataStoppingCriteria_NoPositives'
p26
(i__main__
ClassDefinition
p27
(dp28
g4
I1
sg5
I01
sg6
g26
sg7
S'TRuleDataStoppingCriteria'
p29
sg9
(lp30
sg11
I00
sg12
(lp31
sbsS'TExampleCluster'
p32
(i__main__
ClassDefinition
p33
(dp34
g4
I1
sg5
I01
sg6
g32
sg7
S'TOrange'
p35
sg9
(lp36
sg11
I00
sg12
(lp37
(S'TExampleCluster'
p38
S'left'
p39
g39
S"'left' cluster"
p40
I0
I0
I00
tp41
a(S'TExampleCluster'
p42
S'right'
p43
g43
S"'right' cluster"
p44
I0
I0
I00
tp45
a(S'float'
p46
S'distance'
p47
g47
S'distance between the two clusters (not defined for leaves)'
p48
I0
I0
I01
tp49
a(S'TExample'
p50
S'centroid'
p51
g51
S"cluster's centroid (always defined for leaves)"
p52
I0
I0
I00
tp53
asbsS'TClassifierByLookupTableN'
p54
(i__main__
ClassDefinition
p55
(dp56
g4
I1
sg5
I01
sg6
g54
sg7
S'TClassifierByLookupTable'
p57
sg9
(lp58
sg11
I00
sg12
(lp59
(S'TVarList'
p60
S'variables'
p61
g61
S'attributes'
p62
I01
I0
I00
tp63
a(S'TIntList'
p64
S'noOfValues'
p65
g65
S'number of values for each attribute'
p66
I01
I0
I00
tp67
a(S'TEFMDataDescription'
p68
S'dataDescription'
p69
g69
S'data description'
p70
I0
I0
I00
tp71
a(S'TValueList'
p72
S'lookupTable'
p73
g73
S'a list of class values, one for each attribute value'
p74
I01
I0
I00
tp75
a(S'TDistributionList'
p76
S'distributions'
p77
g77
S'a list of class distributions, one for each attribute value'
p78
I01
I0
I00
tp79
a(S'TVariable'
p80
S'classVar'
p81
g81
S'class variable'
p82
I0
I0
I00
tp83
a(S'bool'
p84
S'computesProbabilities'
p85
g85
S'set if classifier computes class probabilities (if not, it assigns 1.0 to the predicted)'
p86
I0
I0
I01
tp87
asbsS'TLearner_Python'
p88
(i__main__
ClassDefinition
p89
(dp90
g4
I1
sg5
I01
sg6
g88
sg7
S'TLearner'
p91
sg9
(lp92
sg11
I00
sg12
(lp93
(S'int'
p94
S'needs'
p95
g95
S'the kind of data that learner needs'
p96
I01
I0
I01
tp97
asbsS'TConditionalProbabilityEstimator_FromDistribution'
p98
(i__main__
ClassDefinition
p99
(dp100
g4
I1
sg5
I01
sg6
g98
sg7
S'TConditionalProbabilityEstimator'
p101
sg9
(lp102
sg11
I00
sg12
(lp103
(S'TContingency'
p104
S'probabilities'
p105
g105
S'Contingency that stores conditional probabilities'
p106
I0
I0
I00
tp107
a(S'bool'
p108
S'supportsDiscrete'
p109
g109
S'can estimate probabilities of discrete attributes'
p110
I01
I0
I01
tp111
a(S'bool'
p112
S'supportsContinuous'
p113
g113
S'can estimate probabilities of continuous attributes'
p114
I01
I0
I01
tp115
asbsS'TAssistantExampleGenerator'
p116
(i__main__
ClassDefinition
p117
(dp118
g4
I1
sg5
I01
sg6
g116
sg7
S'TFileExampleGenerator'
p119
sg9
(lp120
sg11
I00
sg12
(lp121
(S'string'
p122
S'filename'
p123
g123
S'filename'
p124
I0
I0
I01
tp125
a(S'int'
p126
S'startDataPos'
p127
g127
S'starting position of the data in file'
p128
I0
I0
I01
tp129
a(S'int'
p130
S'startDataLine'
p131
g131
S'line in the file where the data starts'
p132
I0
I0
I01
tp133
a(S'TDomain'
p134
S'domain'
p135
g135
S'domain'
p136
I0
I0
I00
tp137
a(S'int'
p138
S'version'
p139
g139
S'unique version identifier'
p140
I01
I0
I01
tp141
asbsS'TImputerConstruct_Python'
p142
(i__main__
ClassDefinition
p143
(dp144
g4
I1
sg5
I01
sg6
g142
sg7
S'TImputerConstructor'
p145
sg9
(lp146
sg11
I00
sg12
(lp147
(S'bool'
p148
S'imputeClass'
p149
g149
S'tells whether to impute the class value (default: true)'
p150
I0
I0
I01
tp151
asbsS'TIMByRowsConstructor'
p152
(i__main__
ClassDefinition
p153
(dp154
g4
I1
sg5
I01
sg6
g152
sg7
S'TOrange'
p155
sg9
(lp156
sg11
I01
sg12
(lp157
sbsS'TSubsetsGenerator_withRestrictions'
p158
(i__main__
ClassDefinition
p159
(dp160
g4
I1
sg5
I01
sg6
g158
sg7
S'TSubsetsGenerator'
p161
sg9
(lp162
sg11
I00
sg12
(lp163
(S'TSubsetsGenerator'
p164
S'subGenerator'
p165
g165
S'subset generator'
p166
I0
I0
I00
tp167
a(S'TVarList'
p168
S'required'
p169
g169
S'set of required attributes'
p170
I0
I0
I00
tp171
a(S'TVarList'
p172
S'forbidden'
p173
g173
S'set of forbidden attributes'
p174
I0
I0
I00
tp175
a(S'TVarListList'
p176
S'forbiddenSubSubsets'
p177
g177
S'set of forbidden subsets (attributes that must not occur together)'
p178
I0
I0
I00
tp179
a(S'TVarList'
p180
S'varList'
p181
g181
S'a set of attributes from which subsets are generated'
p182
I0
I0
I00
tp183
asbsS'TRuleBeamFilter_Python'
p184
(i__main__
ClassDefinition
p185
(dp186
g4
I1
sg5
I01
sg6
g184
sg7
S'TRuleBeamFilter'
p187
sg9
(lp188
sg11
I00
sg12
(lp189
sbsS'TTreeExampleSplitter'
p190
(i__main__
ClassDefinition
p191
(dp192
g4
I1
sg5
I01
sg6
g190
sg7
S'TOrange'
p193
sg9
(lp194
sg11
I01
sg12
(lp195
sbsS'TSVMClassifier'
p196
(i__main__
ClassDefinition
p197
(dp198
g4
I1
sg5
I01
sg6
g196
sg7
S'TClassifierFD'
p199
sg9
(lp200
sg11
I00
sg12
(lp201
(S'TDomain'
p202
S'domain'
p203
g203
S'domain'
p204
I0
I0
I00
tp205
ag83
ag87
asbsS'TFilteredGenerator'
p206
(i__main__
ClassDefinition
p207
(dp208
g4
I1
sg5
I01
sg6
g206
sg7
S'TAdapterGenerator'
p209
sg9
(lp210
sg11
I00
sg12
(lp211
(S'TFilter'
p212
S'filter'
p213
g213
S'decides which examples are skipped'
p214
I0
I0
I00
tp215
ag137
ag141
asbsS'TPythonVariable'
p216
(i__main__
ClassDefinition
p217
(dp218
g4
I1
sg5
I01
sg6
g216
sg7
S'TVariable'
p219
sg9
(lp220
sg11
I00
sg12
(lp221
(S'bool'
p222
S'usePickle'
p223
g223
S'tells whether to use pickle for saving to/loading from files'
p224
I0
I0
I01
tp225
a(S'bool'
p226
S'useSomeValue'
p227
g227
S'tells whether the Variable will operate on Value or SomeValue (default)'
p228
I0
I0
I01
tp229
a(S'string'
p230
S'name'
p231
g231
S"variable's name"
p232
I0
I0
I01
tp233
a(S'int'
p234
S'varType'
p235
g235
S'variable type'
p236
I0
I0
I01
tp237
a(S'bool'
p238
S'ordered'
p239
g239
S'variable values are ordered'
p240
I0
I0
I01
tp241
a(S'bool'
p242
S'distributed'
p243
g243
S'variable values are distributions'
p244
I0
I0
I01
tp245
a(S'TRandomGenerator'
p246
S'randomGenerator'
p247
g247
S'random generator for random values (initialized when first needed)'
p248
I0
I0
I00
tp249
a(S'TVariable'
p250
S'sourceVariable'
p251
g251
S'The attribute that this attribute is computed from (when applicable)'
p252
I0
I0
I00
tp253
a(S'TClassifier'
p254
S'getValueFrom'
p255
g255
S'Function to compute the value from values of other variables'
p256
I0
I0
I00
tp257
asbsS'TTreeLearner'
p258
(i__main__
ClassDefinition
p259
(dp260
g4
I1
sg5
I01
sg6
g258
sg7
S'TLearner'
p261
sg9
(lp262
sg11
I00
sg12
(lp263
(S'TTreeSplitConstructor'
p264
S'split'
p265
g265
S'split criterion'
p266
I0
I0
I00
tp267
a(S'TTreeStopCriteria'
p268
S'stop'
p269
g269
S'stop criterion'
p270
I0
I0
I00
tp271
a(S'TComputeDomainContingency'
p272
S'contingencyComputer'
p273
g273
S'computes contingency matrix'
p274
I0
I0
I00
tp275
a(S'TLearner'
p276
S'nodeLearner'
p277
g277
S'node learner'
p278
I0
I0
I00
tp279
a(S'TTreeExampleSplitter'
p280
S'exampleSplitter'
p281
g281
S'splits examples to branches'
p282
I0
I0
I00
tp283
a(S'int'
p284
S'maxDepth'
p285
g285
S'maximal tree depth (0 = root only, -1 = no limit)'
p286
I0
I0
I01
tp287
a(S'bool'
p288
S'storeExamples'
p289
g289
S'if true (default: false), learning examples in nodes are stored'
p290
I0
I0
I01
tp291
a(S'bool'
p292
S'storeDistributions'
p293
g293
S'if true (default), class distributions of learning examples in nodes are stored'
p294
I0
I0
I01
tp295
a(S'bool'
p296
S'storeContingencies'
p297
g297
S'if true (default), contingency matrices for examples are stored'
p298
I0
I0
I01
tp299
a(S'bool'
p300
S'storeNodeClassifier'
p301
g301
S'if true (default), the internal nodes have classifiers; needed for pruning'
p302
I0
I0
I01
tp303
a(S'TTreeDescender'
p304
S'descender'
p305
g305
S'descends down the tree'
p306
I0
I0
I00
tp307
ag97
asbsS'TLearner'
p308
(i__main__
ClassDefinition
p309
(dp310
g4
I1
sg5
I01
sg6
g308
sg7
S'TOrange'
p311
sg9
(lp312
sg11
I00
sg12
(lp313
g97
asbsS'TExamplesDistance_Maximal'
p314
(i__main__
ClassDefinition
p315
(dp316
g4
I1
sg5
I01
sg6
g314
sg7
S'TExamplesDistance_Normalized'
p317
sg9
(lp318
sg11
I00
sg12
(lp319
(S'TAttributedFloatList'
p320
S'normalizers'
p321
g321
S'normalizing factors for attributes'
p322
I0
I0
I00
tp323
a(S'TAttributedFloatList'
p324
S'bases'
p325
g325
S'lowest values for attributes'
p326
I0
I0
I00
tp327
a(S'TAttributedFloatList'
p328
S'averages'
p329
g329
S'average values for continuous attribute values'
p330
I0
I0
I00
tp331
a(S'TAttributedFloatList'
p332
S'variances'
p333
g333
S'variations for continuous attribute values'
p334
I0
I0
I00
tp335
a(S'int'
p336
S'domainVersion'
p337
g337
S'version of domain on which the ranges were computed'
p338
I0
I0
I01
tp339
a(S'bool'
p340
S'normalize'
p341
g341
S'tells whether to normalize distances between attributes'
p342
I0
I0
I01
tp343
a(S'bool'
p344
S'ignoreUnknowns'
p345
g345
S'if true (default: false) unknown values are ignored in computation'
p346
I0
I0
I01
tp347
asbsS'TPreprocessor_discretize'
p348
(i__main__
ClassDefinition
p349
(dp350
g4
I1
sg5
I01
sg6
g348
sg7
S'TPreprocessor'
p351
sg9
(lp352
sg11
I00
sg12
(lp353
(S'TVarList'
p354
S'attributes'
p355
g355
S'attributes to be discretized (all, if not defined or empty)'
p356
I0
I0
I00
tp357
a(S'bool'
p358
S'discretizeClass'
p359
g359
S'also discretize the class attribute (default: false)'
p360
I0
I0
I01
tp361
a(S'TDiscretization'
p362
S'method'
p363
g363
S'discretization method'
p364
I0
I0
I00
tp365
asbsS'TProgressCallback_Python'
p366
(i__main__
ClassDefinition
p367
(dp368
g4
I1
sg5
I01
sg6
g366
sg7
S'TProgressCallback'
p369
sg9
(lp370
sg11
I00
sg12
(lp371
sbsS'TImputeClassifier'
p372
(i__main__
ClassDefinition
p373
(dp374
g4
I1
sg5
I01
sg6
g372
sg7
S'TClassifier'
p375
sg9
(lp376
sg11
I00
sg12
(lp377
(S'TClassifierFromVar'
p378
S'classifierFromVar'
p379
g379
S'ClassifierFromVar that is used to retrieve defined values'
p380
I0
I0
I00
tp381
a(S'TClassifier'
p382
S'imputer'
p383
g383
S'classifier that is used to determine the missing values '
p384
I0
I0
I00
tp385
ag83
ag87
asbsS'TRuleCovererAndRemover'
p386
(i__main__
ClassDefinition
p387
(dp388
g4
I1
sg5
I01
sg6
g386
sg7
S'TOrange'
p389
sg9
(lp390
sg11
I01
sg12
(lp391
sbsS'TPythonValue'
p392
(i__main__
ClassDefinition
p393
(dp394
g4
I1
sg5
I01
sg6
g392
sg7
S'TSomeValue'
p395
sg9
(lp396
sg11
I00
sg12
(lp397
sbsS'TAssociationRulesSparseInducer'
p398
(i__main__
ClassDefinition
p399
(dp400
g4
I1
sg5
I01
sg6
g398
sg7
S'TOrange'
p401
sg9
(lp402
sg11
I00
sg12
(lp403
(S'int'
p404
S'maxItemSets'
p405
g405
S'maximal number of itemsets (increase if you want)'
p406
I0
I0
I01
tp407
a(S'float'
p408
S'confidence'
p409
g409
S'required confidence'
p410
I0
I0
I01
tp411
a(S'float'
p412
S'support'
p413
g413
S'required support'
p414
I0
I0
I01
tp415
asbsS'TFilter_sameExample'
p416
(i__main__
ClassDefinition
p417
(dp418
g4
I1
sg5
I01
sg6
g416
sg7
S'TFilter'
p419
sg9
(lp420
sg11
I00
sg12
(lp421
(S'TExample'
p422
S'example'
p423
g423
S'example with which examples are compared'
p424
I0
I0
I00
tp425
a(S'bool'
p426
S'negate'
p427
g427
S'if true, filter output should be negated.'
p428
I0
I0
I01
tp429
a(S'TDomain'
p430
S'domain'
p431
g431
S'domain to which the examples are converted (if needed)'
p432
I0
I0
I00
tp433
asbsS'TRuleClassifierConstructor'
p434
(i__main__
ClassDefinition
p435
(dp436
g4
I1
sg5
I01
sg6
g434
sg7
S'TOrange'
p437
sg9
(lp438
sg11
I01
sg12
(lp439
sbsS'TKaplanMeier'
p440
(i__main__
ClassDefinition
p441
(dp442
g4
I1
sg5
I01
sg6
g440
sg7
S'TOrange'
p443
sg9
(lp444
sg11
I00
sg12
(lp445
sbsS'TMakeRandomIndicesMultiple'
p446
(i__main__
ClassDefinition
p447
(dp448
g4
I1
sg5
I01
sg6
g446
sg7
S'TMakeRandomIndices'
p449
sg9
(lp450
sg11
I00
sg12
(lp451
(S'int'
p452
S'stratified'
p453
g453
S'requests stratified distributions'
p454
I0
I0
I01
tp455
a(S'int'
p456
S'randseed'
p457
g457
S'a seed for random generator'
p458
I0
I0
I01
tp459
a(S'TRandomGenerator'
p460
S'randomGenerator'
p461
g461
S'a random generator'
p462
I0
I0
I00
tp463
asbsS'TLearnerFD'
p464
(i__main__
ClassDefinition
p465
(dp466
g4
I1
sg5
I01
sg6
g464
sg7
S'TLearner'
p467
sg9
(lp468
sg11
I00
sg12
(lp469
(S'TDomain'
p470
S'domain'
p471
g471
S'domain'
p472
I0
I0
I00
tp473
ag97
asbsS'TFeatureInducer'
p474
(i__main__
ClassDefinition
p475
(dp476
g4
I1
sg5
I01
sg6
g474
sg7
S'TOrange'
p477
sg9
(lp478
sg11
I01
sg12
(lp479
sbsS'TMapIntValue'
p480
(i__main__
ClassDefinition
p481
(dp482
g4
I1
sg5
I01
sg6
g480
sg7
S'TTransformValue'
p483
sg9
(lp484
sg11
I00
sg12
(lp485
(S'TIntList'
p486
S'mapping'
p487
g487
S'a lookup table'
p488
I0
I0
I00
tp489
a(S'TTransformValue'
p490
S'subTransform'
p491
g491
S'transformation executed prior to this'
p492
I0
I0
I00
tp493
asbsS'TDistributionAssessor_Kramer'
p494
(i__main__
ClassDefinition
p495
(dp496
g4
I1
sg5
I01
sg6
g494
sg7
S'TDistributionAssessor'
p497
sg9
(lp498
sg11
I00
sg12
(lp499
sbsS'TTreeExampleSplitter_UnknownsToBranch'
p500
(i__main__
ClassDefinition
p501
(dp502
g4
I1
sg5
I01
sg6
g500
sg7
S'TTreeExampleSplitter'
p503
sg9
(lp504
sg11
I00
sg12
(lp505
sbsS'TMajorityLearner'
p506
(i__main__
ClassDefinition
p507
(dp508
g4
I1
sg5
I01
sg6
g506
sg7
S'TLearner'
p509
sg9
(lp510
sg11
I00
sg12
(lp511
(S'TProbabilityEstimatorConstructor'
p512
S'estimatorConstructor'
p513
g513
S'constructs probability estimator'
p514
I0
I0
I00
tp515
a(S'TDistribution'
p516
S'aprioriDistribution'
p517
g517
S'apriori class distribution'
p518
I0
I0
I00
tp519
ag97
asbsS'TFeatureByIM'
p520
(i__main__
ClassDefinition
p521
(dp522
g4
I1
sg5
I01
sg6
g520
sg7
S'TFeatureInducer'
p523
sg9
(lp524
sg11
I00
sg12
(lp525
(S'TIMConstructor'
p526
S'IMconstructor'
p527
g527
S'incompatibility matrix constructor'
p528
I0
I0
I00
tp529
a(S'TClustersFromIM'
p530
S'clustersFromIM'
p531
g531
S'clustering algorithm'
p532
I0
I0
I00
tp533
a(S'int'
p534
S'completion'
p535
g535
S'decides how to determine the class for points not covered by any cluster'
p536
I0
I0
I01
tp537
asbsS'TMeasureAttributeFromProbabilities'
p538
(i__main__
ClassDefinition
p539
(dp540
g4
I1
sg5
I01
sg6
g538
sg7
S'TMeasureAttribute'
p541
sg9
(lp542
sg11
I01
sg12
(lp543
(S'TProbabilityEstimatorConstructor'
p544
S'estimatorConstructor'
p545
g545
S'probability estimator (none by default)'
p546
I0
I0
I00
tp547
a(S'TConditionalProbabilityEstimatorConstructor'
p548
S'conditionalEstimatorConstructor'
p549
g549
S'conditional probability estimator (none by default)'
p550
I0
I0
I00
tp551
a(S'int'
p552
S'unknownsTreatment'
p553
g553
S'treatment of unknown values'
p554
I0
I0
I01
tp555
a(S'int'
p556
S'needs'
p557
g557
S'describes what kind of data is needed for computation'
p558
I0
I0
I01
tp559
a(S'bool'
p560
S'handlesDiscrete'
p561
g561
S'tells whether the measure can handle discrete attributes'
p562
I01
I0
I01
tp563
a(S'bool'
p564
S'handlesContinuous'
p565
g565
S'tells whether the measure can handle continuous attributes'
p566
I01
I0
I01
tp567
asbsS'TProbabilityEstimatorConstructor_relative'
p568
(i__main__
ClassDefinition
p569
(dp570
g4
I1
sg5
I01
sg6
g568
sg7
S'TProbabilityEstimatorConstructor'
p571
sg9
(lp572
sg11
I00
sg12
(lp573
sbsS'TClassifierByLookupTable3'
p574
(i__main__
ClassDefinition
p575
(dp576
g4
I1
sg5
I01
sg6
g574
sg7
S'TClassifierByLookupTable'
p577
sg9
(lp578
sg11
I00
sg12
(lp579
(S'TVariable'
p580
S'variable1'
p581
g581
S'the first attribute used for classification'
p582
I01
I0
I00
tp583
a(S'TVariable'
p584
S'variable2'
p585
g585
S'the second attribute used for classification'
p586
I01
I0
I00
tp587
a(S'TVariable'
p588
S'variable3'
p589
g589
S'the third attribute used for classification'
p590
I01
I0
I00
tp591
a(S'int'
p592
S'noOfValues1'
p593
g593
S'number of values of the first attribute'
p594
I01
I0
I01
tp595
a(S'int'
p596
S'noOfValues2'
p597
g597
S'number of values of the second attribute'
p598
I01
I0
I01
tp599
a(S'int'
p600
S'noOfValues3'
p601
g601
S'number of values of the third attribute'
p602
I01
I0
I01
tp603
a(S'TEFMDataDescription'
p604
S'dataDescription'
p605
g605
S'data description'
p606
I0
I0
I00
tp607
ag75
ag79
ag83
ag87
asbsS'TImputerConstructor_maximal'
p608
(i__main__
ClassDefinition
p609
(dp610
g4
I1
sg5
I01
sg6
g608
sg7
S'TImputerConstructor'
p611
sg9
(lp612
sg11
I00
sg12
(lp613
g151
asbsS'TRuleBeamRefiner'
p614
(i__main__
ClassDefinition
p615
(dp616
g4
I1
sg5
I01
sg6
g614
sg7
S'TOrange'
p617
sg9
(lp618
sg11
I01
sg12
(lp619
sbsS'TEquiDistDiscretizer'
p620
(i__main__
ClassDefinition
p621
(dp622
g4
I1
sg5
I01
sg6
g620
sg7
S'TDiscretizer'
p623
sg9
(lp624
sg11
I00
sg12
(lp625
(S'int'
p626
S'numberOfIntervals'
p627
g627
S'number of intervals'
p628
I0
I0
I01
tp629
a(S'float'
p630
S'firstCut'
p631
g631
S'the first cut-off point'
p632
I0
I0
I01
tp633
a(S'float'
p634
S'step'
p635
g635
S'step (width of interval)'
p636
I0
I0
I01
tp637
ag493
asbsS'TMyClassifier'
p638
(i__main__
ClassDefinition
p639
(dp640
S'extended'
p641
I1
sS'imported'
p642
I0
sS'name'
p643
g638
sS'parent'
p644
S'TClassifier'
p645
sS'abstract'
p646
I00
sS'components'
p647
(lp648
sS'properties'
p649
(lp650
(S'TRandomGenerator'
p651
S'randomGenerator'
p652
g652
S'random generator'
p653
I01
I0
I00
tp654
ag83
ag87
asbsS'TValueFilter_string'
p655
(i__main__
ClassDefinition
p656
(dp657
g4
I1
sg5
I01
sg6
g655
sg7
S'TValueFilter'
p658
sg9
(lp659
sg11
I00
sg12
(lp660
(S'string'
p661
S'min'
p662
(g662
S'ref'
p663
tp664
S' reference value (lower bound for interval operators)'
p665
I0
I0
I01
tp666
a(S'string'
p667
S'max'
p668
g668
S'upper bound for interval operators'
p669
I0
I0
I01
tp670
a(S'int'
p671
S'oper'
p672
g672
S'operator'
p673
I0
I0
I01
tp674
a(S'bool'
p675
S'caseSensitive'
p676
g676
S'if true (default), the operator is case sensitive'
p677
I0
I0
I01
tp678
a(S'int'
p679
S'position'
p680
g680
S"attribute's position in domain"
p681
I0
I0
I01
tp682
a(S'int'
p683
S'acceptSpecial'
p684
g684
S'tells whether a special value (DK, DC...) is accepted (1), rejected (0) or ignored (-1)'
p685
I0
I0
I01
tp686
asbsS'TFindNearest_BruteForce'
p687
(i__main__
ClassDefinition
p688
(dp689
g4
I1
sg5
I01
sg6
g687
sg7
S'TFindNearest'
p690
sg9
(lp691
sg11
I00
sg12
(lp692
(S'TExamplesDistance'
p693
S'distance'
p694
g694
S'metrics'
p695
I0
I0
I00
tp696
a(S'TExampleGenerator'
p697
S'examples'
p698
g698
S'a list of stored examples'
p699
I0
I0
I00
tp700
a(S'int'
p701
S'weightID'
p702
g702
S'weight to use when counting examples'
p703
I0
I0
I01
tp704
a(S'int'
p705
S'distanceID'
p706
g706
S'id of meta attribute where the distance should be stored (0 = no storing)'
p707
I0
I0
I01
tp708
a(S'bool'
p709
S'includeSame'
p710
g710
S'tells whether to include examples that are same as the reference example'
p711
I0
I0
I01
tp712
asbsS'TRuleBeamInitializer'
p713
(i__main__
ClassDefinition
p714
(dp715
g4
I1
sg5
I01
sg6
g713
sg7
S'TOrange'
p716
sg9
(lp717
sg11
I01
sg12
(lp718
sbsS'TMeasureAttribute_relevance'
p719
(i__main__
ClassDefinition
p720
(dp721
g4
I1
sg5
I01
sg6
g719
sg7
S'TMeasureAttributeFromProbabilities'
p722
sg9
(lp723
sg11
I00
sg12
(lp724
g547
ag551
ag555
ag559
ag563
ag567
asbsS'TFilter_hasSpecial'
p725
(i__main__
ClassDefinition
p726
(dp727
g4
I1
sg5
I01
sg6
g725
sg7
S'TFilter'
p728
sg9
(lp729
sg11
I00
sg12
(lp730
g429
ag433
asbsS'TDiscDistribution'
p731
(i__main__
ClassDefinition
p732
(dp733
g4
I1
sg5
I01
sg6
g731
sg7
S'TDistribution'
p734
sg9
(lp735
sg11
I00
sg12
(lp736
(S'TFloatList'
p737
S'variances'
p738
g738
S'variances'
p739
I0
I0
I00
tp740
a(S'TVariable'
p741
S'variable'
p742
g742
S'attribute descriptor (optional)'
p743
I0
I0
I00
tp744
a(S'float'
p745
S'unknowns'
p746
g746
S'number of unknown values'
p747
I0
I0
I01
tp748
a(S'float'
p749
S'abs'
p750
g750
S'sum of frequencies (not including unknown values!)'
p751
I0
I0
I01
tp752
a(S'float'
p753
S'cases'
p754
g754
S"number of cases; as abs, but doesn't change at *= and normalize()"
p755
I0
I0
I01
tp756
a(S'bool'
p757
S'normalized'
p758
g758
S'distribution is normalized'
p759
I0
I0
I01
tp760
a(S'bool'
p761
S'supportsDiscrete'
p762
g762
S'distribution supports discrete interface'
p763
I01
I0
I01
tp764
a(S'bool'
p765
S'supportsContinuous'
p766
g766
S'distribution supports continuous interface'
p767
I01
I0
I01
tp768
a(S'TRandomGenerator'
p769
S'randomGenerator'
p770
g770
S'random generator; initialized when needed, if not given earlier'
p771
I0
I0
I00
tp772
asbsS'TBayesLearner'
p773
(i__main__
ClassDefinition
p774
(dp775
g4
I1
sg5
I01
sg6
g773
sg7
S'TLearner'
p776
sg9
(lp777
sg11
I00
sg12
(lp778
(S'TProbabilityEstimatorConstructor'
p779
S'estimatorConstructor'
p780
g780
S'constructs a probability estimator for P(C)'
p781
I0
I0
I00
tp782
a(S'TConditionalProbabilityEstimatorConstructor'
p783
S'conditionalEstimatorConstructor'
p784
g784
S'constructs a probability estimator for P(C|A) '
p785
I0
I0
I00
tp786
a(S'TConditionalProbabilityEstimatorConstructor'
p787
S'conditionalEstimatorConstructorContinuous'
p788
g788
S'constructs a probability estimator for P(C|A) for continuous attributes'
p789
I0
I0
I00
tp790
a(S'bool'
p791
S'normalizePredictions'
p792
g792
S'instructs learner to construct a classifier that normalizes probabilities'
p793
I0
I0
I01
tp794
a(S'bool'
p795
S'adjustThreshold'
p796
g796
S'adjust probability thresholds (for binary classes only)'
p797
I0
I0
I01
tp798
ag97
asbsS'TIMByRelief'
p799
(i__main__
ClassDefinition
p800
(dp801
g4
I1
sg5
I01
sg6
g799
sg7
S'TIMConstructor'
p802
sg9
(lp803
sg11
I00
sg12
(lp804
(S'TExamplesDistance_Relief'
p805
S'distance'
p806
g806
S'distance measure'
p807
I0
I0
I00
tp808
a(S'float'
p809
S'k'
p810
g810
S'number of neighbours'
p811
I0
I0
I01
tp812
a(S'float'
p813
S'm'
p814
g814
S'number of reference examples'
p815
I0
I0
I01
tp816
a(S'float'
p817
S'kFromColumns'
p818
g818
S'if positive, number of neighbours is #columns*kFromColumns'
p819
I0
I0
I01
tp820
a(S'bool'
p821
S'ignoreSameExample'
p822
g822
S'does not put reference example into M'
p823
I0
I0
I01
tp824
a(S'bool'
p825
S'convertToBinary'
p826
g826
S'convert to binary class (hit-miss)'
p827
I0
I0
I01
tp828
a(S'bool'
p829
S'correctClassFirst'
p830
g830
S'puts the correct class proportion to the first place'
p831
I0
I0
I01
tp832
a(S'bool'
p833
S'allExamples'
p834
g834
S'uses all examples for reference examples'
p835
I0
I0
I01
tp836
a(S'bool'
p837
S'allSameNeighbours'
p838
g838
S'uses all the examples same to the reference as neighbours'
p839
I0
I0
I01
tp840
a(S'bool'
p841
S'recordRowExamples'
p842
g842
S'enables creation of rowExample list'
p843
I0
I0
I01
tp844
asbsS'TConditionalProbabilityEstimator'
p845
(i__main__
ClassDefinition
p846
(dp847
g4
I1
sg5
I01
sg6
g845
sg7
S'TOrange'
p848
sg9
(lp849
sg11
I01
sg12
(lp850
g111
ag115
asbsS'TColumnAssessor_Laplace'
p851
(i__main__
ClassDefinition
p852
(dp853
g4
I1
sg5
I01
sg6
g851
sg7
S'TColumnAssessor'
p854
sg9
(lp855
sg11
I00
sg12
(lp856
sbsS'TPreprocessor_addGaussianNoise'
p857
(i__main__
ClassDefinition
p858
(dp859
g4
I1
sg5
I01
sg6
g857
sg7
S'TPreprocessor'
p860
sg9
(lp861
sg11
I00
sg12
(lp862
(S'TVariableFloatMap'
p863
S'deviations'
p864
g864
S'deviations individual attribute values'
p865
I0
I0
I00
tp866
a(S'float'
p867
S'defaultDeviation'
p868
g868
S'default deviation'
p869
I0
I0
I01
tp870
a(S'TRandomGenerator'
p871
S'randomGenerator'
p872
g872
S'random number generator'
p873
I0
I0
I00
tp874
asbsS'TRuleStoppingCriteria_NegativeDistribution'
p875
(i__main__
ClassDefinition
p876
(dp877
g4
I1
sg5
I01
sg6
g875
sg7
S'TRuleStoppingCriteria'
p878
sg9
(lp879
sg11
I00
sg12
(lp880
sbsS'TTreeSplitConstructor_ExhaustiveBinary'
p881
(i__main__
ClassDefinition
p882
(dp883
g4
I1
sg5
I01
sg6
g881
sg7
S'TTreeSplitConstructor_Measure'
p884
sg9
(lp885
sg11
I00
sg12
(lp886
(S'TMeasureAttribute'
p887
S'measure'
p888
g888
S'attribute quality measure'
p889
I0
I0
I00
tp890
a(S'float'
p891
S'worstAcceptable'
p892
g892
S'the worst acceptable quality of the attribute'
p893
I0
I0
I01
tp894
a(S'float'
p895
S'minSubset'
p896
g896
S'minimal number of examples in a subset'
p897
I0
I0
I01
tp898
asbsS'TTreeClassifier'
p899
(i__main__
ClassDefinition
p900
(dp901
g4
I1
sg5
I01
sg6
g899
sg7
S'TClassifierFD'
p902
sg9
(lp903
sg11
I00
sg12
(lp904
(S'TTreeNode'
p905
S'tree'
p906
g906
S'decision tree'
p907
I0
I0
I00
tp908
a(S'TTreeDescender'
p909
S'descender'
p910
g910
S'object that descends down the tree'
p911
I0
I0
I00
tp912
ag205
ag83
ag87
asbsS'TFilter_compatibleExample'
p913
(i__main__
ClassDefinition
p914
(dp915
g4
I1
sg5
I01
sg6
g913
sg7
S'TFilter'
p916
sg9
(lp917
sg11
I00
sg12
(lp918
(S'TExample'
p919
S'example'
p920
g920
S'example with which examples are compared'
p921
I0
I0
I00
tp922
ag429
ag433
asbsS'TRemoveRedundant'
p923
(i__main__
ClassDefinition
p924
(dp925
g4
I1
sg5
I01
sg6
g923
sg7
S'TOrange'
p926
sg9
(lp927
sg11
I01
sg12
(lp928
(S'bool'
p929
S'keepValues'
p930
g930
S'keep an attribute if number values is only smaller, not one'
p931
I0
I0
I01
tp932
asbsS'TSomeValue'
p933
(i__main__
ClassDefinition
p934
(dp935
g4
I1
sg5
I01
sg6
g933
sg7
S'TOrange'
p936
sg9
(lp937
sg11
I01
sg12
(lp938
sbsS'TRuleClassifierConstructor_firstRule'
p939
(i__main__
ClassDefinition
p940
(dp941
g4
I1
sg5
I01
sg6
g939
sg7
S'TRuleClassifierConstructor'
p942
sg9
(lp943
sg11
I00
sg12
(lp944
sbsS'TLinRegLearner'
p945
(i__main__
ClassDefinition
p946
(dp947
g4
I1
sg5
I01
sg6
g945
sg7
S'TLearner'
p948
sg9
(lp949
sg11
I00
sg12
(lp950
(S'int'
p951
S'iterativeSelection'
p952
g952
S'0 all, 1 forward, 2 backward, 3 stepwise'
p953
I0
I0
I01
tp954
a(S'float'
p955
S'Fin'
p956
g956
S'significance limit for an attribute to enter the model'
p957
I0
I0
I01
tp958
a(S'float'
p959
S'Fout'
p960
g960
S'significance limit for the attribute to be removed'
p961
I0
I0
I01
tp962
a(S'int'
p963
S'maxIterations'
p964
g964
S'maximal number of iterations for stepwise'
p965
I0
I0
I01
tp966
a(S'TImputerConstructor'
p967
S'imputerConstructor'
p968
g968
S'if present, it constructs an imputer for unknown values'
p969
I0
I0
I00
tp970
a(S'TDomainContinuizer'
p971
S'continuizer'
p972
g972
S'if present, specifies the way in which discrete attributes are converted to continuous'
p973
I0
I0
I00
tp974
ag97
asbsS'TStopDistributionClustering_noProfit'
p975
(i__main__
ClassDefinition
p976
(dp977
g4
I1
sg5
I01
sg6
g975
sg7
S'TStopDistributionClustering'
p978
sg9
(lp979
sg11
I00
sg12
(lp980
(S'float'
p981
S'minProfitProportion'
p982
g982
S'minimal allowable profit proportion'
p983
I0
I0
I01
tp984
asbsS'TBiModalDiscretization'
p985
(i__main__
ClassDefinition
p986
(dp987
g4
I1
sg5
I01
sg6
g985
sg7
S'TDiscretization'
p988
sg9
(lp989
sg11
I00
sg12
(lp990
(S'bool'
p991
S'splitInTwo'
p992
g992
S'if true (default), flanks are merged into a single interval'
p993
I0
I0
I01
tp994
asbsS'TIntVariable'
p995
(i__main__
ClassDefinition
p996
(dp997
g4
I1
sg5
I01
sg6
g995
sg7
S'TVariable'
p998
sg9
(lp999
sg11
I00
sg12
(lp1000
(S'int'
p1001
S'startValue'
p1002
g1002
S'lowest value'
p1003
I0
I0
I01
tp1004
a(S'int'
p1005
S'endValue'
p1006
g1006
S'highest value'
p1007
I0
I0
I01
tp1008
ag233
ag237
ag241
ag245
ag249
ag253
ag257
asbsS'TColoredIG'
p1009
(i__main__
ClassDefinition
p1010
(dp1011
g4
I1
sg5
I01
sg6
g1009
sg7
S'TGeneralExampleClustering'
p1012
sg9
(lp1013
sg11
I00
sg12
(lp1014
(S'TIG'
p1015
S'ig'
p1016
g1016
S'incompatibility graph'
p1017
I0
I0
I00
tp1018
a(S'TIntList'
p1019
S'colors'
p1020
g1020
S'colors (one element corresponding to each ig node)'
p1021
I0
I0
I00
tp1022
asbsS'TMeasureAttribute'
p1023
(i__main__
ClassDefinition
p1024
(dp1025
g4
I1
sg5
I01
sg6
g1023
sg7
S'TOrange'
p1026
sg9
(lp1027
sg11
I00
sg12
(lp1028
g559
ag563
ag567
asbsS'TRuleEvaluator'
p1029
(i__main__
ClassDefinition
p1030
(dp1031
g4
I1
sg5
I01
sg6
g1029
sg7
S'TOrange'
p1032
sg9
(lp1033
sg11
I01
sg12
(lp1034
sbsS'TStringVariable'
p1035
(i__main__
ClassDefinition
p1036
(dp1037
g4
I1
sg5
I01
sg6
g1035
sg7
S'TVariable'
p1038
sg9
(lp1039
sg11
I00
sg12
(lp1040
g233
ag237
ag241
ag245
ag249
ag253
ag257
asbsS'TAssessIMQuality'
p1041
(i__main__
ClassDefinition
p1042
(dp1043
g4
I1
sg5
I01
sg6
g1041
sg7
S'TOrange'
p1044
sg9
(lp1045
sg11
I00
sg12
(lp1046
(S'TColumnAssessor'
p1047
S'columnAssessor'
p1048
g1048
S'column quality assessor'
p1049
I0
I0
I00
tp1050
asbsS'TGraphAsTree'
p1051
(i__main__
ClassDefinition
p1052
(dp1053
g4
I1
sg5
I01
sg6
g1051
sg7
S'TGraph'
p1054
sg9
(lp1055
sg11
I00
sg12
(lp1056
(S'int'
p1057
S'nVertices'
p1058
g1058
S'the number of vertices'
p1059
I01
I0
I01
tp1060
a(S'int'
p1061
S'nEdgeTypes'
p1062
g1062
S'the number of edge types'
p1063
I01
I0
I01
tp1064
a(S'bool'
p1065
S'directed'
p1066
g1066
S'directed'
p1067
I01
I0
I01
tp1068
asbsS'TTreeExampleSplitter_IgnoreUnknowns'
p1069
(i__main__
ClassDefinition
p1070
(dp1071
g4
I1
sg5
I01
sg6
g1069
sg7
S'TTreeExampleSplitter'
p1072
sg9
(lp1073
sg11
I00
sg12
(lp1074
sbsS'TProbabilityEstimator_FromDistribution'
p1075
(i__main__
ClassDefinition
p1076
(dp1077
g4
I1
sg5
I01
sg6
g1075
sg7
S'TProbabilityEstimator'
p1078
sg9
(lp1079
sg11
I00
sg12
(lp1080
(S'TDistribution'
p1081
S'probabilities'
p1082
g1082
S'probabilities'
p1083
I0
I0
I00
tp1084
a(S'bool'
p1085
S'supportsDiscrete'
p1086
g1086
S'can estimate probabilities of discrete attributes'
p1087
I01
I0
I01
tp1088
a(S'bool'
p1089
S'supportsContinuous'
p1090
g1090
S'can estimate probabilities of continuous attributes'
p1091
I01
I0
I01
tp1092
asbsS'TTreeDescender_UnknownMergeAsBranchSizes'
p1093
(i__main__
ClassDefinition
p1094
(dp1095
g4
I1
sg5
I01
sg6
g1093
sg7
S'TTreeDescender'
p1096
sg9
(lp1097
sg11
I0
sg12
(lp1098
sbsS'TExamplesDistance'
p1099
(i__main__
ClassDefinition
p1100
(dp1101
g4
I1
sg5
I01
sg6
g1099
sg7
S'TOrange'
p1102
sg9
(lp1103
sg11
I01
sg12
(lp1104
sbsS'TFileExampleGenerator'
p1105
(i__main__
ClassDefinition
p1106
(dp1107
g4
I1
sg5
I01
sg6
g1105
sg7
S'TExampleGenerator'
p1108
sg9
(lp1109
sg11
I01
sg12
(lp1110
g125
ag129
ag133
ag137
ag141
asbsS'TMeasureAttribute_gainRatio'
p1111
(i__main__
ClassDefinition
p1112
(dp1113
g4
I1
sg5
I01
sg6
g1111
sg7
S'TMeasureAttributeFromProbabilities'
p1114
sg9
(lp1115
sg11
I00
sg12
(lp1116
g547
ag551
ag555
ag559
ag563
ag567
asbsS'TLinRegClassifier'
p1117
(i__main__
ClassDefinition
p1118
(dp1119
g4
I1
sg5
I01
sg6
g1117
sg7
S'TClassifierFD'
p1120
sg9
(lp1121
sg11
I00
sg12
(lp1122
(S'TAttributedFloatList'
p1123
S'coefficients'
p1124
g1124
S'coefficients of regression plane'
p1125
I0
I0
I00
tp1126
a(S'TAttributedFloatList'
p1127
S'coefficients_se'
p1128
g1128
S'standard errors of coefficients'
p1129
I0
I0
I00
tp1130
a(S'float'
p1131
S'N'
p1132
g1132
S'number of examples'
p1133
I0
I0
I01
tp1134
a(S'float'
p1135
S'SStot'
p1136
g1136
S'total sum of squares'
p1137
I0
I0
I01
tp1138
a(S'float'
p1139
S'SSres'
p1140
g1140
S'residual sum of squares'
p1141
I0
I0
I01
tp1142
a(S'float'
p1143
S'SSreg'
p1144
g1144
S'sum of squares due to regression'
p1145
I0
I0
I01
tp1146
a(S'float'
p1147
S'MStot'
p1148
g1148
S'total mean squares'
p1149
I0
I0
I01
tp1150
a(S'float'
p1151
S'MSres'
p1152
g1152
S'residual mean square'
p1153
I0
I0
I01
tp1154
a(S'float'
p1155
S'MSreg'
p1156
g1156
S'mean square regression'
p1157
I0
I0
I01
tp1158
a(S'float'
p1159
S'F'
p1160
g1160
S'F statistics for the model'
p1161
I0
I0
I01
tp1162
a(S'float'
p1163
S'Fprob'
p1164
g1164
S'significance of the model (F)'
p1165
I0
I0
I01
tp1166
a(S'float'
p1167
S'R2'
p1168
g1168
S'determination'
p1169
I0
I0
I01
tp1170
a(S'float'
p1171
S'adjR2'
p1172
g1172
S'adjusted determination'
p1173
I0
I0
I01
tp1174
a(S'TImputer'
p1175
S'imputer'
p1176
g1176
S'if present, it imputes unknown values'
p1177
I0
I0
I00
tp1178
a(S'float'
p1179
S'threshold'
p1180
g1180
S'classification threshold (for discrete classes)'
p1181
I0
I0
I01
tp1182
ag205
ag83
ag87
asbsS'TContingencyClassAttr'
p1183
(i__main__
ClassDefinition
p1184
(dp1185
g4
I1
sg5
I01
sg6
g1183
sg7
S'TContingencyClass'
p1186
sg9
(lp1187
sg11
I00
sg12
(lp1188
(S'TVariable'
p1189
S'outerVariable'
p1190
g1190
S'outer attribute'
p1191
I0
I0
I00
tp1192
a(S'TVariable'
p1193
S'innerVariable'
p1194
(g1194
S'variable'
p1195
tp1196
S' inner attribute'
p1197
I0
I0
I00
tp1198
a(S'int'
p1199
S'varType'
p1200
g1200
S'outer attribute type'
p1201
I01
I0
I01
tp1202
a(S'TDistribution'
p1203
S'outerDistribution'
p1204
g1204
S'distribution of values of outer attributes'
p1205
I0
I0
I00
tp1206
a(S'TDistribution'
p1207
S'innerDistribution'
p1208
g1208
S'distribution of values of inner attributes'
p1209
I0
I0
I00
tp1210
asbsS'TMissValuesGenerator'
p1211
(i__main__
ClassDefinition
p1212
(dp1213
g4
I1
sg5
I01
sg6
g1211
sg7
S'TChangeExampleGenerator'
p1214
sg9
(lp1215
sg11
I00
sg12
(lp1216
(S'TIntFloatList'
p1217
S'replaceProbabilities'
p1218
g1218
S"probabilities for replacing attributes' values"
p1219
I0
I0
I00
tp1220
a(S'TRandomGenerator'
p1221
S'randomGenerator'
p1222
g1222
S'random generator'
p1223
I0
I0
I00
tp1224
ag137
ag141
asbsS'TLogRegClassifier'
p1225
(i__main__
ClassDefinition
p1226
(dp1227
g4
I1
sg5
I01
sg6
g1225
sg7
S'TClassifierFD'
p1228
sg9
(lp1229
sg11
I00
sg12
(lp1230
(S'TDomain'
p1231
S'continuizedDomain'
p1232
g1232
S'if absent, there is no continuous attributes in original domain'
p1233
I0
I0
I00
tp1234
a(S'TEFMDataDescription'
p1235
S'dataDescription'
p1236
g1236
S'Data needed for classification in presence of undefined values'
p1237
I0
I0
I00
tp1238
a(S'TAttributedFloatList'
p1239
S'beta'
p1240
g1240
S'estimated beta coefficients for logistic regression'
p1241
I0
I0
I00
tp1242
a(S'TAttributedFloatList'
p1243
S'beta_se'
p1244
g1244
S'estimated standard errors for beta coefficients'
p1245
I0
I0
I00
tp1246
a(S'TAttributedFloatList'
p1247
S'wald_Z'
p1248
g1248
S'Wald Z statstic for beta coefficients'
p1249
I0
I0
I00
tp1250
a(S'TAttributedFloatList'
p1251
S'P'
p1252
g1252
S'estimated significances for beta coefficients'
p1253
I0
I0
I00
tp1254
a(S'float'
p1255
S'likelihood'
p1256
g1256
S"Likelihood: The likelihood function is the function which specifies the probability of the sample observed on the basis of a known model, as a function of the model's parameters. "
p1257
I0
I0
I01
tp1258
a(S'int'
p1259
S'fit_status'
p1260
g1260
S"Tells how the model fitting ended - either regularly (LogRegFitter.OK), or it was interrupted due to one of beta coefficients escaping towards infinity (LogRegFitter.Infinity) or since the values didn't converge (LogRegFitter.Divergence)."
p1261
I0
I0
I01
tp1262
a(S'TImputer'
p1263
S'imputer'
p1264
g1264
S'if present, it imputes unknown values'
p1265
I0
I0
I00
tp1266
ag205
ag83
ag87
asbsS'TEquiDistDiscretization'
p1267
(i__main__
ClassDefinition
p1268
(dp1269
g4
I1
sg5
I01
sg6
g1267
sg7
S'TDiscretization'
p1270
sg9
(lp1271
sg11
I00
sg12
(lp1272
(S'int'
p1273
S'numberOfIntervals'
p1274
g1274
S'number of intervals'
p1275
I0
I0
I01
tp1276
asbsS'TPreprocessor_select'
p1277
(i__main__
ClassDefinition
p1278
(dp1279
g4
I1
sg5
I01
sg6
g1277
sg7
S'TPreprocessor'
p1280
sg9
(lp1281
sg11
I00
sg12
(lp1282
(S'TVarList'
p1283
S'attributes'
p1284
g1284
S'tells which attributes to select'
p1285
I0
I0
I00
tp1286
asbsS'TBasicAttrStat'
p1287
(i__main__
ClassDefinition
p1288
(dp1289
g4
I1
sg5
I01
sg6
g1287
sg7
S'TOrange'
p1290
sg9
(lp1291
sg11
I00
sg12
(lp1292
(S'float'
p1293
S'sum'
p1294
g1294
S'sum of values'
p1295
I01
I0
I01
tp1296
a(S'float'
p1297
S'sum2'
p1298
g1298
S'sum of squares of values'
p1299
I01
I0
I01
tp1300
a(S'float'
p1301
S'n'
p1302
g1302
S'number of examples for which the attribute is defined'
p1303
I01
I0
I01
tp1304
a(S'float'
p1305
S'min'
p1306
g1306
S'the lowest value of the attribute'
p1307
I0
I0
I01
tp1308
a(S'float'
p1309
S'max'
p1310
g1310
S'the highest value of the attribute'
p1311
I0
I0
I01
tp1312
a(S'float'
p1313
S'avg'
p1314
g1314
S'the average value of the attribute'
p1315
I0
I0
I01
tp1316
a(S'float'
p1317
S'dev'
p1318
g1318
S'the deviation of the value of the attribute'
p1319
I0
I0
I01
tp1320
a(S'TVariable'
p1321
S'variable'
p1322
g1322
S'the attribute to which the data applies'
p1323
I0
I0
I00
tp1324
a(S'bool'
p1325
S'holdRecomputation'
p1326
g1326
S'temporarily disables recomputation of avg and dev while adding values'
p1327
I0
I0
I01
tp1328
asbsS'TFilter_disjunction'
p1329
(i__main__
ClassDefinition
p1330
(dp1331
g4
I1
sg5
I01
sg6
g1329
sg7
S'TFilter'
p1332
sg9
(lp1333
sg11
I00
sg12
(lp1334
(S'TFilterList'
p1335
S'filters'
p1336
g1336
S'a list of filters;'
p1337
I0
I0
I00
tp1338
ag429
ag433
asbsS'TMeasureAttribute_gini'
p1339
(i__main__
ClassDefinition
p1340
(dp1341
g4
I1
sg5
I01
sg6
g1339
sg7
S'TMeasureAttributeFromProbabilities'
p1342
sg9
(lp1343
sg11
I00
sg12
(lp1344
g547
ag551
ag555
ag559
ag563
ag567
asbsS'TAttributedFloatList'
p1345
(i__main__
ClassDefinition
p1346
(dp1347
g4
I1
sg5
I01
sg6
g1345
sg7
S'TOrange'
p1348
sg9
(lp1349
sg11
I00
sg12
(lp1350
(S'TVarList'
p1351
S'attributes'
p1352
g1352
S'list of attributes (for indexing)'
p1353
I0
I0
I00
tp1354
asbsS'TIMByRowsByRelief'
p1355
(i__main__
ClassDefinition
p1356
(dp1357
g4
I1
sg5
I01
sg6
g1355
sg7
S'TIMByRowsConstructor'
p1358
sg9
(lp1359
sg11
I00
sg12
(lp1360
(S'float'
p1361
g810
g810
S'number of neighbours'
p1362
I0
I0
I01
tp1363
a(S'float'
p1364
g814
g814
S'number of reference examples'
p1365
I0
I0
I01
tp1366
a(S'float'
p1367
S'kFromColumns'
p1368
g1368
S'if positive, number of neighbours is #columns*kFromColumns'
p1369
I0
I0
I01
tp1370
a(S'bool'
p1371
S'ignoreSameExample'
p1372
g1372
S'does not put reference example into M'
p1373
I0
I0
I01
tp1374
a(S'bool'
p1375
S'convertToBinary'
p1376
g1376
S'convert to binary class (hit-miss)'
p1377
I0
I0
I01
tp1378
a(S'bool'
p1379
S'correctClassFirst'
p1380
g1380
S'puts the correct class proportion to the first place'
p1381
I0
I0
I01
tp1382
a(S'bool'
p1383
S'allExamples'
p1384
g1384
S'uses all examples for reference examples'
p1385
I0
I0
I01
tp1386
a(S'bool'
p1387
S'allSameNeighbours'
p1388
g1388
S'uses all the examples same to the reference as neighbours'
p1389
I0
I0
I01
tp1390
asbsS'TFindNearestConstructor'
p1391
(i__main__
ClassDefinition
p1392
(dp1393
g4
I1
sg5
I01
sg6
g1391
sg7
S'TOrange'
p1394
sg9
(lp1395
sg11
I01
sg12
(lp1396
(S'TExamplesDistanceConstructor'
p1397
S'distanceConstructor'
p1398
g1398
S'metrics'
p1399
I0
I0
I00
tp1400
a(S'bool'
p1401
S'includeSame'
p1402
g1402
S'tells whether to include examples that are same as the reference example'
p1403
I0
I0
I01
tp1404
asbsS'TRuleClassifier_firstRule'
p1405
(i__main__
ClassDefinition
p1406
(dp1407
g4
I1
sg5
I01
sg6
g1405
sg7
S'TRuleClassifier'
p1408
sg9
(lp1409
sg11
I00
sg12
(lp1410
(S'TDistribution'
p1411
S'prior'
p1412
g1412
S'prior distribution'
p1413
I0
I0
I00
tp1414
a(S'TRuleList'
p1415
S'rules'
p1416
g1416
S''
p1417
I0
I0
I00
tp1418
a(S'TExampleTable'
p1419
S'examples'
p1420
g1420
g1417
I0
I0
I00
tp1421
ag83
ag87
asbsS'TColumnAssessor'
p1422
(i__main__
ClassDefinition
p1423
(dp1424
g4
I1
sg5
I01
sg6
g1422
sg7
S'TOrange'
p1425
sg9
(lp1426
sg11
I01
sg12
(lp1427
sbsS'TComputeDomainContingency_Preprocessor'
p1428
(i__main__
ClassDefinition
p1429
(dp1430
g4
I1
sg5
I01
sg6
g1428
sg7
S'TComputeDomainContingency'
p1431
sg9
(lp1432
sg11
I00
sg12
(lp1433
(S'TPreprocessor'
p1434
S'preprocessor'
p1435
g1435
S'preprocesses the exmaples (see the manual for restrictions!)'
p1436
I0
I0
I00
tp1437
a(S'bool'
p1438
S'resultInOriginalDomain'
p1439
g1439
S'tells whether the resulting DomainContingency should consist of original attributes'
p1440
I0
I0
I01
tp1441
ag25
asbsS'TMeasureAttribute_MSE'
p1442
(i__main__
ClassDefinition
p1443
(dp1444
g4
I1
sg5
I01
sg6
g1442
sg7
S'TMeasureAttribute'
p1445
sg9
(lp1446
sg11
I00
sg12
(lp1447
(S'float'
p1448
g814
g814
S'm for m-estimate'
p1449
I0
I0
I01
tp1450
a(S'int'
p1451
S'unknownsTreatment'
p1452
g1452
S'treatment of unknown values'
p1453
I0
I0
I01
tp1454
ag559
ag563
ag567
asbsS'TIntervalDiscretizer'
p1455
(i__main__
ClassDefinition
p1456
(dp1457
g4
I1
sg5
I01
sg6
g1455
sg7
S'TDiscretizer'
p1458
sg9
(lp1459
sg11
I00
sg12
(lp1460
(S'TFloatList'
p1461
S'points'
p1462
g1462
S'cut-off points'
p1463
I0
I0
I00
tp1464
ag493
asbsS'TImputer_asValue'
p1465
(i__main__
ClassDefinition
p1466
(dp1467
g4
I1
sg5
I01
sg6
g1465
sg7
S'TImputer'
p1468
sg9
(lp1469
sg11
I00
sg12
(lp1470
(S'TDomain'
p1471
S'domain'
p1472
g1472
S'domain to which the values are converted'
p1473
I0
I0
I00
tp1474
a(S'TExample'
p1475
S'defaults'
p1476
g1476
S'values to impute instead of missing ones - for continuous attributes only!'
p1477
I0
I0
I00
tp1478
asbsS'TDomainContinuizer'
p1479
(i__main__
ClassDefinition
p1480
(dp1481
g4
I1
sg5
I01
sg6
g1479
sg7
S'TOrange'
p1482
sg9
(lp1483
sg11
I00
sg12
(lp1484
(S'bool'
p1485
S'zeroBased'
p1486
g1486
S'if true (default) it gives values 0.0 and 1.0; else -1.0 and 1.0, 0.0 for undefined'
p1487
I0
I0
I01
tp1488
a(S'int'
p1489
S'continuousTreatment'
p1490
g1490
S'0-leave as they are, 1-divide by span, 1-normalize'
p1491
I0
I0
I01
tp1492
a(S'int'
p1493
S'multinomialTreatment'
p1494
g1494
S'0-lowest value, 1-most frequent (or baseValue), 2-n binary, 3-ignore, 4-error, 5-convert as ordinal, 6-ordinal,normalized'
p1495
I0
I0
I01
tp1496
a(S'int'
p1497
S'classTreatment'
p1498
g1498
S'3-leave as is unless target is given, 4-error if not continuous nor binary nor target given, 5-convert as ordinal (unless target given)'
p1499
I0
I0
I01
tp1500
asbsS'TNormalizeContinuous'
p1501
(i__main__
ClassDefinition
p1502
(dp1503
g4
I1
sg5
I01
sg6
g1501
sg7
S'TTransformValue'
p1504
sg9
(lp1505
sg11
I00
sg12
(lp1506
(S'float'
p1507
S'average'
p1508
g1508
S'the average value'
p1509
I0
I0
I01
tp1510
a(S'float'
p1511
S'span'
p1512
g1512
S'the value span'
p1513
I0
I0
I01
tp1514
ag493
asbsS'TPNN'
p1515
(i__main__
ClassDefinition
p1516
(dp1517
g4
I1
sg5
I01
sg6
g1515
sg7
S'TClassifierFD'
p1518
sg9
(lp1519
sg11
I00
sg12
(lp1520
(S'int'
p1521
S'dimensions'
p1522
g1522
S'the number of dimensions'
p1523
I01
I0
I01
tp1524
a(S'TFloatList'
p1525
S'offsets'
p1526
g1526
S'offsets to subtract from the attribute values'
p1527
I0
I0
I00
tp1528
a(S'TFloatList'
p1529
S'normalizers'
p1530
g1530
S'number to divide the values by'
p1531
I0
I0
I00
tp1532
a(S'TFloatList'
p1533
S'averages'
p1534
g1534
S'numbers to use instead of the missing'
p1535
I0
I0
I00
tp1536
a(S'bool'
p1537
S'normalizeExamples'
p1538
g1538
S'if true, attribute values are divided to sum up to 1'
p1539
I0
I0
I01
tp1540
a(S'int'
p1541
S'nExamples'
p1542
g1542
S'the number of examples'
p1543
I01
I0
I01
tp1544
a(S'int'
p1545
S'law'
p1546
g1546
S'law'
p1547
I0
I0
I01
tp1548
ag205
ag83
ag87
asbsS'TBiModalDiscretizer'
p1549
(i__main__
ClassDefinition
p1550
(dp1551
g4
I1
sg5
I01
sg6
g1549
sg7
S'TDiscretizer'
p1552
sg9
(lp1553
sg11
I00
sg12
(lp1554
(S'float'
p1555
S'low'
p1556
g1556
S'low threshold'
p1557
I0
I0
I01
tp1558
a(S'float'
p1559
S'high'
p1560
g1560
S'high threshold'
p1561
I0
I0
I01
tp1562
ag493
asbsS'TExamplesDistanceConstructor_Euclidean'
p1563
(i__main__
ClassDefinition
p1564
(dp1565
g4
I1
sg5
I01
sg6
g1563
sg7
S'TExamplesDistanceConstructor_Normalized'
p1566
sg9
(lp1567
sg11
I00
sg12
(lp1568
(S'bool'
p1569
S'normalize'
p1570
g1570
S'tells whether to normalize distances between attributes'
p1571
I0
I0
I01
tp1572
a(S'bool'
p1573
S'ignoreUnknowns'
p1574
g1574
S'if true (default: false) unknown values are ignored in computation'
p1575
I0
I0
I01
tp1576
a(S'bool'
p1577
S'ignoreClass'
p1578
g1578
S'if true (default), class value is ignored when computing distances'
p1579
I0
I0
I01
tp1580
asbsS'TContingencyAttrAttr'
p1581
(i__main__
ClassDefinition
p1582
(dp1583
g4
I1
sg5
I01
sg6
g1581
sg7
S'TContingency'
p1584
sg9
(lp1585
sg11
I00
sg12
(lp1586
g1192
ag1198
ag1202
ag1206
ag1210
asbsS'TRuleBeamRefiner_Selector'
p1587
(i__main__
ClassDefinition
p1588
(dp1589
g4
I1
sg5
I01
sg6
g1587
sg7
S'TRuleBeamRefiner'
p1590
sg9
(lp1591
sg11
I00
sg12
(lp1592
(S'TDiscretization'
p1593
S'discretization'
p1594
g1594
S'discretization for continuous attributes'
p1595
I0
I0
I00
tp1596
asbsS'TProbabilityEstimatorConstructor_Laplace'
p1597
(i__main__
ClassDefinition
p1598
(dp1599
g4
I1
sg5
I01
sg6
g1597
sg7
S'TProbabilityEstimatorConstructor'
p1600
sg9
(lp1601
sg11
I00
sg12
(lp1602
(S'float'
p1603
S'l'
p1604
g1604
S'number of examples added to each class (default: 1)'
p1605
I0
I0
I01
tp1606
a(S'bool'
p1607
S'renormalize'
p1608
g1608
S'computes the estimate on the original (not the normalized) distribution'
p1609
I0
I0
I01
tp1610
asbsS'TClassifierForLinearWeight'
p1611
(i__main__
ClassDefinition
p1612
(dp1613
g4
I1
sg5
I01
sg6
g1611
sg7
S'TClassifier'
p1614
sg9
(lp1615
sg11
I00
sg12
(lp1616
(S'int'
p1617
S'whichID'
p1618
g1618
S'Id of meta variable for time'
p1619
I0
I0
I01
tp1620
a(S'TVariable'
p1621
S'outcomeVar'
p1622
g1622
S'outcome variable'
p1623
I0
I0
I00
tp1624
a(S'int'
p1625
S'failIndex'
p1626
g1626
S"index of 'fail' value"
p1627
I0
I0
I01
tp1628
a(S'float'
p1629
S'maxTime'
p1630
g1630
S'maximal time'
p1631
I0
I0
I01
tp1632
ag83
ag87
asbsS'TExamplesDistance_Relief'
p1633
(i__main__
ClassDefinition
p1634
(dp1635
g4
I1
sg5
I01
sg6
g1633
sg7
S'TExamplesDistance'
p1636
sg9
(lp1637
sg11
I00
sg12
(lp1638
(S'TDomainDistributions'
p1639
S'distributions'
p1640
g1640
S"distributions of attributes' values"
p1641
I0
I0
I00
tp1642
a(S'TAttributedFloatList'
p1643
S'averages'
p1644
g1644
S'average values of attributes'
p1645
I0
I0
I00
tp1646
a(S'TAttributedFloatList'
p1647
S'normalizations'
p1648
g1648
S"ranges of attributes' values"
p1649
I0
I0
I00
tp1650
a(S'TAttributedFloatList'
p1651
S'bothSpecial'
p1652
g1652
S'distance if both values of both attributes are undefined'
p1653
I0
I0
I00
tp1654
asbsS'TExamplesDistance_Manhattan'
p1655
(i__main__
ClassDefinition
p1656
(dp1657
g4
I1
sg5
I01
sg6
g1655
sg7
S'TExamplesDistance_Normalized'
p1658
sg9
(lp1659
sg11
I00
sg12
(lp1660
g323
ag327
ag331
ag335
ag339
ag343
ag347
asbsS'TExamplesDistanceConstructor_Manhattan'
p1661
(i__main__
ClassDefinition
p1662
(dp1663
g4
I1
sg5
I01
sg6
g1661
sg7
S'TExamplesDistanceConstructor_Normalized'
p1664
sg9
(lp1665
sg11
I00
sg12
(lp1666
g1572
ag1576
ag1580
asbsS'TTreeDescender'
p1667
(i__main__
ClassDefinition
p1668
(dp1669
g4
I1
sg5
I01
sg6
g1667
sg7
S'TOrange'
p1670
sg9
(lp1671
sg11
I01
sg12
(lp1672
sbsS'TColumnAssessor_Measure'
p1673
(i__main__
ClassDefinition
p1674
(dp1675
g4
I1
sg5
I01
sg6
g1673
sg7
S'TColumnAssessor'
p1676
sg9
(lp1677
sg11
I00
sg12
(lp1678
(S'TMeasureAttribute'
p1679
S'measure'
p1680
g1680
S'attribute quality measure'
p1681
I0
I0
I00
tp1682
asbsS'TIMBlurer'
p1683
(i__main__
ClassDefinition
p1684
(dp1685
g4
I1
sg5
I01
sg6
g1683
sg7
S'TIMByRowsPreprocessor'
p1686
sg9
(lp1687
sg11
I00
sg12
(lp1688
(S'float'
p1689
S'weight'
p1690
g1690
S'weight of neighbours'
p1691
I0
I0
I01
tp1692
a(S'float'
p1693
S'origWeight'
p1694
g1694
S'weight of original row'
p1695
I0
I0
I01
tp1696
a(S'TFloatList'
p1697
S'attrWeights'
p1698
g1698
S'weights by individual (different) attributes'
p1699
I0
I0
I00
tp1700
a(S'bool'
p1701
S'adjustOrigWeight'
p1702
g1702
S'uses 1-weight(s) for weight of original row'
p1703
I0
I0
I01
tp1704
a(S'bool'
p1705
S'onlyEmpty'
p1706
g1706
S'blurs only empty cells'
p1707
I0
I0
I01
tp1708
asbsS'TStopIMClusteringByAssessor_noBigChange'
p1709
(i__main__
ClassDefinition
p1710
(dp1711
g4
I1
sg5
I01
sg6
g1709
sg7
S'TStopIMClusteringByAssessor'
p1712
sg9
(lp1713
sg11
I00
sg12
(lp1714
sbsS'TDiscretizedDomain'
p1715
(i__main__
ClassDefinition
p1716
(dp1717
g4
I1
sg5
I01
sg6
g1715
sg7
S'TDomain'
p1718
sg9
(lp1719
sg11
I00
sg12
(lp1720
(S'TDiscretization'
p1721
S'defaultDiscretization'
p1722
g1722
S'default discretization'
p1723
I0
I0
I00
tp1724
a(S'int'
p1725
S'defaultInt'
p1726
g1726
S'default number of intervals'
p1727
I0
I0
I01
tp1728
a(S'int'
p1729
S'weight'
p1730
g1730
S'id of attribute with weight'
p1731
I0
I0
I01
tp1732
a(S'TVariable'
p1733
S'classVar'
p1734
g1734
S'class variable'
p1735
I01
I0
I00
tp1736
a(S'TVarList'
p1737
S'attributes'
p1738
g1738
S'list of attributes, excluding the class'
p1739
I01
I0
I00
tp1740
a(S'TVarList'
p1741
S'variables'
p1742
g1742
S'list of attributes, including the class at the end of the list'
p1743
I01
I0
I00
tp1744
a(S'int'
p1745
S'version'
p1746
g1746
S"unique version identifier; it's changed each time a domain is changed"
p1747
I01
I0
I01
tp1748
asbsS'TC45Learner'
p1749
(i__main__
ClassDefinition
p1750
(dp1751
g4
I1
sg5
I01
sg6
g1749
sg7
S'TLearner'
p1752
sg9
(lp1753
sg11
I00
sg12
(lp1754
(S'bool'
p1755
S'gainRatio'
p1756
(g1756
S'g'
p1757
tp1758
S' use gain ratio (instead of information gain)'
p1759
I0
I0
I01
tp1760
a(S'bool'
p1761
S'subset'
p1762
(g1762
S's'
p1763
tp1764
S' use subsetting'
p1765
I0
I0
I01
tp1766
a(S'bool'
p1767
S'batch'
p1768
(g1768
S'b'
p1769
tp1770
S' batch'
p1771
I0
I0
I01
tp1772
a(S'bool'
p1773
S'probThresh'
p1774
(g1774
S'p'
p1775
tp1776
S' probability threshold'
p1777
I0
I0
I01
tp1778
a(S'int'
p1779
S'minObjs'
p1780
(g1780
g814
tp1781
S' minimal number of objects (examples) in leaves'
p1782
I0
I0
I01
tp1783
a(S'int'
p1784
S'window'
p1785
(g1785
S'w'
p1786
tp1787
S' window'
p1788
I0
I0
I01
tp1789
a(S'int'
p1790
S'increment'
p1791
(g1791
S'i'
p1792
tp1793
S' increment'
p1794
I0
I0
I01
tp1795
a(S'float'
p1796
S'cf'
p1797
(g1797
S'c'
p1798
tp1799
S' cf'
p1800
I0
I0
I01
tp1801
a(S'int'
p1802
S'trials'
p1803
(g1803
S't'
p1804
tp1805
S' trials'
p1806
I0
I0
I01
tp1807
a(S'bool'
p1808
S'prune'
p1809
g1809
S'return pruned tree'
p1810
I0
I0
I01
tp1811
a(S'bool'
p1812
S'convertToOrange'
p1813
g1813
S'return TreeClassifier instead of C45TreeClassifier'
p1814
I0
I0
I01
tp1815
a(S'bool'
p1816
S'storeExamples'
p1817
g1817
S'stores examples when (if) converting to TreeClassifier'
p1818
I0
I0
I01
tp1819
a(S'bool'
p1820
S'storeContingencies'
p1821
g1821
S'stores contingencies when (if) converting to TreeClassifier'
p1822
I0
I0
I01
tp1823
ag97
asbsS'TAttributedBoolList'
p1824
(i__main__
ClassDefinition
p1825
(dp1826
g4
I1
sg5
I01
sg6
g1824
sg7
g1348
sg9
(lp1827
sg11
I00
sg12
(lp1828
(S'TVarList'
p1829
S'attributes'
p1830
g1830
S'list of attributes (for indexing)'
p1831
I0
I0
I00
tp1832
asbsS'TRuleStoppingCriteria'
p1833
(i__main__
ClassDefinition
p1834
(dp1835
g4
I1
sg5
I01
sg6
g1833
sg7
S'TOrange'
p1836
sg9
(lp1837
sg11
I01
sg12
(lp1838
sbsS'TPreprocessor_dropMissingClasses'
p1839
(i__main__
ClassDefinition
p1840
(dp1841
g4
I1
sg5
I01
sg6
g1839
sg7
S'TPreprocessor'
p1842
sg9
(lp1843
sg11
I00
sg12
(lp1844
sbsS'TkNNClassifier'
p1845
(i__main__
ClassDefinition
p1846
(dp1847
g4
I1
sg5
I01
sg6
g1845
sg7
S'TClassifierFD'
p1848
sg9
(lp1849
sg11
I00
sg12
(lp1850
(S'TFindNearest'
p1851
S'findNearest'
p1852
g1852
g1417
I0
I0
I00
tp1853
a(S'float'
p1854
g810
g810
S'number of neighbours'
p1855
I0
I0
I01
tp1856
a(S'bool'
p1857
S'rankWeight'
p1858
g1858
S'enable weighting by ranks'
p1859
I0
I0
I01
tp1860
a(S'int'
p1861
S'weightID'
p1862
g1862
S'id of meta-attribute with weight'
p1863
I0
I0
I01
tp1864
ag205
ag83
ag87
asbsS'TMeasureAttribute_info'
p1865
(i__main__
ClassDefinition
p1866
(dp1867
g4
I1
sg5
I01
sg6
g1865
sg7
S'TMeasureAttributeFromProbabilities'
p1868
sg9
(lp1869
sg11
I00
sg12
(lp1870
g547
ag551
ag555
ag559
ag563
ag567
asbsS'TRuleBeamCandidateSelector_TakeAll'
p1871
(i__main__
ClassDefinition
p1872
(dp1873
g4
I1
sg5
I01
sg6
g1871
sg7
S'TRuleBeamCandidateSelector'
p1874
sg9
(lp1875
sg11
I00
sg12
(lp1876
sbsS'TExamplesDistanceConstructor_Relief'
p1877
(i__main__
ClassDefinition
p1878
(dp1879
g4
I1
sg5
I01
sg6
g1877
sg7
S'TExamplesDistanceConstructor'
p1880
sg9
(lp1881
sg11
I00
sg12
(lp1882
g1580
asbsS'TOrange'
p1883
(i__main__
ClassDefinition
p1884
(dp1885
g4
I1
sg5
I01
sg6
g1883
sg7
Nsg9
(lp1886
sg11
I00
sg12
(lp1887
sbsS'TRuleValidator'
p1888
(i__main__
ClassDefinition
p1889
(dp1890
g4
I1
sg5
I01
sg6
g1888
sg7
S'TOrange'
p1891
sg9
(lp1892
sg11
I01
sg12
(lp1893
sbsS'TColorIG'
p1894
(i__main__
ClassDefinition
p1895
(dp1896
g4
I1
sg5
I01
sg6
g1894
sg7
S'TOrange'
p1897
sg9
(lp1898
sg11
I01
sg12
(lp1899
sbsS'TRuleValidator_Python'
p1900
(i__main__
ClassDefinition
p1901
(dp1902
g4
I1
sg5
I01
sg6
g1900
sg7
S'TRuleValidator'
p1903
sg9
(lp1904
sg11
I00
sg12
(lp1905
sbsS'TIMByRowsBySorting'
p1906
(i__main__
ClassDefinition
p1907
(dp1908
g4
I1
sg5
I01
sg6
g1906
sg7
S'TIMByRowsConstructor'
p1909
sg9
(lp1910
sg11
I00
sg12
(lp1911
sbsS'TAssociationLearner'
p1912
(i__main__
ClassDefinition
p1913
(dp1914
g4
I1
sg5
I01
sg6
g1912
sg7
S'TLearner'
p1915
sg9
(lp1916
sg11
I00
sg12
(lp1917
(S'float'
p1918
S'confidence'
p1919
g1919
S'required confidence'
p1920
I0
I0
I01
tp1921
a(S'float'
p1922
S'support'
p1923
g1923
S'required support'
p1924
I0
I0
I01
tp1925
a(S'int'
p1926
S'voteWeight'
p1927
g1927
S'vote weight (s=support, c=confidence, p=product)'
p1928
I0
I0
I01
tp1929
a(S'int'
p1930
S'maxItemSets'
p1931
g1931
S'maximal number of itemsets (increase if you want)'
p1932
I0
I0
I01
tp1933
ag97
asbsS'TRuleBeamInitializer_Python'
p1934
(i__main__
ClassDefinition
p1935
(dp1936
g4
I1
sg5
I01
sg6
g1934
sg7
S'TRuleBeamInitializer'
p1937
sg9
(lp1938
sg11
I00
sg12
(lp1939
sbsS'TDistributionAssessor'
p1940
(i__main__
ClassDefinition
p1941
(dp1942
g4
I1
sg5
I01
sg6
g1940
sg7
S'TOrange'
p1943
sg9
(lp1944
sg11
I01
sg12
(lp1945
sbsS'TRuleCovererAndRemover_Python'
p1946
(i__main__
ClassDefinition
p1947
(dp1948
g4
I1
sg5
I01
sg6
g1946
sg7
S'TRuleCovererAndRemover'
p1949
sg9
(lp1950
sg11
I00
sg12
(lp1951
sbsS'TMeasureAttribute_gainRatioA'
p1952
(i__main__
ClassDefinition
p1953
(dp1954
g4
I1
sg5
I01
sg6
g1952
sg7
S'TMeasureAttribute_gainRatio'
p1955
sg9
(lp1956
sg11
I00
sg12
(lp1957
g547
ag551
ag555
ag559
ag563
ag567
asbsS'TConditionalProbabilityEstimatorConstructor_ByRows'
p1958
(i__main__
ClassDefinition
p1959
(dp1960
g4
I1
sg5
I01
sg6
g1958
sg7
S'TConditionalProbabilityEstimatorConstructor'
p1961
sg9
(lp1962
sg11
I00
sg12
(lp1963
(S'TProbabilityEstimatorConstructor'
p1964
S'estimatorConstructor'
p1965
g1965
S'ProbabilityEstimator to be used '
p1966
I0
I0
I00
tp1967
asbsS'TCartesianClassifier'
p1968
(i__main__
ClassDefinition
p1969
(dp1970
g4
I1
sg5
I01
sg6
g1968
sg7
S'TClassifierFD'
p1971
sg9
(lp1972
sg11
I00
sg12
(lp1973
g205
ag83
ag87
asbsS'TTreeSplitConstructor'
p1974
(i__main__
ClassDefinition
p1975
(dp1976
g4
I1
sg5
I01
sg6
g1974
sg7
S'TOrange'
p1977
sg9
(lp1978
sg11
I01
sg12
(lp1979
g898
asbsS'TTreeDescender_UnknownToBranch'
p1980
(i__main__
ClassDefinition
p1981
(dp1982
g4
I1
sg5
I01
sg6
g1980
sg7
g1096
sg9
(lp1983
sg11
I0
sg12
(lp1984
sbsS'TSubsetsGenerator_constSize'
p1985
(i__main__
ClassDefinition
p1986
(dp1987
g4
I1
sg5
I01
sg6
g1985
sg7
S'TSubsetsGenerator'
p1988
sg9
(lp1989
sg11
I00
sg12
(lp1990
(S'int'
p1991
S'B'
p1992
g1992
S'subset size'
p1993
I0
I0
I01
tp1994
ag183
asbsS'TColorIG_MCF'
p1995
(i__main__
ClassDefinition
p1996
(dp1997
g4
I1
sg5
I01
sg6
g1995
sg7
S'TColorIG'
p1998
sg9
(lp1999
sg11
I00
sg12
(lp2000
sbsS'TTreeSplitConstructor_Attribute'
p2001
(i__main__
ClassDefinition
p2002
(dp2003
g4
I1
sg5
I01
sg6
g2001
sg7
S'TTreeSplitConstructor_Measure'
p2004
sg9
(lp2005
sg11
I00
sg12
(lp2006
g890
ag894
ag898
asbsS'TRemoveRedundantByInduction'
p2007
(i__main__
ClassDefinition
p2008
(dp2009
g4
I1
sg5
I01
sg6
g2007
sg7
S'TRemoveRedundant'
p2010
sg9
(lp2011
sg11
I00
sg12
(lp2012
(S'TFeatureInducer'
p2013
S'featureReducer'
p2014
g2014
S'feature construction algorithm'
p2015
I0
I0
I00
tp2016
a(S'TMeasureAttribute'
p2017
S'measure'
p2018
g2018
S'measure for initial ordering of attributes'
p2019
I0
I0
I00
tp2020
a(S'TDiscretization'
p2021
S'discretization'
p2022
g2022
S'discretization method'
p2023
I0
I0
I00
tp2024
ag932
asbsS'TFilter_conjunction'
p2025
(i__main__
ClassDefinition
p2026
(dp2027
g4
I1
sg5
I01
sg6
g2025
sg7
S'TFilter'
p2028
sg9
(lp2029
sg11
I00
sg12
(lp2030
(S'TFilterList'
p2031
S'filters'
p2032
g2032
S'a list of filters;'
p2033
I0
I0
I00
tp2034
ag429
ag433
asbsS'TExampleForMissing'
p2035
(i__main__
ClassDefinition
p2036
(dp2037
g4
I1
sg5
I01
sg6
g2035
sg7
S'TExample'
p2038
sg9
(lp2039
sg11
I00
sg12
(lp2040
(S'TEFMDataDescription'
p2041
S'dataDescription'
p2042
g2042
S'data description'
p2043
I0
I0
I00
tp2044
a(S'TDomain'
p2045
S'domain'
p2046
g2046
S"Example's domain"
p2047
I01
I0
I00
tp2048
asbsS'TRuleBeamFilter'
p2049
(i__main__
ClassDefinition
p2050
(dp2051
g4
I1
sg5
I01
sg6
g2049
sg7
S'TOrange'
p2052
sg9
(lp2053
sg11
I01
sg12
(lp2054
sbsS'TBayesClassifier'
p2055
(i__main__
ClassDefinition
p2056
(dp2057
g4
I1
sg5
I01
sg6
g2055
sg7
S'TClassifierFD'
p2058
sg9
(lp2059
sg11
I00
sg12
(lp2060
(S'TDistribution'
p2061
S'distribution'
p2062
g2062
S'class distributions (P(C))'
p2063
I0
I0
I00
tp2064
a(S'TDomainContingency'
p2065
S'conditionalDistributions'
p2066
g2066
S'conditional distributions, P(C|A)'
p2067
I0
I0
I00
tp2068
a(S'TProbabilityEstimator'
p2069
S'estimator'
p2070
g2070
S'a probability estimator for P(C)'
p2071
I0
I0
I00
tp2072
a(S'TConditionalProbabilityEstimatorList'
p2073
S'conditionalEstimators'
p2074
g2074
S'a probability estimator for P(C|A)'
p2075
I0
I0
I00
tp2076
a(S'bool'
p2077
S'normalizePredictions'
p2078
g2078
S'if true, classifier will normalize predictions'
p2079
I0
I0
I01
tp2080
a(S'float'
p2081
S'threshold'
p2082
g2082
S'threshold probability for class 1 (for binary classes only)'
p2083
I0
I0
I01
tp2084
ag205
ag83
ag87
asbsS'TGraph'
p2085
(i__main__
ClassDefinition
p2086
(dp2087
g4
I1
sg5
I01
sg6
g2085
sg7
S'TOrange'
p2088
sg9
(lp2089
sg11
I01
sg12
(lp2090
g1060
ag1064
ag1068
asbsS'TPreprocessor_addClassWeight'
p2091
(i__main__
ClassDefinition
p2092
(dp2093
g4
I1
sg5
I01
sg6
g2091
sg7
S'TPreprocessor'
p2094
sg9
(lp2095
sg11
I00
sg12
(lp2096
(S'TFloatList'
p2097
S'classWeights'
p2098
g2098
S'weights of examples of particular classes'
p2099
I0
I0
I00
tp2100
a(S'bool'
p2101
S'equalize'
p2102
g2102
S'reweight examples to equalize class proportions'
p2103
I0
I0
I01
tp2104
a(S'TRandomGenerator'
p2105
S'randomGenerator'
p2106
g2106
S'random number generator'
p2107
I0
I0
I00
tp2108
asbsS'TStopIMClusteringByAssessor'
p2109
(i__main__
ClassDefinition
p2110
(dp2111
g4
I1
sg5
I01
sg6
g2109
sg7
S'TOrange'
p2112
sg9
(lp2113
sg11
I01
sg12
(lp2114
sbsS'TValueFilter_continuous'
p2115
(i__main__
ClassDefinition
p2116
(dp2117
g4
I1
sg5
I01
sg6
g2115
sg7
S'TValueFilter'
p2118
sg9
(lp2119
sg11
I00
sg12
(lp2120
(S'float'
p2121
S'min'
p2122
(g2122
S'ref'
p2123
tp2124
S' reference value (lower bound for interval operators)'
p2125
I0
I0
I01
tp2126
a(S'float'
p2127
S'max'
p2128
g2128
S'upper bound for interval operators'
p2129
I0
I0
I01
tp2130
a(S'bool'
p2131
S'outside'
p2132
g2132
S'obsolete: if true, the filter accepts the values outside the interval, not inside'
p2133
I0
I0
I01
tp2134
a(S'int'
p2135
S'oper'
p2136
g2136
S'operator'
p2137
I0
I0
I01
tp2138
ag682
ag686
asbsS'TAssociationRule'
p2139
(i__main__
ClassDefinition
p2140
(dp2141
g4
I1
sg5
I01
sg6
g2139
sg7
S'TOrange'
p2142
sg9
(lp2143
sg11
I00
sg12
(lp2144
(S'TExample'
p2145
S'left'
p2146
g2146
S'left side of the rule'
p2147
I0
I0
I00
tp2148
a(S'TExample'
p2149
S'right'
p2150
g2150
S'right side of the rule'
p2151
I0
I0
I00
tp2152
a(S'float'
p2153
S'support'
p2154
g2154
S'support for the rule'
p2155
I0
I0
I01
tp2156
a(S'float'
p2157
S'confidence'
p2158
g2158
S'confidence of the rule'
p2159
I0
I0
I01
tp2160
a(S'float'
p2161
S'coverage'
p2162
g2162
S"rule's coverage"
p2163
I0
I0
I01
tp2164
a(S'float'
p2165
S'strength'
p2166
g2166
S"rule's strength"
p2167
I0
I0
I01
tp2168
a(S'float'
p2169
S'lift'
p2170
g2170
S"rule's lift"
p2171
I0
I0
I01
tp2172
a(S'float'
p2173
S'leverage'
p2174
g2174
S"rule's leverage"
p2175
I0
I0
I01
tp2176
a(S'float'
p2177
S'nAppliesLeft'
p2178
g2178
S"number of examples covered by the rule's left side "
p2179
I0
I0
I01
tp2180
a(S'float'
p2181
S'nAppliesRight'
p2182
g2182
S"number of examples covered by the rule's right side "
p2183
I0
I0
I01
tp2184
a(S'float'
p2185
S'nAppliesBoth'
p2186
g2186
S'number of examples covered by the rule'
p2187
I0
I0
I01
tp2188
a(S'float'
p2189
S'nExamples'
p2190
g2190
S'number of learning examples'
p2191
I0
I0
I01
tp2192
a(S'int'
p2193
S'nLeft'
p2194
g2194
S"number of items on the rule's left side"
p2195
I0
I0
I01
tp2196
a(S'int'
p2197
S'nRight'
p2198
g2198
S"number of items on the rule's right side"
p2199
I0
I0
I01
tp2200
asbsS'TValueFilter'
p2201
(i__main__
ClassDefinition
p2202
(dp2203
g4
I1
sg5
I01
sg6
g2201
sg7
S'TOrange'
p2204
sg9
(lp2205
sg11
I01
sg12
(lp2206
g682
ag686
asbsS'TClustersFromDistributions'
p2207
(i__main__
ClassDefinition
p2208
(dp2209
g4
I1
sg5
I01
sg6
g2207
sg7
S'TOrange'
p2210
sg9
(lp2211
sg11
I01
sg12
(lp2212
sbsS'TVariable'
p2213
(i__main__
ClassDefinition
p2214
(dp2215
g4
I1
sg5
I01
sg6
g2213
sg7
S'TOrange'
p2216
sg9
(lp2217
sg11
I01
sg12
(lp2218
g233
ag237
ag241
ag245
ag249
ag253
ag257
asbsS'TNoiseValuesGenerator'
p2219
(i__main__
ClassDefinition
p2220
(dp2221
g4
I1
sg5
I01
sg6
g2219
sg7
S'TChangeExampleGenerator'
p2222
sg9
(lp2223
sg11
I00
sg12
(lp2224
(S'TIntFloatList'
p2225
S'replaceProbabilities'
p2226
g2226
S"probabilities for replacing attributes' values"
p2227
I0
I0
I00
tp2228
a(S'TRandomGenerator'
p2229
S'randomGenerator'
p2230
g2230
S'random generator'
p2231
I0
I0
I00
tp2232
ag137
ag141
asbsS'TFilter_sameValue'
p2233
(i__main__
ClassDefinition
p2234
(dp2235
g4
I1
sg5
I01
sg6
g2233
sg7
S'TFilter'
p2236
sg9
(lp2237
sg11
I00
sg12
(lp2238
(S'int'
p2239
S'position'
p2240
g2240
S'position of the observed attribute'
p2241
I0
I0
I01
tp2242
a(S'TValue'
p2243
S'value'
p2244
g2244
S'value that the selected examples should have'
p2245
I0
I0
I01
tp2246
ag429
ag433
asbsS'TEquiNDiscretization'
p2247
(i__main__
ClassDefinition
p2248
(dp2249
g4
I1
sg5
I01
sg6
g2247
sg7
S'TDiscretization'
p2250
sg9
(lp2251
sg11
I00
sg12
(lp2252
(S'int'
p2253
S'numberOfIntervals'
p2254
g2254
S'number of intervals'
p2255
I0
I0
I01
tp2256
a(S'bool'
p2257
S'recursiveDivision'
p2258
g2258
S'find cut-off points by recursive division (default = true)'
p2259
I0
I0
I01
tp2260
asbsS'TImputerConstructor_average'
p2261
(i__main__
ClassDefinition
p2262
(dp2263
g4
I1
sg5
I01
sg6
g2261
sg7
S'TImputerConstructor'
p2264
sg9
(lp2265
sg11
I00
sg12
(lp2266
g151
asbsS'TDomainBasicAttrStat'
p2267
(i__main__
ClassDefinition
p2268
(dp2269
g4
I1
sg5
I01
sg6
g2267
sg7
g1348
sg9
(lp2270
sg11
I00
sg12
(lp2271
sbsS'TStopDistributionClustering'
p2272
(i__main__
ClassDefinition
p2273
(dp2274
g4
I1
sg5
I01
sg6
g2272
sg7
S'TOrange'
p2275
sg9
(lp2276
sg11
I01
sg12
(lp2277
sbsS'TImputerConstructor_random'
p2278
(i__main__
ClassDefinition
p2279
(dp2280
g4
I1
sg5
I01
sg6
g2278
sg7
S'TImputerConstructor'
p2281
sg9
(lp2282
sg11
I00
sg12
(lp2283
(S'bool'
p2284
S'deterministic'
p2285
g2285
S"tells whether to initialize random by example's CRC (default: false)"
p2286
I0
I0
I01
tp2287
ag151
asbsS'TCostWrapperClassifier'
p2288
(i__main__
ClassDefinition
p2289
(dp2290
g4
I1
sg5
I01
sg6
g2288
sg7
S'TClassifier'
p2291
sg9
(lp2292
sg11
I00
sg12
(lp2293
(S'TClassifier'
p2294
S'classifier'
p2295
g2295
S'basic classifier'
p2296
I0
I0
I00
tp2297
a(S'TCostMatrix'
p2298
S'costMatrix'
p2299
g2299
S'cost matrix'
p2300
I0
I0
I00
tp2301
ag83
ag87
asbsS'TPreprocessor_ignore'
p2302
(i__main__
ClassDefinition
p2303
(dp2304
g4
I1
sg5
I01
sg6
g2302
sg7
S'TPreprocessor'
p2305
sg9
(lp2306
sg11
I00
sg12
(lp2307
(S'TVarList'
p2308
S'attributes'
p2309
g2309
S'tells which attributes to remove'
p2310
I0
I0
I00
tp2311
asbsS'TC45TreeNode'
p2312
(i__main__
ClassDefinition
p2313
(dp2314
g4
I1
sg5
I01
sg6
g2312
sg7
S'TOrange'
p2315
sg9
(lp2316
sg11
I00
sg12
(lp2317
(S'int'
p2318
S'nodeType'
p2319
g2319
S'0 = leaf,  1 = branch,  2 = cut,  3 = subset'
p2320
I0
I0
I01
tp2321
a(S'TValue'
p2322
S'leaf'
p2323
g2323
S'most frequent class at this node'
p2324
I0
I0
I01
tp2325
a(S'float'
p2326
S'items'
p2327
g2327
S'no of items at this node'
p2328
I0
I0
I01
tp2329
a(S'TDiscDistribution'
p2330
S'classDist'
p2331
g2331
S'class distribution of items'
p2332
I0
I0
I00
tp2333
a(S'TVariable'
p2334
S'tested'
p2335
g2335
S'attribute referenced in test'
p2336
I0
I0
I00
tp2337
a(S'float'
p2338
S'cut'
p2339
g2339
S'threshold for continuous attribute'
p2340
I0
I0
I01
tp2341
a(S'float'
p2342
S'lower'
p2343
g2343
S'lower limit of soft threshold'
p2344
I0
I0
I01
tp2345
a(S'float'
p2346
S'upper'
p2347
g2347
S'upper limit of soft threshold'
p2348
I0
I0
I01
tp2349
a(S'TIntList'
p2350
S'mapping'
p2351
g2351
S'mapping for discrete value'
p2352
I0
I0
I00
tp2353
a(S'TC45TreeNodeList'
p2354
S'branch'
p2355
g2355
S'branch[x] = (sub)tree for outcome x */'
p2356
I0
I0
I00
tp2357
asbsS'TMeasureAttribute_Python'
p2358
(i__main__
ClassDefinition
p2359
(dp2360
g4
I1
sg5
I01
sg6
g2358
sg7
S'TMeasureAttribute'
p2361
sg9
(lp2362
sg11
I00
sg12
(lp2363
g559
ag563
ag567
asbsS'TDistributionAssessor_Measure'
p2364
(i__main__
ClassDefinition
p2365
(dp2366
g4
I1
sg5
I01
sg6
g2364
sg7
S'TDistributionAssessor'
p2367
sg9
(lp2368
sg11
I00
sg12
(lp2369
(S'TMeasureAttribute'
p2370
S'measure'
p2371
g2371
S'attribute quality measure'
p2372
I0
I0
I00
tp2373
asbsS'TDistributionAssessor_m'
p2374
(i__main__
ClassDefinition
p2375
(dp2376
g4
I1
sg5
I01
sg6
g2374
sg7
S'TDistributionAssessor'
p2377
sg9
(lp2378
sg11
I00
sg12
(lp2379
(S'float'
p2380
g814
g814
S'm for m-estimate'
p2381
I0
I0
I01
tp2382
asbsS'TClassifierRandomGenerator'
p2383
(i__main__
ClassDefinition
p2384
(dp2385
g4
I1
sg5
I01
sg6
g2383
sg7
S'TExampleGenerator'
p2386
sg9
(lp2387
sg11
I00
sg12
(lp2388
(S'TClassifier'
p2389
S'classify'
p2390
g2390
S'classifier'
p2391
I0
I0
I00
tp2392
a(S'int'
p2393
S'noOfEx'
p2394
g2394
S'number of examples'
p2395
I0
I0
I01
tp2396
ag137
ag141
asbsS'TExamplesDistance_Hamiltonian'
p2397
(i__main__
ClassDefinition
p2398
(dp2399
g4
I1
sg5
I01
sg6
g2397
sg7
S'TExamplesDistance'
p2400
sg9
(lp2401
sg11
I00
sg12
(lp2402
(S'bool'
p2403
S'ignoreClass'
p2404
g2404
S'if true (default), class value is ignored when computing distances'
p2405
I0
I0
I01
tp2406
a(S'bool'
p2407
S'ignoreUnknowns'
p2408
g2408
S'if true (default: false) unknown values are ignored in computation'
p2409
I0
I0
I01
tp2410
asbsS'TThresholdDiscretizer'
p2411
(i__main__
ClassDefinition
p2412
(dp2413
g4
I1
sg5
I01
sg6
g2411
sg7
S'TDiscretizer'
p2414
sg9
(lp2415
sg11
I00
sg12
(lp2416
(S'float'
p2417
S'threshold'
p2418
g2418
S'threshold'
p2419
I0
I0
I01
tp2420
ag493
asbsS'TExampleTable'
p2421
(i__main__
ClassDefinition
p2422
(dp2423
g4
I1
sg5
I01
sg6
g2421
sg7
S'TExampleGenerator'
p2424
sg9
(lp2425
sg11
I00
sg12
(lp2426
(S'TRandomGenerator'
p2427
S'randomGenerator'
p2428
g2428
S'random generator used by randomExample'
p2429
I0
I0
I00
tp2430
a(S'TExampleGenerator'
p2431
S'lock'
p2432
g2432
S'the real owner of examples'
p2433
I01
I0
I00
tp2434
a(S'bool'
p2435
S'ownsExamples'
p2436
g2436
S'if false, examples in this table are references to examples in another table'
p2437
I01
I0
I01
tp2438
ag137
ag141
asbsS'TTreeSplitConstructor_Threshold'
p2439
(i__main__
ClassDefinition
p2440
(dp2441
g4
I1
sg5
I01
sg6
g2439
sg7
S'TTreeSplitConstructor_Measure'
p2442
sg9
(lp2443
sg11
I00
sg12
(lp2444
g890
ag894
ag898
asbsS'TStopDistributionClustering_n'
p2445
(i__main__
ClassDefinition
p2446
(dp2447
g4
I1
sg5
I01
sg6
g2445
sg7
S'TStopDistributionClustering'
p2448
sg9
(lp2449
sg11
I00
sg12
(lp2450
(S'int'
p2451
g1302
g1302
S'number of clusters'
p2452
I0
I0
I01
tp2453
asbsS'TLWRLearner'
p2454
(i__main__
ClassDefinition
p2455
(dp2456
g4
I1
sg5
I01
sg6
g2454
sg7
S'TLearner'
p2457
sg9
(lp2458
sg11
I00
sg12
(lp2459
(S'TExamplesDistanceConstructor'
p2460
S'distanceConstructor'
p2461
g2461
S'constructor for object that will find the nearest neighbours'
p2462
I0
I0
I00
tp2463
a(S'TLinRegLearner'
p2464
S'linRegLearner'
p2465
g2465
S'learner that performs local linear regression'
p2466
I0
I0
I00
tp2467
a(S'float'
p2468
g810
g810
S'number of neighbours'
p2469
I0
I0
I01
tp2470
a(S'bool'
p2471
S'rankWeight'
p2472
g2472
S'use ranks instead of distances'
p2473
I0
I0
I01
tp2474
ag97
asbsS'TTreeExampleSplitter_UnknownsAsSelector'
p2475
(i__main__
ClassDefinition
p2476
(dp2477
g4
I1
sg5
I01
sg6
g2475
sg7
S'TTreeExampleSplitter'
p2478
sg9
(lp2479
sg11
I00
sg12
(lp2480
sbsS'TClassifier_Python'
p2481
(i__main__
ClassDefinition
p2482
(dp2483
g4
I1
sg5
I01
sg6
g2481
sg7
S'TClassifier'
p2484
sg9
(lp2485
sg11
I00
sg12
(lp2486
g83
ag87
asbsS'TFilter_isDefined'
p2487
(i__main__
ClassDefinition
p2488
(dp2489
g4
I1
sg5
I01
sg6
g2487
sg7
S'TFilter'
p2490
sg9
(lp2491
sg11
I00
sg12
(lp2492
(S'TAttributedBoolList'
p2493
S'check'
p2494
g2494
S'tells which attributes to check; checks all if the list is empty'
p2495
I01
I0
I00
tp2496
ag429
ag433
asbsS'TRemoveRedundantByQuality'
p2497
(i__main__
ClassDefinition
p2498
(dp2499
g4
I1
sg5
I01
sg6
g2497
sg7
S'TRemoveRedundant'
p2500
sg9
(lp2501
sg11
I00
sg12
(lp2502
(S'bool'
p2503
S'remeasure'
p2504
g2504
S'reapply the measure after removal'
p2505
I0
I0
I01
tp2506
a(S'float'
p2507
S'minQuality'
p2508
g2508
S'minimal acceptable quality'
p2509
I0
I0
I01
tp2510
a(S'int'
p2511
S'removeBut'
p2512
g2512
S'the desired number of attributes'
p2513
I0
I0
I01
tp2514
a(S'TMeasureAttribute'
p2515
S'measure'
p2516
g2516
S'attribute quality measure'
p2517
I0
I0
I00
tp2518
ag932
asbsS'TGraphAsList'
p2519
(i__main__
ClassDefinition
p2520
(dp2521
g4
I1
sg5
I01
sg6
g2519
sg7
S'TGraph'
p2522
sg9
(lp2523
sg11
I00
sg12
(lp2524
g1060
ag1064
ag1068
asbsS'TProbabilityEstimatorConstructor_m'
p2525
(i__main__
ClassDefinition
p2526
(dp2527
g4
I1
sg5
I01
sg6
g2525
sg7
S'TProbabilityEstimatorConstructor'
p2528
sg9
(lp2529
sg11
I00
sg12
(lp2530
(S'float'
p2531
g814
g814
S'parameter m for m-estimation'
p2532
I0
I0
I01
tp2533
a(S'bool'
p2534
S'renormalize'
p2535
g2535
S'computes the estimate on the original (not the normalized) distribution'
p2536
I0
I0
I01
tp2537
asbsS'TDistanceMap'
p2538
(i__main__
ClassDefinition
p2539
(dp2540
g4
I1
sg5
I01
sg6
g2538
sg7
S'TOrange'
p2541
sg9
(lp2542
sg11
I00
sg12
(lp2543
(S'int'
p2544
S'dim'
p2545
g2545
S'bitmap dimension (in cells)'
p2546
I01
I0
I01
tp2547
a(S'int'
p2548
S'matrixType'
p2549
g2549
S'0 lower, 1 upper, 2 symmetric'
p2550
I0
I0
I01
tp2551
a(S'TIntList'
p2552
S'elementIndices'
p2553
g2553
S'indices to elements (one for row + one at the end)'
p2554
I01
I0
I00
tp2555
asbsS'TDistanceMapConstructor'
p2556
(i__main__
ClassDefinition
p2557
(dp2558
g4
I1
sg5
I01
sg6
g2556
sg7
S'TOrange'
p2559
sg9
(lp2560
sg11
I00
sg12
(lp2561
(S'TSymMatrix'
p2562
S'distanceMatrix'
p2563
g2563
S'distance matrix'
p2564
I0
I0
I00
tp2565
a(S'TIntList'
p2566
S'order'
p2567
g2567
S'order of elements'
p2568
I0
I0
I00
tp2569
asbsS'TTransformValue'
p2570
(i__main__
ClassDefinition
p2571
(dp2572
g4
I1
sg5
I01
sg6
g2570
sg7
S'TOrange'
p2573
sg9
(lp2574
sg11
I01
sg12
(lp2575
g493
asbsS'TComputeDomainContingency_DomainTransformation'
p2576
(i__main__
ClassDefinition
p2577
(dp2578
g4
I1
sg5
I01
sg6
g2576
sg7
S'TComputeDomainContingency'
p2579
sg9
(lp2580
sg11
I00
sg12
(lp2581
(S'TDomainTransformerConstructor'
p2582
S'domainTransformerConstructor'
p2583
g2583
S'constructs a domain in which each attribute corresponds one of originals'
p2584
I0
I0
I00
tp2585
a(S'bool'
p2586
S'resultInOriginalDomain'
p2587
g2587
S'tells whether the resulting DomainContingency should consist of original attributes'
p2588
I0
I0
I01
tp2589
ag25
asbsS'TStopDistributionClustering_noBigChange'
p2590
(i__main__
ClassDefinition
p2591
(dp2592
g4
I1
sg5
I01
sg6
g2590
sg7
S'TStopDistributionClustering'
p2593
sg9
(lp2594
sg11
I00
sg12
(lp2595
sbsS'TTreePruner'
p2596
(i__main__
ClassDefinition
p2597
(dp2598
g4
I1
sg5
I01
sg6
g2596
sg7
S'TOrange'
p2599
sg9
(lp2600
sg11
I01
sg12
(lp2601
sbsS'TImputer_Python'
p2602
(i__main__
ClassDefinition
p2603
(dp2604
g4
I1
sg5
I01
sg6
g2602
sg7
S'TImputer'
p2605
sg9
(lp2606
sg11
I00
sg12
(lp2607
sbsS'TRuleLearner'
p2608
(i__main__
ClassDefinition
p2609
(dp2610
g4
I1
sg5
I01
sg6
g2608
sg7
S'TLearner'
p2611
sg9
(lp2612
sg11
I00
sg12
(lp2613
(S'TRuleDataStoppingCriteria'
p2614
S'dataStopping'
p2615
g2615
g1417
I0
I0
I00
tp2616
a(S'TRuleStoppingCriteria'
p2617
S'ruleStopping'
p2618
g2618
g1417
I0
I0
I00
tp2619
a(S'TRuleCovererAndRemover'
p2620
S'coverAndRemove'
p2621
g2621
g1417
I0
I0
I00
tp2622
a(S'TRuleFinder'
p2623
S'ruleFinder'
p2624
g2624
g1417
I0
I0
I00
tp2625
a(S'TRuleClassifierConstructor'
p2626
S'classifierConstructor'
p2627
g2627
S'classifier'
p2628
I0
I0
I00
tp2629
a(S'TProgressCallback'
p2630
S'progressCallback'
p2631
g2631
S'progress callback function'
p2632
I0
I0
I00
tp2633
a(S'bool'
p2634
S'storeExamples'
p2635
g2635
g1417
I0
I0
I01
tp2636
a(S'int'
p2637
S'targetClass'
p2638
g2638
g1417
I0
I0
I01
tp2639
a(S'TRuleList'
p2640
S'baseRules'
p2641
g2641
g1417
I0
I0
I00
tp2642
ag97
asbsS'TOrdinal2Continuous'
p2643
(i__main__
ClassDefinition
p2644
(dp2645
g4
I1
sg5
I01
sg6
g2643
sg7
S'TTransformValue'
p2646
sg9
(lp2647
sg11
I00
sg12
(lp2648
(S'float'
p2649
S'factor'
p2650
g2650
S'number of values'
p2651
I0
I0
I01
tp2652
ag493
asbsS'TTreeSplitConstructor_Combined'
p2653
(i__main__
ClassDefinition
p2654
(dp2655
g4
I1
sg5
I01
sg6
g2653
sg7
S'TTreeSplitConstructor'
p2656
sg9
(lp2657
sg11
I00
sg12
(lp2658
(S'TTreeSplitConstructor'
p2659
S'discreteSplitConstructor'
p2660
g2660
S'split constructor for discrete attributes'
p2661
I0
I0
I00
tp2662
a(S'TTreeSplitConstructor'
p2663
S'continuousSplitConstructor'
p2664
g2664
S'split constructor for continuous attributes'
p2665
I0
I0
I00
tp2666
ag898
asbsS'TTransformValue_Python'
p2667
(i__main__
ClassDefinition
p2668
(dp2669
g4
I1
sg5
I01
sg6
g2667
sg7
S'TTransformValue'
p2670
sg9
(lp2671
sg11
I00
sg12
(lp2672
g493
asbsS'TRuleStoppingCriteria_Python'
p2673
(i__main__
ClassDefinition
p2674
(dp2675
g4
I1
sg5
I01
sg6
g2673
sg7
S'TRuleStoppingCriteria'
p2676
sg9
(lp2677
sg11
I00
sg12
(lp2678
sbsS'TRuleEvaluator_Python'
p2679
(i__main__
ClassDefinition
p2680
(dp2681
g4
I1
sg5
I01
sg6
g2679
sg7
S'TRuleEvaluator'
p2682
sg9
(lp2683
sg11
I00
sg12
(lp2684
sbsS'TIGBySorting'
p2685
(i__main__
ClassDefinition
p2686
(dp2687
g4
I1
sg5
I01
sg6
g2685
sg7
S'TIGConstructor'
p2688
sg9
(lp2689
sg11
I00
sg12
(lp2690
sbsS'TConditionalProbabilityEstimator_ByRows'
p2691
(i__main__
ClassDefinition
p2692
(dp2693
g4
I1
sg5
I01
sg6
g2691
sg7
S'TConditionalProbabilityEstimator'
p2694
sg9
(lp2695
sg11
I00
sg12
(lp2696
(S'TProbabilityEstimatorList'
p2697
S'estimatorList'
p2698
g2698
S'A list of probability estimators'
p2699
I0
I0
I00
tp2700
ag111
ag115
asbsS'TMyFilter'
p2701
(i__main__
ClassDefinition
p2702
(dp2703
g641
I1
sg642
I0
sg643
g2701
sg644
S'TFilter'
p2704
sg646
I00
sg647
(lp2705
sg649
(lp2706
g429
ag433
asbsS'TProgressCallback'
p2707
(i__main__
ClassDefinition
p2708
(dp2709
g4
I1
sg5
I01
sg6
g2707
sg7
S'TOrange'
p2710
sg9
(lp2711
sg11
I01
sg12
(lp2712
sbsS'THierarchicalClustering'
p2713
(i__main__
ClassDefinition
p2714
(dp2715
g4
I1
sg5
I01
sg6
g2713
sg7
S'TOrange'
p2716
sg9
(lp2717
sg11
I00
sg12
(lp2718
(S'int'
p2719
S'linkage'
p2720
g2720
S'linkage'
p2721
I0
I0
I01
tp2722
a(S'bool'
p2723
S'overwriteMatrix'
p2724
g2724
S'if true (default is false) it will use (and destroy) the distance matrix given as argument'
p2725
I0
I0
I01
tp2726
a(S'TProgressCallback'
p2727
S'progressCallback'
p2728
g2728
S'progress callback function'
p2729
I0
I0
I00
tp2730
asbsS'TRuleBeamInitializer_Default'
p2731
(i__main__
ClassDefinition
p2732
(dp2733
g4
I1
sg5
I01
sg6
g2731
sg7
S'TRuleBeamInitializer'
p2734
sg9
(lp2735
sg11
I00
sg12
(lp2736
sbsS'TClassifierFromVar'
p2737
(i__main__
ClassDefinition
p2738
(dp2739
g4
I1
sg5
I01
sg6
g2737
sg7
S'TClassifier'
p2740
sg9
(lp2741
sg11
I00
sg12
(lp2742
(S'TVariable'
p2743
S'whichVar'
p2744
(g2744
S'variable'
p2745
tp2746
S' variable'
p2747
I0
I0
I00
tp2748
a(S'TTransformValue'
p2749
S'transformer'
p2750
g2750
S'transformer'
p2751
I0
I0
I00
tp2752
a(S'TDistribution'
p2753
S'distributionForUnknown'
p2754
g2754
S'distribution for unknown value'
p2755
I0
I0
I00
tp2756
a(S'bool'
p2757
S'transformUnknowns'
p2758
g2758
S'if false (default), unknowns stay unknown or are changed into distribution if given'
p2759
I0
I0
I01
tp2760
ag83
ag87
asbsS'TIM'
p2761
(i__main__
ClassDefinition
p2762
(dp2763
g4
I1
sg5
I01
sg6
g2761
sg7
S'TOrange'
p2764
sg9
(lp2765
sg11
I00
sg12
(lp2766
(S'int'
p2767
S'varType'
p2768
g2768
S'class variable type'
p2769
I0
I0
I01
tp2770
a(S'TExampleTable'
p2771
S'rowExamples'
p2772
g2772
S'examples with free attributes for each row'
p2773
I0
I0
I00
tp2774
asbsS'TClassifier'
p2775
(i__main__
ClassDefinition
p2776
(dp2777
g4
I1
sg5
I01
sg6
g2775
sg7
S'TOrange'
p2778
sg9
(lp2779
sg11
I00
sg12
(lp2780
g83
ag87
asbsS'TTreeSplitConstructor_Python'
p2781
(i__main__
ClassDefinition
p2782
(dp2783
g4
I1
sg5
I01
sg6
g2781
sg7
S'TTreeSplitConstructor'
p2784
sg9
(lp2785
sg11
I00
sg12
(lp2786
g898
asbsS'TIG'
p2787
(i__main__
ClassDefinition
p2788
(dp2789
g4
I1
sg5
I01
sg6
g2787
sg7
S'TOrange'
p2790
sg9
(lp2791
sg11
I00
sg12
(lp2792
sbsS'TMeasureAttribute_relief'
p2793
(i__main__
ClassDefinition
p2794
(dp2795
g4
I1
sg5
I01
sg6
g2793
sg7
S'TMeasureAttribute'
p2796
sg9
(lp2797
S'prevGenerator'
p2798
aS'prevDomain'
p2799
asg11
I00
sg12
(lp2800
(S'float'
p2801
g810
g810
S'number of neighbours'
p2802
I0
I0
I01
tp2803
a(S'float'
p2804
g814
g814
S'number of reference examples'
p2805
I0
I0
I01
tp2806
ag559
ag563
ag567
asbsS'TTreeExampleSplitter_Python'
p2807
(i__main__
ClassDefinition
p2808
(dp2809
g4
I1
sg5
I01
sg6
g2807
sg7
S'TTreeExampleSplitter'
p2810
sg9
(lp2811
sg11
I00
sg12
(lp2812
sbsS'TExampleGenerator'
p2813
(i__main__
ClassDefinition
p2814
(dp2815
g4
I1
sg5
I01
sg6
g2813
sg7
S'TOrange'
p2816
sg9
(lp2817
sg11
I01
sg12
(lp2818
g137
ag141
asbsS'TAdapterGenerator'
p2819
(i__main__
ClassDefinition
p2820
(dp2821
g4
I1
sg5
I01
sg6
g2819
sg7
S'TExampleGenerator'
p2822
sg9
(lp2823
sg11
I00
sg12
(lp2824
g137
ag141
asbsS'TIMFromExamples'
p2825
(i__main__
ClassDefinition
p2826
(dp2827
g4
I1
sg5
I01
sg6
g2825
sg7
S'TOrange'
p2828
sg9
(lp2829
sg11
I01
sg12
(lp2830
sbsS'TFilter_random'
p2831
(i__main__
ClassDefinition
p2832
(dp2833
g4
I1
sg5
I01
sg6
g2831
sg7
S'TFilter'
p2834
sg9
(lp2835
sg11
I00
sg12
(lp2836
(S'float'
p2837
S'prob'
p2838
g2838
S'probability of selecting an example'
p2839
I0
I0
I01
tp2840
a(S'TRandomGenerator'
p2841
S'randomGenerator'
p2842
g2842
S'random generator'
p2843
I0
I0
I00
tp2844
ag429
ag433
asbsS'TC45ExampleGenerator'
p2845
(i__main__
ClassDefinition
p2846
(dp2847
g4
I1
sg5
I01
sg6
g2845
sg7
S'TFileExampleGenerator'
p2848
sg9
(lp2849
sg11
I00
sg12
(lp2850
(S'TBoolList'
p2851
S'skip'
p2852
g2852
S'a boolean list, one element per attribute, denoting which attributes to skip'
p2853
I0
I0
I00
tp2854
ag125
ag129
ag133
ag137
ag141
asbsS'TExamplesDistanceConstructor_Hamiltonian'
p2855
(i__main__
ClassDefinition
p2856
(dp2857
g4
I1
sg5
I01
sg6
g2855
sg7
S'TExamplesDistanceConstructor'
p2858
sg9
(lp2859
sg11
I00
sg12
(lp2860
(S'bool'
p2861
S'ignoreClass'
p2862
g2862
S'if true (default), class value is ignored when computing distances'
p2863
I0
I0
I01
tp2864
a(S'bool'
p2865
S'ignoreUnknowns'
p2866
g2866
S'if true (default: false) unknown values are ignored in computation'
p2867
I0
I0
I01
tp2868
ag1580
asbsS'TProbabilityEstimatorConstructor_loess'
p2869
(i__main__
ClassDefinition
p2870
(dp2871
g4
I1
sg5
I01
sg6
g2869
sg7
S'TProbabilityEstimatorConstructor'
p2872
sg9
(lp2873
sg11
I00
sg12
(lp2874
(S'float'
p2875
S'windowProportion'
p2876
g2876
S'The proportion of points in a window for LR'
p2877
I0
I0
I01
tp2878
a(S'int'
p2879
S'nPoints'
p2880
g2880
S'The number of points on curve (negative means the given number of points is inserted in each interval)'
p2881
I0
I0
I01
tp2882
a(S'int'
p2883
S'distributionMethod'
p2884
g2884
S"Meaning of the 'nPoints'"
p2885
I0
I0
I01
tp2886
asbsS'TLogRegFitter'
p2887
(i__main__
ClassDefinition
p2888
(dp2889
g4
I1
sg5
I01
sg6
g2887
sg7
S'TOrange'
p2890
sg9
(lp2891
sg11
I01
sg12
(lp2892
sbsS'TMakeRandomIndicesCV'
p2893
(i__main__
ClassDefinition
p2894
(dp2895
g4
I1
sg5
I01
sg6
g2893
sg7
S'TMakeRandomIndices'
p2896
sg9
(lp2897
sg11
I00
sg12
(lp2898
(S'int'
p2899
S'folds'
p2900
g2900
S'number of folds'
p2901
I0
I0
I01
tp2902
ag455
ag459
ag463
asbsS'TPreprocessor_removeDuplicates'
p2903
(i__main__
ClassDefinition
p2904
(dp2905
g4
I1
sg5
I01
sg6
g2903
sg7
S'TPreprocessor'
p2906
sg9
(lp2907
sg11
I00
sg12
(lp2908
sbsS'TTreeExampleSplitter_UnknownsAsBranchSizes'
p2909
(i__main__
ClassDefinition
p2910
(dp2911
g4
I1
sg5
I01
sg6
g2909
sg7
S'TTreeExampleSplitter'
p2912
sg9
(lp2913
sg11
I00
sg12
(lp2914
sbsS'TExamplesDistanceConstructor_Normalized'
p2915
(i__main__
ClassDefinition
p2916
(dp2917
g4
I1
sg5
I01
sg6
g2915
sg7
S'TExamplesDistanceConstructor'
p2918
sg9
(lp2919
sg11
I01
sg12
(lp2920
g1572
ag1576
ag1580
asbsS'TCostWrapperLearner'
p2921
(i__main__
ClassDefinition
p2922
(dp2923
g4
I1
sg5
I01
sg6
g2921
sg7
S'TLearner'
p2924
sg9
(lp2925
sg11
I00
sg12
(lp2926
(S'TLearner'
p2927
S'basicLearner'
p2928
g2928
S'basic learner'
p2929
I0
I0
I00
tp2930
a(S'TCostMatrix'
p2931
S'costMatrix'
p2932
g2932
S'cost matrix'
p2933
I0
I0
I00
tp2934
ag97
asbsS'TFindNearest'
p2935
(i__main__
ClassDefinition
p2936
(dp2937
g4
I1
sg5
I01
sg6
g2935
sg7
S'TOrange'
p2938
sg9
(lp2939
sg11
I01
sg12
(lp2940
g708
ag712
asbsS'TLogRegFitter_Cholesky'
p2941
(i__main__
ClassDefinition
p2942
(dp2943
g4
I1
sg5
I01
sg6
g2941
sg7
S'TLogRegFitter'
p2944
sg9
(lp2945
sg11
I00
sg12
(lp2946
sbsS'TDistributionAssessor_Laplace'
p2947
(i__main__
ClassDefinition
p2948
(dp2949
g4
I1
sg5
I01
sg6
g2947
sg7
S'TDistributionAssessor'
p2950
sg9
(lp2951
sg11
I00
sg12
(lp2952
sbsS'TColumnAssessor_Relief'
p2953
(i__main__
ClassDefinition
p2954
(dp2955
g4
I1
sg5
I01
sg6
g2953
sg7
S'TColumnAssessor'
p2956
sg9
(lp2957
sg11
I00
sg12
(lp2958
sbsS'TClassifierByLookupTable'
p2959
(i__main__
ClassDefinition
p2960
(dp2961
g4
I1
sg5
I01
sg6
g2959
sg7
S'TClassifier'
p2962
sg9
(lp2963
sg11
I01
sg12
(lp2964
g75
ag79
ag83
ag87
asbsS'TRuleBeamFinder'
p2965
(i__main__
ClassDefinition
p2966
(dp2967
g4
I1
sg5
I01
sg6
g2965
sg7
S'TRuleFinder'
p2968
sg9
(lp2969
sg11
I00
sg12
(lp2970
(S'TRuleBeamInitializer'
p2971
S'initializer'
p2972
g2972
g1417
I0
I0
I00
tp2973
a(S'TRuleBeamRefiner'
p2974
S'refiner'
p2975
g2975
g1417
I0
I0
I00
tp2976
a(S'TRuleBeamCandidateSelector'
p2977
S'candidateSelector'
p2978
g2978
g1417
I0
I0
I00
tp2979
a(S'TRuleBeamFilter'
p2980
S'ruleFilter'
p2981
g2981
g1417
I0
I0
I00
tp2982
a(S'TRuleValidator'
p2983
S'ruleStoppingValidator'
p2984
g2984
g1417
I0
I0
I00
tp2985
a(S'TRuleValidator'
p2986
S'validator'
p2987
g2987
g1417
I0
I0
I00
tp2988
a(S'TRuleEvaluator'
p2989
S'evaluator'
p2990
g2990
g1417
I0
I0
I00
tp2991
asbsS'TFilter'
p2992
(i__main__
ClassDefinition
p2993
(dp2994
g4
I1
sg5
I01
sg6
g2992
sg7
S'TOrange'
p2995
sg9
(lp2996
sg11
I01
sg12
(lp2997
g429
ag433
asbsS'TC45Classifier'
p2998
(i__main__
ClassDefinition
p2999
(dp3000
g4
I1
sg5
I01
sg6
g2998
sg7
S'TClassifierFD'
p3001
sg9
(lp3002
sg11
I00
sg12
(lp3003
(S'TC45TreeNode'
p3004
S'tree'
p3005
g3005
S'tree'
p3006
I0
I0
I00
tp3007
ag205
ag83
ag87
asbsS'TMeasureAttribute_cost'
p3008
(i__main__
ClassDefinition
p3009
(dp3010
g4
I1
sg5
I01
sg6
g3008
sg7
S'TMeasureAttributeFromProbabilities'
p3011
sg9
(lp3012
sg11
I00
sg12
(lp3013
(S'TCostMatrix'
p3014
S'cost'
p3015
g3015
S'cost matrix'
p3016
I0
I0
I00
tp3017
ag547
ag551
ag555
ag559
ag563
ag567
asbsS'TImputerConstructor_minimal'
p3018
(i__main__
ClassDefinition
p3019
(dp3020
g4
I1
sg5
I01
sg6
g3018
sg7
S'TImputerConstructor'
p3021
sg9
(lp3022
sg11
I00
sg12
(lp3023
g151
asbsS'TClustersFromIM'
p3024
(i__main__
ClassDefinition
p3025
(dp3026
g4
I1
sg5
I01
sg6
g3024
sg7
S'TOrange'
p3027
sg9
(lp3028
sg11
I01
sg12
(lp3029
sbsS'TFilter_values'
p3030
(i__main__
ClassDefinition
p3031
(dp3032
g4
I1
sg5
I01
sg6
g3030
sg7
S'TFilter'
p3033
sg9
(lp3034
sg11
I00
sg12
(lp3035
(S'TValueFilterList'
p3036
S'conditions'
p3037
g3037
S'a list of filters'
p3038
I0
I0
I00
tp3039
a(S'bool'
p3040
S'conjunction'
p3041
g3041
S'if true, filter computes conjunction, otherwise disjunction'
p3042
I0
I0
I01
tp3043
ag429
ag433
asbsS'TClassifierForKMWeight'
p3044
(i__main__
ClassDefinition
p3045
(dp3046
g4
I1
sg5
I01
sg6
g3044
sg7
S'TClassifier'
p3047
sg9
(lp3048
sg11
I00
sg12
(lp3049
(S'int'
p3050
S'whichID'
p3051
g3051
S'Id of meta variable for time'
p3052
I0
I0
I01
tp3053
a(S'TVariable'
p3054
S'outcomeVar'
p3055
g3055
S'outcome variable'
p3056
I0
I0
I00
tp3057
a(S'int'
p3058
S'failIndex'
p3059
g3059
S"index of 'fail' value"
p3060
I0
I0
I01
tp3061
a(S'TKaplanMeier'
p3062
S'kaplanMeier'
p3063
g3063
S'Kaplan-Meier curve'
p3064
I0
I0
I00
tp3065
ag83
ag87
asbsS'TSymMatrix'
p3066
(i__main__
ClassDefinition
p3067
(dp3068
g4
I1
sg5
I01
sg6
g3066
sg7
S'TOrange'
p3069
sg9
(lp3070
sg11
I00
sg12
(lp3071
(S'int'
p3072
S'dim'
p3073
g3073
S'matrix dimension'
p3074
I01
I0
I01
tp3075
a(S'int'
p3076
S'matrixType'
p3077
g3077
S'0 lower, 1 upper, 2 symmetric, 3 lower_filled, 4 upper_filled'
p3078
I0
I0
I01
tp3079
asbsS'TSVMLearner'
p3080
(i__main__
ClassDefinition
p3081
(dp3082
g4
I1
sg5
I01
sg6
g3080
sg7
S'TLearner'
p3083
sg9
(lp3084
sg11
I00
sg12
(lp3085
(S'int'
p3086
S'svm_type'
p3087
S'type'
p3088
S' SVM type (C_SVC=0, NU_SVC, ONE_CLASS, C_SVR=3)'
p3089
I0
I0
I01
tp3090
a(S'int'
p3091
S'kernel_type'
p3092
S'kernel'
p3093
S' kernel type (LINEAR=0, POLY, RBF, SIGMOID=3)'
p3094
I0
I0
I01
tp3095
a(S'float'
p3096
S'degree'
p3097
g3097
S'polynomial kernel degree'
p3098
I0
I0
I01
tp3099
a(S'float'
p3100
S'gamma'
p3101
g3101
S'poly/rbf/sigm parameter'
p3102
I0
I0
I01
tp3103
a(S'float'
p3104
S'coef0'
p3105
g3105
S'poly/sigm parameter'
p3106
I0
I0
I01
tp3107
a(S'float'
p3108
S'cache_size'
p3109
g3109
S'cache size in MB'
p3110
I0
I0
I01
tp3111
a(S'float'
p3112
S'eps'
p3113
g3113
S'stopping criteria'
p3114
I0
I0
I01
tp3115
a(S'float'
p3116
S'C'
p3117
g3117
S'for C_SVC and C_SVR'
p3118
I0
I0
I01
tp3119
a(S'float'
p3120
S'nu'
p3121
g3121
S'for NU_SVC and ONE_CLASS'
p3122
I0
I0
I01
tp3123
a(S'float'
p3124
g1775
g1775
S'for C_SVR'
p3125
I0
I0
I01
tp3126
a(S'int'
p3127
S'max_iter'
p3128
g3128
S'maximal number of iterations'
p3129
I0
I0
I01
tp3130
a(S'float'
p3131
S'iter_mult'
p3132
g3132
S'epsilon multiplier'
p3133
I0
I0
I01
tp3134
ag97
asbsS'TImputerConstructor_defaults'
p3135
(i__main__
ClassDefinition
p3136
(dp3137
g4
I1
sg5
I01
sg6
g3135
sg7
S'TImputerConstructor'
p3138
sg9
(lp3139
sg11
I00
sg12
(lp3140
(S'TExample'
p3141
S'defaults'
p3142
g3142
S'default values to be imputed instead missing ones'
p3143
I0
I0
I00
tp3144
ag151
asbsS'TConditionalProbabilityEstimatorConstructor'
p3145
(i__main__
ClassDefinition
p3146
(dp3147
g4
I1
sg5
I01
sg6
g3145
sg7
S'TOrange'
p3148
sg9
(lp3149
sg11
I01
sg12
(lp3150
sbsS'TPreprocessor_takeMissingClasses'
p3151
(i__main__
ClassDefinition
p3152
(dp3153
g4
I1
sg5
I01
sg6
g3151
sg7
S'TPreprocessor'
p3154
sg9
(lp3155
sg11
I00
sg12
(lp3156
sbsS'TClustersFromIMByAssessor'
p3157
(i__main__
ClassDefinition
p3158
(dp3159
g4
I1
sg5
I01
sg6
g3157
sg7
S'TClustersFromIM'
p3160
sg9
(lp3161
sg11
I00
sg12
(lp3162
(S'TColumnAssessor'
p3163
S'columnAssessor'
p3164
g3164
S'column quality assessor'
p3165
I0
I0
I00
tp3166
a(S'TStopIMClusteringByAssessor'
p3167
S'stopCriterion'
p3168
g3168
S'stop criterion'
p3169
I0
I0
I00
tp3170
asbsS'TRuleValidator_LRS'
p3171
(i__main__
ClassDefinition
p3172
(dp3173
g4
I1
sg5
I01
sg6
g3171
sg7
S'TRuleValidator'
p3174
sg9
(lp3175
sg11
I00
sg12
(lp3176
(S'float'
p3177
S'alpha'
p3178
g3178
g1417
I0
I0
I01
tp3179
a(S'float'
p3180
S'min_coverage'
p3181
g3181
g1417
I0
I0
I01
tp3182
a(S'float'
p3183
S'max_rule_complexity'
p3184
g3184
g1417
I0
I0
I01
tp3185
asbsS'TLogRegFitter_Python'
p3186
(i__main__
ClassDefinition
p3187
(dp3188
g4
I1
sg5
I01
sg6
g3186
sg7
S'TLogRegFitter'
p3189
sg9
(lp3190
sg11
I00
sg12
(lp3191
sbsS'TMakeRandomIndices2'
p3192
(i__main__
ClassDefinition
p3193
(dp3194
g4
I1
sg5
I01
sg6
g3192
sg7
S'TMakeRandomIndices'
p3195
sg9
(lp3196
sg11
I00
sg12
(lp3197
(S'float'
p3198
S'p0'
p3199
g3199
S"a proportion or a number of 0's"
p3200
I0
I0
I01
tp3201
ag455
ag459
ag463
asbsS'TValueList'
p3202
(i__main__
ClassDefinition
p3203
(dp3204
g4
I1
sg5
I01
sg6
g3202
sg7
g1348
sg9
(lp3205
sg11
I00
sg12
(lp3206
(S'TVariable'
p3207
S'variable'
p3208
g3208
S'the variable to which the list applies'
p3209
I0
I0
I00
tp3210
asbsS'TTreeExampleSplitter_UnknownsToCommon'
p3211
(i__main__
ClassDefinition
p3212
(dp3213
g4
I1
sg5
I01
sg6
g3211
sg7
S'TTreeExampleSplitter'
p3214
sg9
(lp3215
sg11
I00
sg12
(lp3216
sbsS'TContDistribution'
p3217
(i__main__
ClassDefinition
p3218
(dp3219
g4
I1
sg5
I01
sg6
g3217
sg7
S'TDistribution'
p3220
sg9
(lp3221
sg11
I00
sg12
(lp3222
(S'TFloatList'
p3223
S'variances'
p3224
g3224
S'variances'
p3225
I0
I0
I00
tp3226
a(S'float'
p3227
S'sum'
p3228
g3228
S'weighted sum of elements (i.e. N*average)'
p3229
I01
I0
I01
tp3230
a(S'float'
p3231
S'sum2'
p3232
g3232
S'weighted sum of squares of elements'
p3233
I01
I0
I01
tp3234
ag744
ag748
ag752
ag756
ag760
ag764
ag768
ag772
asbsS'TTreeDescender_UnknownMergeAsSelector'
p3235
(i__main__
ClassDefinition
p3236
(dp3237
g4
I1
sg5
I01
sg6
g3235
sg7
g1096
sg9
(lp3238
sg11
I0
sg12
(lp3239
sbsS'TContingencyAttrClass'
p3240
(i__main__
ClassDefinition
p3241
(dp3242
g4
I1
sg5
I01
sg6
g3240
sg7
S'TContingencyClass'
p3243
sg9
(lp3244
sg11
I00
sg12
(lp3245
g1192
ag1198
ag1202
ag1206
ag1210
asbsS'TDomainTransformerConstructor'
p3246
(i__main__
ClassDefinition
p3247
(dp3248
g4
I1
sg5
I01
sg6
g3246
sg7
S'TOrange'
p3249
sg9
(lp3250
sg11
I01
sg12
(lp3251
(S'bool'
p3252
S'preservesOrder'
p3253
g3253
S'a flag, telling that original attributes have corresponding attribute in the same order'
p3254
I01
I0
I01
tp3255
a(S'bool'
p3256
S'preservesAttributes'
p3257
g3257
S'a flag, telling whether each original has a corresponding new attribute'
p3258
I01
I0
I01
tp3259
asbsS'TPythonValueSpecial'
p3260
(i__main__
ClassDefinition
p3261
(dp3262
g4
I1
sg5
I01
sg6
g3260
sg7
S'TOrange'
p3263
sg9
(lp3264
sg11
I00
sg12
(lp3265
(S'int'
p3266
S'valueType'
p3267
g3267
S'value type'
p3268
I0
I0
I01
tp3269
asbsS'TIGConstructor'
p3270
(i__main__
ClassDefinition
p3271
(dp3272
g4
I1
sg5
I01
sg6
g3270
sg7
S'TOrange'
p3273
sg9
(lp3274
sg11
I01
sg12
(lp3275
sbsS'TProbabilityEstimatorConstructor'
p3276
(i__main__
ClassDefinition
p3277
(dp3278
g4
I1
sg5
I01
sg6
g3276
sg7
S'TOrange'
p3279
sg9
(lp3280
sg11
I01
sg12
(lp3281
sbsS'TFloatVariable'
p3282
(i__main__
ClassDefinition
p3283
(dp3284
g4
I1
sg5
I01
sg6
g3282
sg7
S'TVariable'
p3285
sg9
(lp3286
sg11
I00
sg12
(lp3287
(S'float'
p3288
S'startValue'
p3289
g3289
S'lowest value'
p3290
I0
I0
I01
tp3291
a(S'float'
p3292
S'endValue'
p3293
g3293
S'highest value'
p3294
I0
I0
I01
tp3295
a(S'float'
p3296
S'stepValue'
p3297
g3297
S'step'
p3298
I0
I0
I01
tp3299
a(S'int'
p3300
S'numberOfDecimals'
p3301
g3301
S'number of digits after decimal point'
p3302
I0
I0
I01
tp3303
a(S'bool'
p3304
S'scientificFormat'
p3305
g3305
S'use scientific format in output'
p3306
I0
I0
I01
tp3307
a(S'int'
p3308
S'adjustDecimals'
p3309
g3309
S"adjust number of decimals according to the values converted (0 - no, 1 - yes, 2 - yes, but haven't seen any yet)"
p3310
I0
I0
I01
tp3311
ag233
ag237
ag241
ag245
ag249
ag253
ag257
asbsS'TImputer_random'
p3312
(i__main__
ClassDefinition
p3313
(dp3314
g4
I1
sg5
I01
sg6
g3312
sg7
S'TImputer'
p3315
sg9
(lp3316
sg11
I00
sg12
(lp3317
(S'bool'
p3318
S'imputeClass'
p3319
g3319
S'Tells whether to impute the class values, too (default: true)'
p3320
I0
I0
I01
tp3321
a(S'bool'
p3322
S'deterministic'
p3323
g3323
S"tells whether to initialize random by example's CRC (default: false)"
p3324
I0
I0
I01
tp3325
asbsS'TProbabilityEstimatorConstructor_kernel'
p3326
(i__main__
ClassDefinition
p3327
(dp3328
g4
I1
sg5
I01
sg6
g3326
sg7
S'TProbabilityEstimatorConstructor'
p3329
sg9
(lp3330
sg11
I00
sg12
(lp3331
(S'float'
p3332
S'minImpact'
p3333
g3333
S'Minimal impact the point must have to be counted'
p3334
I0
I0
I01
tp3335
a(S'float'
p3336
S'smoothing'
p3337
g3337
S'Smoothing factor'
p3338
I0
I0
I01
tp3339
a(S'int'
p3340
S'nPoints'
p3341
g3341
S'Number of points for curve (negative means the given number of points is inserted in each interval)'
p3342
I0
I0
I01
tp3343
asbsS'TRuleCovererAndRemover_Default'
p3344
(i__main__
ClassDefinition
p3345
(dp3346
g4
I1
sg5
I01
sg6
g3344
sg7
S'TRuleCovererAndRemover'
p3347
sg9
(lp3348
sg11
I00
sg12
(lp3349
sbsS'TP2NN'
p3350
(i__main__
ClassDefinition
p3351
(dp3352
g4
I1
sg5
I01
sg6
g3350
sg7
S'TPNN'
p3353
sg9
(lp3354
sg11
I00
sg12
(lp3355
g1524
ag1528
ag1532
ag1536
ag1540
ag1544
ag1548
ag205
ag83
ag87
asbsS'TFilter_Python'
p3356
(i__main__
ClassDefinition
p3357
(dp3358
g4
I1
sg5
I01
sg6
g3356
sg7
S'TFilter'
p3359
sg9
(lp3360
sg11
I00
sg12
(lp3361
g429
ag433
asbsS'TExamplesDistanceConstructor_Maximal'
p3362
(i__main__
ClassDefinition
p3363
(dp3364
g4
I1
sg5
I01
sg6
g3362
sg7
S'TExamplesDistanceConstructor_Normalized'
p3365
sg9
(lp3366
sg11
I00
sg12
(lp3367
g1572
ag1576
ag1580
asbsS'TTreeDescender_Python'
p3368
(i__main__
ClassDefinition
p3369
(dp3370
g4
I1
sg5
I01
sg6
g3368
sg7
S'TTreeDescender'
p3371
sg9
(lp3372
sg11
I00
sg12
(lp3373
sbsS'TSubsetsGenerator_constant'
p3374
(i__main__
ClassDefinition
p3375
(dp3376
g4
I1
sg5
I01
sg6
g3374
sg7
S'TSubsetsGenerator'
p3377
sg9
(lp3378
sg11
I00
sg12
(lp3379
(S'TVarList'
p3380
S'constant'
p3381
g3381
S'a subset that is returned (once!)'
p3382
I0
I0
I00
tp3383
ag183
asbsS'TGaussianNoiseGenerator'
p3384
(i__main__
ClassDefinition
p3385
(dp3386
g4
I1
sg5
I01
sg6
g3384
sg7
S'TChangeExampleGenerator'
p3387
sg9
(lp3388
sg11
I00
sg12
(lp3389
(S'TIntFloatList'
p3390
S'deviations'
p3391
g3391
S"deviations for attributes' values"
p3392
I0
I0
I00
tp3393
a(S'TRandomGenerator'
p3394
S'randomGenerator'
p3395
g3395
S'random generator'
p3396
I0
I0
I00
tp3397
ag137
ag141
asbsS'TClustersFromDistributionsByAssessor'
p3398
(i__main__
ClassDefinition
p3399
(dp3400
g4
I1
sg5
I01
sg6
g3398
sg7
S'TClustersFromDistributions'
p3401
sg9
(lp3402
sg11
I00
sg12
(lp3403
(S'TDistributionAssessor'
p3404
S'distributionAssessor'
p3405
g3405
S'column quality assessor'
p3406
I0
I0
I00
tp3407
a(S'TStopDistributionClustering'
p3408
S'stopCriterion'
p3409
g3409
S'stop criterion'
p3410
I0
I0
I00
tp3411
a(S'float'
p3412
S'minProfitProportion'
p3413
g3413
S'minimal merge profit'
p3414
I0
I0
I01
tp3415
asbsS'TDefaultClassifier'
p3416
(i__main__
ClassDefinition
p3417
(dp3418
g4
I1
sg5
I01
sg6
g3416
sg7
S'TClassifier'
p3419
sg9
(lp3420
sg11
I00
sg12
(lp3421
(S'TValue'
p3422
S'defaultVal'
p3423
g3423
S'default prediction'
p3424
I0
I0
I01
tp3425
a(S'TDistribution'
p3426
S'defaultDistribution'
p3427
g3427
S'default distribution'
p3428
I0
I0
I00
tp3429
ag83
ag87
asbsS'TColumnAssessor_Kramer'
p3430
(i__main__
ClassDefinition
p3431
(dp3432
g4
I1
sg5
I01
sg6
g3430
sg7
S'TColumnAssessor'
p3433
sg9
(lp3434
sg11
I00
sg12
(lp3435
sbsS'TDiscretization'
p3436
(i__main__
ClassDefinition
p3437
(dp3438
g4
I1
sg5
I01
sg6
g3436
sg7
S'TOrange'
p3439
sg9
(lp3440
sg11
I01
sg12
(lp3441
sbsS'TTreeSplitConstructor_Measure'
p3442
(i__main__
ClassDefinition
p3443
(dp3444
g4
I1
sg5
I01
sg6
g3442
sg7
S'TTreeSplitConstructor'
p3445
sg9
(lp3446
sg11
I01
sg12
(lp3447
g890
ag894
ag898
asbsS'TTreeNode'
p3448
(i__main__
ClassDefinition
p3449
(dp3450
g4
I1
sg5
I01
sg6
g3448
sg7
S'TOrange'
p3451
sg9
(lp3452
sg11
I00
sg12
(lp3453
(S'TClassifier'
p3454
S'nodeClassifier'
p3455
g3455
S'classifies an example'
p3456
I0
I0
I00
tp3457
a(S'TDistribution'
p3458
S'distribution'
p3459
g3459
S'distribution of classes in the node'
p3460
I0
I0
I00
tp3461
a(S'TDomainContingency'
p3462
S'contingency'
p3463
g3463
S'domain contingency for examples in the node'
p3464
I0
I0
I00
tp3465
a(S'TExampleGenerator'
p3466
S'examples'
p3467
g3467
S'learning examples (if stored)'
p3468
I0
I0
I00
tp3469
a(S'int'
p3470
S'weightID'
p3471
g3471
S'weightID used to construct this node'
p3472
I0
I0
I01
tp3473
a(S'TClassifier'
p3474
S'branchSelector'
p3475
g3475
S'classifier that select a branch for an example'
p3476
I0
I0
I00
tp3477
a(S'TTreeNodeList'
p3478
S'branches'
p3479
g3479
S'classifiers presenting the branches'
p3480
I0
I0
I00
tp3481
a(S'TStringList'
p3482
S'branchDescriptions'
p3483
g3483
S'descriptions of branches'
p3484
I0
I0
I00
tp3485
a(S'TDiscDistribution'
p3486
S'branchSizes'
p3487
g3487
S'numbers of examples in branches'
p3488
I0
I0
I00
tp3489
asbsS'TTransformValue_IsDefined'
p3490
(i__main__
ClassDefinition
p3491
(dp3492
g4
I1
sg5
I01
sg6
g3490
sg7
S'TTransformValue'
p3493
sg9
(lp3494
sg11
I00
sg12
(lp3495
g493
asbsS'TFilter_hasClassValue'
p3496
(i__main__
ClassDefinition
p3497
(dp3498
g4
I1
sg5
I01
sg6
g3496
sg7
S'TFilter'
p3499
sg9
(lp3500
sg11
I00
sg12
(lp3501
g429
ag433
asbsS'TStopDistributionClustering_binary'
p3502
(i__main__
ClassDefinition
p3503
(dp3504
g4
I1
sg5
I01
sg6
g3502
sg7
S'TStopDistributionClustering'
p3505
sg9
(lp3506
sg11
I00
sg12
(lp3507
sbsS'TIMByRows'
p3508
(i__main__
ClassDefinition
p3509
(dp3510
g4
I1
sg5
I01
sg6
g3508
sg7
S'TOrange'
p3511
sg9
(lp3512
sg11
I00
sg12
(lp3513
(S'int'
p3514
S'varType'
p3515
g3515
S'class variable type'
p3516
I0
I0
I01
tp3517
asbsS'TRuleFinder'
p3518
(i__main__
ClassDefinition
p3519
(dp3520
g4
I1
sg5
I01
sg6
g3518
sg7
S'TOrange'
p3521
sg9
(lp3522
sg11
I01
sg12
(lp3523
g2988
ag2991
asbsS'TClassifierByExampleTable'
p3524
(i__main__
ClassDefinition
p3525
(dp3526
g4
I1
sg5
I01
sg6
g3524
sg7
S'TClassifierFD'
p3527
sg9
(lp3528
sg11
I00
sg12
(lp3529
(S'TExampleTable'
p3530
S'sortedExamples'
p3531
g3531
S'a table of examples'
p3532
I0
I0
I00
tp3533
a(S'bool'
p3534
S'containsUnknowns'
p3535
g3535
S'if true, the table contains unknown values'
p3536
I0
I0
I01
tp3537
a(S'TClassifier'
p3538
S'classifierForUnknown'
p3539
g3539
S'a classifier for unknown cases'
p3540
I0
I0
I00
tp3541
a(S'TEFMDataDescription'
p3542
S'dataDescription'
p3543
g3543
S'data description'
p3544
I0
I0
I00
tp3545
ag205
ag83
ag87
asbsNNsS'TChangeExampleGenerator'
p3546
(i__main__
ClassDefinition
p3547
(dp3548
g4
I1
sg5
I01
sg6
g3546
sg7
S'TAdapterGenerator'
p3549
sg9
(lp3550
sg11
I01
sg12
(lp3551
g137
ag141
asbsS'TRule'
p3552
(i__main__
ClassDefinition
p3553
(dp3554
g4
I1
sg5
I01
sg6
g3552
sg7
S'TOrange'
p3555
sg9
(lp3556
sg11
I00
sg12
(lp3557
(S'TFilter'
p3558
S'filter'
p3559
g3559
S'stored filter for this rule'
p3560
I0
I0
I00
tp3561
a(S'TClassifier'
p3562
S'classifier'
p3563
g3563
S'classifies an example'
p3564
I0
I0
I00
tp3565
a(S'TLearner'
p3566
S'learner'
p3567
g3567
S'learns a classifier from data'
p3568
I0
I0
I00
tp3569
a(S'TDistribution'
p3570
S'classDistribution'
p3571
g3571
S'distribution of classes covered by the rule'
p3572
I0
I0
I00
tp3573
a(S'TExampleTable'
p3574
S'examples'
p3575
g3575
S'covered examples'
p3576
I0
I0
I00
tp3577
a(S'int'
p3578
S'weightID'
p3579
g3579
S'weight for the stored examples'
p3580
I0
I0
I01
tp3581
a(S'float'
p3582
S'quality'
p3583
g3583
S'some measure of rule quality'
p3584
I0
I0
I01
tp3585
a(S'float'
p3586
S'complexity'
p3587
g3587
g1417
I0
I0
I01
tp3588
asbsS'TClassifierByLookupTable2'
p3589
(i__main__
ClassDefinition
p3590
(dp3591
g4
I1
sg5
I01
sg6
g3589
sg7
S'TClassifierByLookupTable'
p3592
sg9
(lp3593
sg11
I00
sg12
(lp3594
(S'TVariable'
p3595
S'variable1'
p3596
g3596
S'the first attribute used for classification'
p3597
I01
I0
I00
tp3598
a(S'TVariable'
p3599
S'variable2'
p3600
g3600
S'the second attribute used for classification'
p3601
I01
I0
I00
tp3602
a(S'int'
p3603
S'noOfValues1'
p3604
g3604
S'number of values of the first attribute'
p3605
I01
I0
I01
tp3606
a(S'int'
p3607
S'noOfValues2'
p3608
g3608
S'number of values of the second attribute'
p3609
I01
I0
I01
tp3610
a(S'TEFMDataDescription'
p3611
S'dataDescription'
p3612
g3612
S'data description'
p3613
I0
I0
I00
tp3614
ag75
ag79
ag83
ag87
asbsS'TPreprocessor_addClassNoise'
p3615
(i__main__
ClassDefinition
p3616
(dp3617
g4
I1
sg5
I01
sg6
g3615
sg7
S'TPreprocessor'
p3618
sg9
(lp3619
sg11
I00
sg12
(lp3620
(S'float'
p3621
S'proportion'
p3622
g3622
S'proportion of changed class values'
p3623
I0
I0
I01
tp3624
a(S'TRandomGenerator'
p3625
S'randomGenerator'
p3626
g3626
S'random number generator'
p3627
I0
I0
I00
tp3628
asbsS'TClassifierByLookupTable1'
p3629
(i__main__
ClassDefinition
p3630
(dp3631
g4
I1
sg5
I01
sg6
g3629
sg7
S'TClassifierByLookupTable'
p3632
sg9
(lp3633
sg11
I00
sg12
(lp3634
(S'TVariable'
p3635
S'variable1'
p3636
(g3636
S'variable'
p3637
tp3638
S' attribute used for classification'
p3639
I01
I0
I00
tp3640
ag75
ag79
ag83
ag87
asbsS'TRuleClassifierConstructor_Python'
p3641
(i__main__
ClassDefinition
p3642
(dp3643
g4
I1
sg5
I01
sg6
g3641
sg7
S'TRuleClassifierConstructor'
p3644
sg9
(lp3645
sg11
I00
sg12
(lp3646
sbsS'TRemoveRedundantOneValue'
p3647
(i__main__
ClassDefinition
p3648
(dp3649
g4
I1
sg5
I01
sg6
g3647
sg7
S'TRemoveRedundant'
p3650
sg9
(lp3651
sg11
I00
sg12
(lp3652
(S'bool'
p3653
S'onData'
p3654
g3654
S'observe the actual number of value on the data (not on attribute definitions)'
p3655
I0
I0
I01
tp3656
ag932
asbsS'TDistributionAssessor_Relief'
p3657
(i__main__
ClassDefinition
p3658
(dp3659
g4
I1
sg5
I01
sg6
g3657
sg7
S'TDistributionAssessor'
p3660
sg9
(lp3661
sg11
I00
sg12
(lp3662
sbsS'TEnumVariable'
p3663
(i__main__
ClassDefinition
p3664
(dp3665
g4
I1
sg5
I01
sg6
g3663
sg7
S'TVariable'
p3666
sg9
(lp3667
sg11
I00
sg12
(lp3668
(S'TStringList'
p3669
S'values'
p3670
g3670
S"attribute's values"
p3671
I0
I0
I00
tp3672
a(S'int'
p3673
S'baseValue'
p3674
g3674
S'the index of the base value'
p3675
I0
I0
I01
tp3676
ag233
ag237
ag241
ag245
ag249
ag253
ag257
asbsS'TConditionalProbabilityEstimatorConstructor_loess'
p3677
(i__main__
ClassDefinition
p3678
(dp3679
g4
I1
sg5
I01
sg6
g3677
sg7
S'TConditionalProbabilityEstimatorConstructor'
p3680
sg9
(lp3681
sg11
I00
sg12
(lp3682
(S'float'
p3683
S'windowProportion'
p3684
g3684
S'The proportion of points in a window for LR'
p3685
I0
I0
I01
tp3686
a(S'int'
p3687
S'nPoints'
p3688
g3688
S'The number of points on curve'
p3689
I0
I0
I01
tp3690
a(S'int'
p3691
S'distributionMethod'
p3692
g3692
S"Meaning of the 'nPoints'"
p3693
I0
I0
I01
tp3694
asbsS'TPreprocessor_addMissing'
p3695
(i__main__
ClassDefinition
p3696
(dp3697
g4
I1
sg5
I01
sg6
g3695
sg7
S'TPreprocessor'
p3698
sg9
(lp3699
sg11
I00
sg12
(lp3700
(S'TVariableFloatMap'
p3701
S'proportions'
p3702
g3702
S'proportion of removed values for individual values'
p3703
I0
I0
I00
tp3704
a(S'float'
p3705
S'defaultProportion'
p3706
g3706
S'default proportion of removed values (for attributes not specified above)'
p3707
I0
I0
I01
tp3708
a(S'int'
p3709
S'specialType'
p3710
g3710
S'special value type (1=DC, 2=DK)'
p3711
I0
I0
I01
tp3712
a(S'TRandomGenerator'
p3713
S'randomGenerator'
p3714
g3714
S'random number generator'
p3715
I0
I0
I00
tp3716
asbsS'TRuleBeamCandidateSelector'
p3717
(i__main__
ClassDefinition
p3718
(dp3719
g4
I1
sg5
I01
sg6
g3717
sg7
S'TOrange'
p3720
sg9
(lp3721
sg11
I01
sg12
(lp3722
sbsS'TSubsetsGenerator_minMaxSize'
p3723
(i__main__
ClassDefinition
p3724
(dp3725
g4
I1
sg5
I01
sg6
g3723
sg7
S'TSubsetsGenerator'
p3726
sg9
(lp3727
sg11
I00
sg12
(lp3728
(S'int'
p3729
S'min'
p3730
g3730
S'minimal subset size'
p3731
I0
I0
I01
tp3732
a(S'int'
p3733
S'max'
p3734
g3734
S'maximal subset size'
p3735
I0
I0
I01
tp3736
ag183
asbsS'TMakeRandomIndicesN'
p3737
(i__main__
ClassDefinition
p3738
(dp3739
g4
I1
sg5
I01
sg6
g3737
sg7
S'TMakeRandomIndices'
p3740
sg9
(lp3741
sg11
I00
sg12
(lp3742
(S'TFloatList'
p3743
g1775
g1775
S'probabilities of indices (last is 1-sum(p))'
p3744
I0
I0
I00
tp3745
ag455
ag459
ag463
asbsS'TTreeExampleSplitter_UnknownsToAll'
p3746
(i__main__
ClassDefinition
p3747
(dp3748
g4
I1
sg5
I01
sg6
g3746
sg7
S'TTreeExampleSplitter'
p3749
sg9
(lp3750
sg11
I00
sg12
(lp3751
sbsS'TValueFilter_stringList'
p3752
(i__main__
ClassDefinition
p3753
(dp3754
g4
I1
sg5
I01
sg6
g3752
sg7
S'TValueFilter'
p3755
sg9
(lp3756
sg11
I00
sg12
(lp3757
(S'TStringList'
p3758
S'values'
p3759
g3759
S'accepted values'
p3760
I0
I0
I00
tp3761
a(S'bool'
p3762
S'caseSensitive'
p3763
g3763
S'if true (default), the comparison is case sensitive'
p3764
I0
I0
I01
tp3765
ag682
ag686
asbsS'TContingencyClass'
p3766
(i__main__
ClassDefinition
p3767
(dp3768
g4
I1
sg5
I01
sg6
g3766
sg7
S'TContingency'
p3769
sg9
(lp3770
sg11
I01
sg12
(lp3771
g1192
ag1198
ag1202
ag1206
ag1210
asbsS'TAssociationClassifier'
p3772
(i__main__
ClassDefinition
p3773
(dp3774
g4
I1
sg5
I01
sg6
g3772
sg7
S'TClassifierFD'
p3775
sg9
(lp3776
sg11
I00
sg12
(lp3777
(S'TAssociationRules'
p3778
S'rules'
p3779
g3779
S'association rules'
p3780
I0
I0
I00
tp3781
a(S'int'
p3782
S'voteWeight'
p3783
g3783
S'vote weight (s=support, c=confidence, p=product)'
p3784
I0
I0
I01
tp3785
ag205
ag83
ag87
asbsS'TDomainDistributions'
p3786
(i__main__
ClassDefinition
p3787
(dp3788
g4
I1
sg5
I01
sg6
g3786
sg7
g1348
sg9
(lp3789
sg11
I00
sg12
(lp3790
sbsS'TDomain'
p3791
(i__main__
ClassDefinition
p3792
(dp3793
g4
I1
sg5
I01
sg6
g3791
sg7
S'TOrange'
p3794
sg9
(lp3795
sg11
I00
sg12
(lp3796
g1736
ag1740
ag1744
ag1748
asbsS'TTreePruner_SameMajority'
p3797
(i__main__
ClassDefinition
p3798
(dp3799
g4
I1
sg5
I01
sg6
g3797
sg7
S'TTreePruner'
p3800
sg9
(lp3801
sg11
I00
sg12
(lp3802
sbsS'TExampleDistConstructor'
p3803
(i__main__
ClassDefinition
p3804
(dp3805
g4
I1
sg5
I01
sg6
g3803
sg7
S'TOrange'
p3806
sg9
(lp3807
sg11
I01
sg12
(lp3808
sbsS'TIMByIMByRows'
p3809
(i__main__
ClassDefinition
p3810
(dp3811
g4
I1
sg5
I01
sg6
g3809
sg7
S'TIMConstructor'
p3812
sg9
(lp3813
sg11
I00
sg12
(lp3814
g844
asbsS'TDiscrete2Continuous'
p3815
(i__main__
ClassDefinition
p3816
(dp3817
g4
I1
sg5
I01
sg6
g3815
sg7
S'TTransformValue'
p3818
sg9
(lp3819
sg11
I00
sg12
(lp3820
(S'int'
p3821
S'value'
p3822
g3822
S'target value'
p3823
I0
I0
I01
tp3824
a(S'bool'
p3825
S'invert'
p3826
g3826
S'give 1.0 to values not equal to the target'
p3827
I0
I0
I01
tp3828
a(S'bool'
p3829
S'zeroBased'
p3830
g3830
S'if true (default) it gives values 0.0 and 1.0; else -1.0 and 1.0, 0.0 for undefined'
p3831
I0
I0
I01
tp3832
ag493
asbsS'TDomainDiscretization'
p3833
(i__main__
ClassDefinition
p3834
(dp3835
g4
I1
sg5
I01
sg6
g3833
sg7
S'TOrange'
p3836
sg9
(lp3837
sg11
I00
sg12
(lp3838
(S'TDiscretization'
p3839
S'discretization'
p3840
g3840
S'discretization'
p3841
I0
I0
I00
tp3842
asbsS'TColumnAssessor_m'
p3843
(i__main__
ClassDefinition
p3844
(dp3845
g4
I1
sg5
I01
sg6
g3843
sg7
S'TColumnAssessor'
p3846
sg9
(lp3847
sg11
I00
sg12
(lp3848
(S'float'
p3849
g814
g814
S'm for m-estimate'
p3850
I0
I0
I01
tp3851
asbsS'TImputer_defaults'
p3852
(i__main__
ClassDefinition
p3853
(dp3854
g4
I1
sg5
I01
sg6
g3852
sg7
S'TImputer'
p3855
sg9
(lp3856
sg11
I00
sg12
(lp3857
(S'TExample'
p3858
S'defaults'
p3859
g3859
S'values that are to be inserted instead of missing ones'
p3860
I0
I0
I00
tp3861
asbsS'TContingency'
p3862
(i__main__
ClassDefinition
p3863
(dp3864
g4
I1
sg5
I01
sg6
g3862
sg7
S'TOrange'
p3865
sg9
(lp3866
sg11
I00
sg12
(lp3867
g1192
ag1198
ag1202
ag1206
ag1210
asbsS'TStringValue'
p3868
(i__main__
ClassDefinition
p3869
(dp3870
g4
I1
sg5
I01
sg6
g3868
sg7
S'TSomeValue'
p3871
sg9
(lp3872
sg11
I00
sg12
(lp3873
sbsS'TClassifierGenerator'
p3874
(i__main__
ClassDefinition
p3875
(dp3876
g4
I1
sg5
I01
sg6
g3874
sg7
S'TExampleGenerator'
p3877
sg9
(lp3878
sg11
I00
sg12
(lp3879
(S'TClassifier'
p3880
S'classify'
p3881
g3881
S'classifier'
p3882
I0
I0
I00
tp3883
ag137
ag141
asbsS'TRuleDataStoppingCriteria_Python'
p3884
(i__main__
ClassDefinition
p3885
(dp3886
g4
I1
sg5
I01
sg6
g3884
sg7
S'TRuleDataStoppingCriteria'
p3887
sg9
(lp3888
sg11
I00
sg12
(lp3889
sbsS'TTreeDescender_UnknownToCommonSelector'
p3890
(i__main__
ClassDefinition
p3891
(dp3892
g4
I1
sg5
I01
sg6
g3890
sg7
g1096
sg9
(lp3893
sg11
I0
sg12
(lp3894
sbsS'THierarchicalCluster'
p3895
(i__main__
ClassDefinition
p3896
(dp3897
g4
I1
sg5
I01
sg6
g3895
sg7
S'TOrange'
p3898
sg9
(lp3899
sg11
I00
sg12
(lp3900
(S'THierarchicalClusterList'
p3901
S'branches'
p3902
g3902
S'subclusters'
p3903
I0
I0
I00
tp3904
a(S'float'
p3905
S'height'
p3906
g3906
S'height'
p3907
I0
I0
I01
tp3908
a(S'TIntList'
p3909
S'mapping'
p3910
g3910
S'indices to the list of all elements in the clustering'
p3911
I0
I0
I00
tp3912
a(S'int'
p3913
S'first'
p3914
g3914
S"the index into 'elements' to the first element of the cluster"
p3915
I0
I0
I01
tp3916
a(S'int'
p3917
S'last'
p3918
g3918
S"the index into 'elements' to the one after the last element of the cluster"
p3919
I0
I0
I01
tp3920
asbsS'TPreprocessIM'
p3921
(i__main__
ClassDefinition
p3922
(dp3923
g4
I1
sg5
I01
sg6
g3921
sg7
S'TOrange'
p3924
sg9
(lp3925
sg11
I01
sg12
(lp3926
sbsS'TRuleEvaluator_Laplace'
p3927
(i__main__
ClassDefinition
p3928
(dp3929
g4
I1
sg5
I01
sg6
g3927
sg7
S'TRuleEvaluator'
p3930
sg9
(lp3931
sg11
I00
sg12
(lp3932
sbsS'TColumnAssessor_N'
p3933
(i__main__
ClassDefinition
p3934
(dp3935
g4
I1
sg5
I01
sg6
g3933
sg7
S'TColumnAssessor'
p3936
sg9
(lp3937
sg11
I00
sg12
(lp3938
sbsS'TPreprocessor_dropMissing'
p3939
(i__main__
ClassDefinition
p3940
(dp3941
g4
I1
sg5
I01
sg6
g3939
sg7
S'TPreprocessor'
p3942
sg9
(lp3943
sg11
I00
sg12
(lp3944
sbsS'TMyLearner'
p3945
(i__main__
ClassDefinition
p3946
(dp3947
g641
I1
sg642
I0
sg643
g3945
sg644
S'TLearner'
p3948
sg646
I00
sg647
(lp3949
sg649
(lp3950
(S'int'
p3951
S'randomSeed'
p3952
g3952
S'seed for the random generator'
p3953
I0
I0
I01
tp3954
ag97
asbsS'TFeatureByMinComplexity'
p3955
(i__main__
ClassDefinition
p3956
(dp3957
g4
I1
sg5
I01
sg6
g3955
sg7
S'TFeatureInducer'
p3958
sg9
(lp3959
sg11
I00
sg12
(lp3960
(S'TColorIG'
p3961
S'colorIG'
p3962
g3962
S'graph coloring algorithm'
p3963
I0
I0
I00
tp3964
a(S'int'
p3965
S'completion'
p3966
g3966
S'decides how to determine the class for points not covered by any cluster'
p3967
I0
I0
I01
tp3968
asbsS'TExample'
p3969
(i__main__
ClassDefinition
p3970
(dp3971
g4
I1
sg5
I01
sg6
g3969
sg7
S'TOrange'
p3972
sg9
(lp3973
sg11
I00
sg12
(lp3974
g2048
asbsS'TFixedDiscretization'
p3975
(i__main__
ClassDefinition
p3976
(dp3977
g4
I1
sg5
I01
sg6
g3975
sg7
S'TDiscretization'
p3978
sg9
(lp3979
sg11
I00
sg12
(lp3980
(S'TFloatList'
p3981
S'points'
p3982
g3982
S'cut-off points'
p3983
I0
I0
I00
tp3984
asbsS'TDomainContingency'
p3985
(i__main__
ClassDefinition
p3986
(dp3987
g4
I1
sg5
I01
sg6
g3985
sg7
g1348
sg9
(lp3988
sg11
I00
sg12
(lp3989
(S'TDistribution'
p3990
S'classes'
p3991
g3991
S'distribution of class values'
p3992
I01
I0
I00
tp3993
a(S'bool'
p3994
S'classIsOuter'
p3995
g3995
S'tells whether the class is the outer variable'
p3996
I01
I0
I01
tp3997
asbsS'TPreprocessor_addGaussianClassNoise'
p3998
(i__main__
ClassDefinition
p3999
(dp4000
g4
I1
sg5
I01
sg6
g3998
sg7
S'TPreprocessor'
p4001
sg9
(lp4002
sg11
I00
sg12
(lp4003
(S'float'
p4004
S'deviation'
p4005
g4005
S'class deviation'
p4006
I0
I0
I01
tp4007
a(S'TRandomGenerator'
p4008
S'randomGenerator'
p4009
g4009
S'random number generator'
p4010
I0
I0
I00
tp4011
asbsS'TRuleDataStoppingCriteria'
p4012
(i__main__
ClassDefinition
p4013
(dp4014
g4
I1
sg5
I01
sg6
g4012
sg7
S'TOrange'
p4015
sg9
(lp4016
sg11
I01
sg12
(lp4017
sbsS'TPreprocessor_filter'
p4018
(i__main__
ClassDefinition
p4019
(dp4020
g4
I1
sg5
I01
sg6
g4018
sg7
S'TPreprocessor'
p4021
sg9
(lp4022
sg11
I00
sg12
(lp4023
(S'TFilter'
p4024
S'filter'
p4025
g4025
S'filter'
p4026
I0
I0
I00
tp4027
asbsS'TExampleDistBySorting'
p4028
(i__main__
ClassDefinition
p4029
(dp4030
g4
I1
sg5
I01
sg6
g4028
sg7
S'TExampleDistConstructor'
p4031
sg9
(lp4032
sg11
I00
sg12
(lp4033
sbsS'TGraphAsMatrix'
p4034
(i__main__
ClassDefinition
p4035
(dp4036
g4
I1
sg5
I01
sg6
g4034
sg7
S'TGraph'
p4037
sg9
(lp4038
sg11
I00
sg12
(lp4039
g1060
ag1064
ag1068
asbsS'TLWRClassifier'
p4040
(i__main__
ClassDefinition
p4041
(dp4042
g4
I1
sg5
I01
sg6
g4040
sg7
S'TClassifierFD'
p4043
sg9
(lp4044
sg11
I00
sg12
(lp4045
(S'TFindNearest'
p4046
S'findNearest'
p4047
g4047
S'object that find nearest neighbours'
p4048
I0
I0
I00
tp4049
a(S'TLinRegLearner'
p4050
S'linRegLearner'
p4051
g4051
S'learner the performs local linear regression'
p4052
I0
I0
I00
tp4053
a(S'float'
p4054
g810
g810
S'number of neighbours'
p4055
I0
I0
I01
tp4056
a(S'bool'
p4057
S'rankWeight'
p4058
g4058
S'use ranks instead of distances'
p4059
I0
I0
I01
tp4060
a(S'int'
p4061
S'weightID'
p4062
g4062
S"weights of examples stored in 'findNearest'"
p4063
I0
I0
I01
tp4064
ag205
ag83
ag87
asbsS'TValueFilter_discrete'
p4065
(i__main__
ClassDefinition
p4066
(dp4067
g4
I1
sg5
I01
sg6
g4065
sg7
S'TValueFilter'
p4068
sg9
(lp4069
sg11
I00
sg12
(lp4070
(S'TValueList'
p4071
S'values'
p4072
g4072
S'accepted values'
p4073
I0
I0
I00
tp4074
ag682
ag686
asbsS'TComputeDomainContingency'
p4075
(i__main__
ClassDefinition
p4076
(dp4077
g4
I1
sg5
I01
sg6
g4075
sg7
S'TOrange'
p4078
sg9
(lp4079
sg11
I00
sg12
(lp4080
g25
asbsS'TAssociationRulesInducer'
p4081
(i__main__
ClassDefinition
p4082
(dp4083
g4
I1
sg5
I01
sg6
g4081
sg7
S'TOrange'
p4084
sg9
(lp4085
sg11
I00
sg12
(lp4086
(S'int'
p4087
S'maxItemSets'
p4088
g4088
S'maximal number of itemsets (increase if you want)'
p4089
I0
I0
I01
tp4090
a(S'float'
p4091
S'confidence'
p4092
g4092
S'required confidence'
p4093
I0
I0
I01
tp4094
a(S'float'
p4095
S'support'
p4096
g4096
S'required support'
p4097
I0
I0
I01
tp4098
a(S'bool'
p4099
S'classificationRules'
p4100
g4100
S'if true, rules will have the class and only the class attribute on the right-hand side'
p4101
I0
I0
I01
tp4102
asbsS'TTreeStopCriteria'
p4103
(i__main__
ClassDefinition
p4104
(dp4105
g4
I1
sg5
I01
sg6
g4103
sg7
S'TOrange'
p4106
sg9
(lp4107
sg11
I00
sg12
(lp4108
sbsS'TPreprocessor_addMissingClasses'
p4109
(i__main__
ClassDefinition
p4110
(dp4111
g4
I1
sg5
I01
sg6
g4109
sg7
S'TPreprocessor'
p4112
sg9
(lp4113
sg11
I00
sg12
(lp4114
(S'float'
p4115
S'proportion'
p4116
g4116
S'proportion of removed class values'
p4117
I0
I0
I01
tp4118
a(S'int'
p4119
S'specialType'
p4120
g4120
S'special value type (1=DC, 2=DK)'
p4121
I0
I0
I01
tp4122
a(S'TRandomGenerator'
p4123
S'randomGenerator'
p4124
g4124
S'random number generator'
p4125
I0
I0
I00
tp4126
asbsS'TLookupLearner'
p4127
(i__main__
ClassDefinition
p4128
(dp4129
g4
I1
sg5
I01
sg6
g4127
sg7
S'TLearner'
p4130
sg9
(lp4131
sg11
I00
sg12
(lp4132
(S'TLearner'
p4133
S'learnerForUnknown'
p4134
g4134
S'a learner for classifying cases not found in the table'
p4135
I0
I0
I00
tp4136
a(S'bool'
p4137
S'allowFastLookups'
p4138
g4138
S'if true, it constructs LookupClassifiers for <=3 attributes'
p4139
I0
I0
I01
tp4140
a(S'int'
p4141
S'unknownsHandling'
p4142
g4142
S'0 omit examples with unknowns, 1 distribute them, 2 keep them in table'
p4143
I0
I0
I01
tp4144
ag97
asbsS'TBasketExampleGenerator'
p4145
(i__main__
ClassDefinition
p4146
(dp4147
g4
I1
sg5
I01
sg6
g4145
sg7
S'TFileExampleGenerator'
p4148
sg9
(lp4149
sg11
I00
sg12
(lp4150
(S'bool'
p4151
S'dontStore'
p4152
g4152
S'disables items storing'
p4153
I0
I0
I01
tp4154
a(S'bool'
p4155
S'dontCheckStored'
p4156
g4156
S'disables items lookup in the global cache'
p4157
I0
I0
I01
tp4158
a(S'TDomain'
p4159
S'sourceDomain'
p4160
g4160
S'domain with items that can be reused'
p4161
I0
I0
I00
tp4162
ag125
ag129
ag133
ag137
ag141
asbsS'TRuleEvaluator_Entropy'
p4163
(i__main__
ClassDefinition
p4164
(dp4165
g4
I1
sg5
I01
sg6
g4163
sg7
S'TRuleEvaluator'
p4166
sg9
(lp4167
sg11
I00
sg12
(lp4168
sbsS'TDistribution'
p4169
(i__main__
ClassDefinition
p4170
(dp4171
g4
I1
sg5
I01
sg6
g4169
sg7
S'TSomeValue'
p4172
sg9
(lp4173
sg11
I01
sg12
(lp4174
g744
ag748
ag752
ag756
ag760
ag764
ag768
ag772
asbsS'TExamplesDistance_DTW'
p4175
(i__main__
ClassDefinition
p4176
(dp4177
g4
I1
sg5
I01
sg6
g4175
sg7
S'TExamplesDistance_Normalized'
p4178
sg9
(lp4179
sg11
I00
sg12
(lp4180
(S'int'
p4181
S'dtwDistance'
p4182
g4182
S'distance measure between individual attributes (default: square of difference)'
p4183
I0
I0
I01
tp4184
ag323
ag327
ag331
ag335
ag339
ag343
ag347
asbsS'TTreeExampleSplitter_UnknownsToRandom'
p4185
(i__main__
ClassDefinition
p4186
(dp4187
g4
I1
sg5
I01
sg6
g4185
sg7
S'TTreeExampleSplitter'
p4188
sg9
(lp4189
sg11
I00
sg12
(lp4190
sbsS'TTreePruner_m'
p4191
(i__main__
ClassDefinition
p4192
(dp4193
g4
I1
sg5
I01
sg6
g4191
sg7
S'TTreePruner'
p4194
sg9
(lp4195
sg11
I00
sg12
(lp4196
(S'float'
p4197
g814
g814
S'm for m-estimate'
p4198
I0
I0
I01
tp4199
asbsS'TImputer'
p4200
(i__main__
ClassDefinition
p4201
(dp4202
g4
I1
sg5
I01
sg6
g4200
sg7
S'TOrange'
p4203
sg9
(lp4204
sg11
I01
sg12
(lp4205
sbsS'TExamplesDistanceConstructor_DTW'
p4206
(i__main__
ClassDefinition
p4207
(dp4208
g4
I1
sg5
I01
sg6
g4206
sg7
S'TExamplesDistanceConstructor_Normalized'
p4209
sg9
(lp4210
sg11
I00
sg12
(lp4211
(S'int'
p4212
S'dtwDistance'
p4213
g4213
S'distance measure between individual attributes (default: square of difference)'
p4214
I0
I0
I01
tp4215
ag1572
ag1576
ag1580
asbsS'TStopIMClusteringByAssessor_n'
p4216
(i__main__
ClassDefinition
p4217
(dp4218
g4
I1
sg5
I01
sg6
g4216
sg7
S'TStopIMClusteringByAssessor'
p4219
sg9
(lp4220
sg11
I00
sg12
(lp4221
(S'int'
p4222
g1302
g1302
S'number of clusters'
p4223
I0
I0
I01
tp4224
asbsS'TRandomGenerator'
p4225
(i__main__
ClassDefinition
p4226
(dp4227
g4
I1
sg5
I01
sg6
g4225
sg7
S'TOrange'
p4228
sg9
(lp4229
sg11
I00
sg12
(lp4230
(S'int'
p4231
S'initseed'
p4232
g4232
S'initial random seed'
p4233
I0
I0
I01
tp4234
a(S'int'
p4235
S'uses'
p4236
g4236
S'#times a number was returned'
p4237
I0
I0
I01
tp4238
asbsS'TThresholdCA'
p4239
(i__main__
ClassDefinition
p4240
(dp4241
g4
I1
sg5
I01
sg6
g4239
sg7
S'TOrange'
p4242
sg9
(lp4243
sg11
I00
sg12
(lp4244
sbsS'TPreprocessor_imputeByLearner'
p4245
(i__main__
ClassDefinition
p4246
(dp4247
g4
I1
sg5
I01
sg6
g4245
sg7
S'TPreprocessor'
p4248
sg9
(lp4249
sg11
I00
sg12
(lp4250
(S'TLearner'
p4251
S'learner'
p4252
g4252
S'learner used for inducing a model for imputation'
p4253
I0
I0
I00
tp4254
asbsS'TRuleBeamRefiner_Python'
p4255
(i__main__
ClassDefinition
p4256
(dp4257
g4
I1
sg5
I01
sg6
g4255
sg7
S'TRuleBeamRefiner'
p4258
sg9
(lp4259
sg11
I00
sg12
(lp4260
sbsS'TClassifierFromVarFD'
p4261
(i__main__
ClassDefinition
p4262
(dp4263
g4
I1
sg5
I01
sg6
g4261
sg7
S'TClassifierFD'
p4264
sg9
(lp4265
sg11
I00
sg12
(lp4266
(S'int'
p4267
S'position'
p4268
g4268
S'position of the attribute in domain'
p4269
I0
I0
I01
tp4270
a(S'TTransformValue'
p4271
S'transformer'
p4272
g4272
S'transformer'
p4273
I0
I0
I00
tp4274
a(S'TDistribution'
p4275
S'distributionForUnknown'
p4276
g4276
S'distribution for unknown value'
p4277
I0
I0
I00
tp4278
a(S'bool'
p4279
S'transformUnknowns'
p4280
g4280
S'if false (default), unknowns stay unknown or are changed into distribution if given'
p4281
I0
I0
I01
tp4282
ag205
ag83
ag87
asbsS'TImputer_model'
p4283
(i__main__
ClassDefinition
p4284
(dp4285
g4
I1
sg5
I01
sg6
g4283
sg7
S'TImputer'
p4286
sg9
(lp4287
sg11
I00
sg12
(lp4288
(S'TClassifierList'
p4289
S'models'
p4290
g4290
S'classifiers'
p4291
I0
I0
I00
tp4292
asbsS'TLogRegLearner'
p4293
(i__main__
ClassDefinition
p4294
(dp4295
g4
I1
sg5
I01
sg6
g4293
sg7
S'TLearner'
p4296
sg9
(lp4297
sg11
I00
sg12
(lp4298
(S'TLogRegFitter'
p4299
S'fitter'
p4300
g4300
S'fits beta coefficients and calculates beta errors.'
p4301
I0
I0
I00
tp4302
a(S'TImputerConstructor'
p4303
S'imputerConstructor'
p4304
g4304
S'if present, it constructs an imputer for unknown values'
p4305
I0
I0
I00
tp4306
a(S'TDomainContinuizer'
p4307
S'domainContinuizer'
p4308
g4308
S'if present, it constructs continuous domain if needed; if absent, default is used'
p4309
I0
I0
I00
tp4310
ag97
asbsS'TPreprocessor_takeMissing'
p4311
(i__main__
ClassDefinition
p4312
(dp4313
g4
I1
sg5
I01
sg6
g4311
sg7
S'TPreprocessor'
p4314
sg9
(lp4315
sg11
I00
sg12
(lp4316
sbsS'TMeasureAttribute_IM'
p4317
(i__main__
ClassDefinition
p4318
(dp4319
g4
I1
sg5
I01
sg6
g4317
sg7
S'TMeasureAttribute'
p4320
sg9
(lp4321
sg11
I00
sg12
(lp4322
(S'TIMConstructor'
p4323
S'IMconstructor'
p4324
g4324
S'incompatibility matrix constructor'
p4325
I0
I0
I00
tp4326
a(S'TColumnAssessor'
p4327
S'columnAssessor'
p4328
g4328
S'column quality assessor'
p4329
I0
I0
I00
tp4330
ag559
ag563
ag567
asbsS'TFeatureByDistributions'
p4331
(i__main__
ClassDefinition
p4332
(dp4333
g4
I1
sg5
I01
sg6
g4331
sg7
S'TFeatureInducer'
p4334
sg9
(lp4335
sg11
I00
sg12
(lp4336
(S'TClustersFromDistributions'
p4337
S'clustersFromDistributions'
p4338
g4338
S'clustering algorithm'
p4339
I0
I0
I00
tp4340
a(S'int'
p4341
S'completion'
p4342
g4342
S'decides how to determine the class for points not covered by any cluster'
p4343
I0
I0
I01
tp4344
asbsS'TCostMatrix'
p4345
(i__main__
ClassDefinition
p4346
(dp4347
g4
I1
sg5
I01
sg6
g4345
sg7
S'TOrange'
p4348
sg9
(lp4349
sg11
I00
sg12
(lp4350
(S'TVariable'
p4351
S'classVar'
p4352
g4352
S'attribute to which the matrix applies'
p4353
I0
I0
I00
tp4354
asbsS'TStopIMClusteringByAssessor_noProfit'
p4355
(i__main__
ClassDefinition
p4356
(dp4357
g4
I1
sg5
I01
sg6
g4355
sg7
S'TStopIMClusteringByAssessor'
p4358
sg9
(lp4359
sg11
I00
sg12
(lp4360
(S'float'
p4361
S'minProfitProportion'
p4362
g4362
S'minimal allowable profit proportion'
p4363
I0
I0
I01
tp4364
asbsS'TRemoveUnusedValues'
p4365
(i__main__
ClassDefinition
p4366
(dp4367
g4
I1
sg5
I01
sg6
g4365
sg7
S'TOrange'
p4368
sg9
(lp4369
sg11
I00
sg12
(lp4370
(S'bool'
p4371
S'removeOneValued'
p4372
g4372
S'if true (default is false), one valued attributes are also removed'
p4373
I0
I0
I01
tp4374
asbsS'TExamplesDistance_Normalized'
p4375
(i__main__
ClassDefinition
p4376
(dp4377
g4
I1
sg5
I01
sg6
g4375
sg7
S'TExamplesDistance'
p4378
sg9
(lp4379
sg11
I01
sg12
(lp4380
g323
ag327
ag331
ag335
ag339
ag343
ag347
asbsS'TExamplesDistance_Euclidean'
p4381
(i__main__
ClassDefinition
p4382
(dp4383
g4
I1
sg5
I01
sg6
g4381
sg7
S'TExamplesDistance_Normalized'
p4384
sg9
(lp4385
sg11
I00
sg12
(lp4386
(S'TDomainDistributions'
p4387
S'distributions'
p4388
g4388
S'distributions (of discrete attributes only)'
p4389
I0
I0
I00
tp4390
a(S'TAttributedFloatList'
p4391
S'bothSpecialDist'
p4392
g4392
S'distances between discrete attributes if both values are unknown'
p4393
I0
I0
I00
tp4394
ag323
ag327
ag331
ag335
ag339
ag343
ag347
asbsS'TPreprocessor_take'
p4395
(i__main__
ClassDefinition
p4396
(dp4397
g4
I1
sg5
I01
sg6
g4395
sg7
S'TPreprocessor'
p4398
sg9
(lp4399
sg11
I00
sg12
(lp4400
(S'TVariableFilterMap'
p4401
S'values'
p4402
g4402
S'variable-filter pairs'
p4403
I0
I0
I00
tp4404
a(S'bool'
p4405
S'conjunction'
p4406
g4406
S'decides whether to take conjunction or disjunction of values'
p4407
I0
I0
I01
tp4408
asbsS'TIMConstructor'
p4409
(i__main__
ClassDefinition
p4410
(dp4411
g4
I1
sg5
I01
sg6
g4409
sg7
S'TOrange'
p4412
sg9
(lp4413
sg11
I01
sg12
(lp4414
g844
asbsS'TRuleFinder_Python'
p4415
(i__main__
ClassDefinition
p4416
(dp4417
g4
I1
sg5
I01
sg6
g4415
sg7
S'TRuleFinder'
p4418
sg9
(lp4419
sg11
I00
sg12
(lp4420
g2988
ag2991
asbsS'TTabDelimExampleGenerator'
p4421
(i__main__
ClassDefinition
p4422
(dp4423
g4
I1
sg5
I01
sg6
g4421
sg7
S'TFileExampleGenerator'
p4424
sg9
(lp4425
sg11
I00
sg12
(lp4426
(S'TIntList'
p4427
S'attributeTypes'
p4428
g4428
S'types of attributes (-1 normal, 0 skip, <-1 = meta ID)'
p4429
I0
I0
I00
tp4430
a(S'int'
p4431
S'classPos'
p4432
g4432
S'position of the class attribute'
p4433
I0
I0
I01
tp4434
a(S'int'
p4435
S'headerLines'
p4436
g4436
S'number of header lines (3 for .tab, 1 for .txt)'
p4437
I0
I0
I01
tp4438
a(S'bool'
p4439
S'csv'
p4440
g4440
S"also allow ',' as a separator"
p4441
I0
I0
I01
tp4442
ag125
ag129
ag133
ag137
ag141
asbsS'TRandomClassifier'
p4443
(i__main__
ClassDefinition
p4444
(dp4445
g4
I1
sg5
I01
sg6
g4443
sg7
S'TClassifier'
p4446
sg9
(lp4447
sg11
I00
sg12
(lp4448
(S'TDistribution'
p4449
S'probabilities'
p4450
g4450
S'probabilities of predictions'
p4451
I0
I0
I00
tp4452
ag83
ag87
asbsS'TkNNLearner'
p4453
(i__main__
ClassDefinition
p4454
(dp4455
g4
I1
sg5
I01
sg6
g4453
sg7
S'TLearner'
p4456
sg9
(lp4457
sg11
I00
sg12
(lp4458
(S'float'
p4459
g810
g810
S'number of neighbours'
p4460
I0
I0
I01
tp4461
a(S'bool'
p4462
S'rankWeight'
p4463
g4463
S'enable weighting by ranks'
p4464
I0
I0
I01
tp4465
a(S'TExamplesDistanceConstructor'
p4466
S'distanceConstructor'
p4467
g4467
S'metrics'
p4468
I0
I0
I00
tp4469
ag97
asbsS'TTreeDescender_UnknownToNode'
p4470
(i__main__
ClassDefinition
p4471
(dp4472
g4
I1
sg5
I01
sg6
g4470
sg7
g1096
sg9
(lp4473
sg11
I0
sg12
(lp4474
sbsS'TDistributionAssessor_mf'
p4475
(i__main__
ClassDefinition
p4476
(dp4477
g4
I1
sg5
I01
sg6
g4475
sg7
S'TDistributionAssessor'
p4478
sg9
(lp4479
sg11
I00
sg12
(lp4480
(S'float'
p4481
g814
g814
S'm for m-estimate'
p4482
I0
I0
I01
tp4483
asbsS'TExampleClusters'
p4484
(i__main__
ClassDefinition
p4485
(dp4486
g4
I1
sg5
I01
sg6
g4484
sg7
S'TGeneralExampleClustering'
p4487
sg9
(lp4488
sg11
I00
sg12
(lp4489
(S'TExampleCluster'
p4490
S'root'
p4491
g4491
S'root of cluster hierarchy'
p4492
I0
I0
I00
tp4493
a(S'float'
p4494
S'quality'
p4495
g4495
S"'quality' of clustering"
p4496
I0
I0
I01
tp4497
asbsS'TCostLearner'
p4498
(i__main__
ClassDefinition
p4499
(dp4500
g4
I1
sg5
I01
sg6
g4498
sg7
S'TMajorityLearner'
p4501
sg9
(lp4502
sg11
I00
sg12
(lp4503
(S'TCostMatrix'
p4504
S'cost'
p4505
g4505
S'cost matrix'
p4506
I0
I0
I00
tp4507
ag515
ag519
ag97
asbsS'TEFMDataDescription'
p4508
(i__main__
ClassDefinition
p4509
(dp4510
g4
I1
sg5
I01
sg6
g4508
sg7
S'TOrange'
p4511
sg9
(lp4512
sg11
I00
sg12
(lp4513
(S'TDomain'
p4514
S'domain'
p4515
g4515
S'domain'
p4516
I01
I0
I00
tp4517
asbsS'TClassifierFD'
p4518
(i__main__
ClassDefinition
p4519
(dp4520
g4
I1
sg5
I01
sg6
g4518
sg7
S'TClassifier'
p4521
sg9
(lp4522
sg11
I00
sg12
(lp4523
g205
ag83
ag87
asbsS'TPreprocessor_drop'
p4524
(i__main__
ClassDefinition
p4525
(dp4526
g4
I1
sg5
I01
sg6
g4524
sg7
S'TPreprocessor'
p4527
sg9
(lp4528
sg11
I00
sg12
(lp4529
(S'TVariableFilterMap'
p4530
S'values'
p4531
g4531
S'variable-filter pairs'
p4532
I0
I0
I00
tp4533
a(S'bool'
p4534
S'conjunction'
p4535
g4535
S'decides whether to take conjunction or disjunction of values'
p4536
I0
I0
I01
tp4537
asbsS'TTreeDescender_UnknownToCommonBranch'
p4538
(i__main__
ClassDefinition
p4539
(dp4540
g4
I1
sg5
I01
sg6
g4538
sg7
g1096
sg9
(lp4541
sg11
I0
sg12
(lp4542
sbsS'TPreprocessor_addNoise'
p4543
(i__main__
ClassDefinition
p4544
(dp4545
g4
I1
sg5
I01
sg6
g4543
sg7
S'TPreprocessor'
p4546
sg9
(lp4547
sg11
I00
sg12
(lp4548
(S'TVariableFloatMap'
p4549
S'proportions'
p4550
g4550
S'proportion of changed values for individual attributes'
p4551
I0
I0
I00
tp4552
a(S'float'
p4553
S'defaultProportion'
p4554
g4554
S'default proportion of changed values (for attributes not specified above)'
p4555
I0
I0
I01
tp4556
a(S'TRandomGenerator'
p4557
S'randomGenerator'
p4558
g4558
S'random number generator'
p4559
I0
I0
I00
tp4560
asbsS'TStopIMClusteringByAssessor_binary'
p4561
(i__main__
ClassDefinition
p4562
(dp4563
g4
I1
sg5
I01
sg6
g4561
sg7
S'TStopIMClusteringByAssessor'
p4564
sg9
(lp4565
sg11
I00
sg12
(lp4566
sbsS'TColumnAssessor_mf'
p4567
(i__main__
ClassDefinition
p4568
(dp4569
g4
I1
sg5
I01
sg6
g4567
sg7
S'TColumnAssessor'
p4570
sg9
(lp4571
sg11
I00
sg12
(lp4572
(S'float'
p4573
g814
g814
S'm for m-estimate'
p4574
I0
I0
I01
tp4575
asbsS'TExamplesDistanceConstructor'
p4576
(i__main__
ClassDefinition
p4577
(dp4578
g4
I1
sg5
I01
sg6
g4576
sg7
S'TOrange'
p4579
sg9
(lp4580
sg11
I01
sg12
(lp4581
g1580
asbsS'TSubsetsGenerator'
p4582
(i__main__
ClassDefinition
p4583
(dp4584
g4
I1
sg5
I01
sg6
g4582
sg7
S'TOrange'
p4585
sg9
(lp4586
sg11
I01
sg12
(lp4587
g183
asbsS'TPreprocessor_addCensorWeight'
p4588
(i__main__
ClassDefinition
p4589
(dp4590
g4
I1
sg5
I01
sg6
g4588
sg7
S'TPreprocessor'
p4591
sg9
(lp4592
sg11
I00
sg12
(lp4593
(S'TVariable'
p4594
S'outcomeVar'
p4595
g4595
S'outcome variable'
p4596
I0
I0
I00
tp4597
a(S'TVariable'
p4598
S'timeVar'
p4599
g4599
S'time variable'
p4600
I0
I0
I00
tp4601
a(S'TValue'
p4602
S'eventValue'
p4603
g4603
S'event (fail) value'
p4604
I0
I0
I01
tp4605
a(S'int'
p4606
S'method'
p4607
g4607
S'weighting method'
p4608
I0
I0
I01
tp4609
a(S'float'
p4610
S'maxTime'
p4611
g4611
S'maximal time'
p4612
I0
I0
I01
tp4613
a(S'bool'
p4614
S'addComplementary'
p4615
g4615
S'if true (default is false), complementary examples are added for censored examples'
p4616
I0
I0
I01
tp4617
asbsS'TRuleBeamCandidateSelector_Python'
p4618
(i__main__
ClassDefinition
p4619
(dp4620
g4
I1
sg5
I01
sg6
g4618
sg7
S'TRuleBeamCandidateSelector'
p4621
sg9
(lp4622
sg11
I00
sg12
(lp4623
sbsS'TEntropyDiscretization'
p4624
(i__main__
ClassDefinition
p4625
(dp4626
g4
I1
sg5
I01
sg6
g4624
sg7
S'TDiscretization'
p4627
sg9
(lp4628
sg11
I00
sg12
(lp4629
(S'int'
p4630
S'maxNumberOfIntervals'
p4631
g4631
S'maximal number of intervals; default = 0 (no limits)'
p4632
I0
I0
I01
tp4633
a(S'bool'
p4634
S'forceAttribute'
p4635
g4635
S'minimal number of intervals; default = 0 (no limits)'
p4636
I0
I0
I01
tp4637
asbsS'TIMBySorting'
p4638
(i__main__
ClassDefinition
p4639
(dp4640
g4
I1
sg5
I01
sg6
g4638
sg7
S'TIMConstructor'
p4641
sg9
(lp4642
sg11
I00
sg12
(lp4643
g844
asbsS'TImputerConstructor_asValue'
p4644
(i__main__
ClassDefinition
p4645
(dp4646
g4
I1
sg5
I01
sg6
g4644
sg7
S'TImputerConstructor'
p4647
sg9
(lp4648
sg11
I00
sg12
(lp4649
g151
asbsS'TGaussianDistribution'
p4650
(i__main__
ClassDefinition
p4651
(dp4652
g4
I1
sg5
I01
sg6
g4650
sg7
S'TDistribution'
p4653
sg9
(lp4654
sg11
I00
sg12
(lp4655
(S'float'
p4656
S'mean'
p4657
g4657
S'mu'
p4658
I0
I0
I01
tp4659
a(S'float'
p4660
S'sigma'
p4661
g4661
S'sigma'
p4662
I0
I0
I01
tp4663
ag744
ag748
ag752
ag756
ag760
ag764
ag768
ag772
asbsS'TExampleDistVector'
p4664
(i__main__
ClassDefinition
p4665
(dp4666
g4
I1
sg5
I01
sg6
g4664
sg7
S'TOrange'
p4667
sg9
(lp4668
sg11
I00
sg12
(lp4669
sbsS'TRuleClassifier'
p4670
(i__main__
ClassDefinition
p4671
(dp4672
g4
I1
sg5
I01
sg6
g4670
sg7
S'TClassifier'
p4673
sg9
(lp4674
sg11
I01
sg12
(lp4675
g1418
ag1421
ag83
ag87
asbsS'TRuleBeamFilter_Width'
p4676
(i__main__
ClassDefinition
p4677
(dp4678
g4
I1
sg5
I01
sg6
g4676
sg7
S'TRuleBeamFilter'
p4679
sg9
(lp4680
sg11
I00
sg12
(lp4681
(S'int'
p4682
S'width'
p4683
g4683
g1417
I0
I0
I01
tp4684
asbsS'TProbabilityEstimator'
p4685
(i__main__
ClassDefinition
p4686
(dp4687
g4
I1
sg5
I01
sg6
g4685
sg7
S'TOrange'
p4688
sg9
(lp4689
sg11
I01
sg12
(lp4690
g1088
ag1092
asbsS'TIMClustering'
p4691
(i__main__
ClassDefinition
p4692
(dp4693
g4
I1
sg5
I01
sg6
g4691
sg7
S'TOrange'
p4694
sg9
(lp4695
sg11
I00
sg12
(lp4696
(S'TIM'
p4697
S'im'
p4698
g4698
S'incompatibilty matrix'
p4699
I0
I0
I00
tp4700
a(S'TIntList'
p4701
S'clusters'
p4702
g4702
S'cluster index for each matrix column'
p4703
I0
I0
I00
tp4704
a(S'int'
p4705
S'maxCluster'
p4706
g4706
S'the highest cluster index'
p4707
I0
I0
I01
tp4708
a(S'float'
p4709
S'quality'
p4710
g4710
S'cluster quality'
p4711
I0
I0
I01
tp4712
asbsS'TImputerConstructor_model'
p4713
(i__main__
ClassDefinition
p4714
(dp4715
g4
I1
sg5
I01
sg6
g4713
sg7
S'TImputerConstructor'
p4716
sg9
(lp4717
sg11
I00
sg12
(lp4718
(S'TLearner'
p4719
S'learnerDiscrete'
p4720
g4720
S'learner for discrete attributes'
p4721
I0
I0
I00
tp4722
a(S'TLearner'
p4723
S'learnerContinuous'
p4724
g4724
S'learner for continuous attributes'
p4725
I0
I0
I00
tp4726
a(S'bool'
p4727
S'useClass'
p4728
g4728
S'tells whether to use class value in imputation (default: false)'
p4729
I0
I0
I01
tp4730
ag151
asbsS'TFindNearestConstructor_BruteForce'
p4731
(i__main__
ClassDefinition
p4732
(dp4733
g4
I1
sg5
I01
sg6
g4731
sg7
S'TFindNearestConstructor'
p4734
sg9
(lp4735
sg11
I00
sg12
(lp4736
g1400
ag1404
asbsS'TImputerConstructor'
p4737
(i__main__
ClassDefinition
p4738
(dp4739
g4
I1
sg5
I01
sg6
g4737
sg7
S'TOrange'
p4740
sg9
(lp4741
sg11
I01
sg12
(lp4742
g151
asbsS'TPreprocessor'
p4743
(i__main__
ClassDefinition
p4744
(dp4745
g4
I1
sg5
I01
sg6
g4743
sg7
S'TOrange'
p4746
sg9
(lp4747
sg11
I01
sg12
(lp4748
sbsS'TMakeRandomIndices'
p4749
(i__main__
ClassDefinition
p4750
(dp4751
g4
I1
sg5
I01
sg6
g4749
sg7
S'TOrange'
p4752
sg9
(lp4753
sg11
I00
sg12
(lp4754
g455
ag459
ag463
asbsS'TDiscretizer'
p4755
(i__main__
ClassDefinition
p4756
(dp4757
g4
I1
sg5
I01
sg6
g4755
sg7
S'TTransformValue'
p4758
sg9
(lp4759
sg11
I01
sg12
(lp4760
g493
asbsS'TIMByRowsPreprocessor'
p4761
(i__main__
ClassDefinition
p4762
(dp4763
g4
I1
sg5
I01
sg6
g4761
sg7
S'TOrange'
p4764
sg9
(lp4765
sg11
I01
sg12
(lp4766
sbsS'TTreeStopCriteria_common'
p4767
(i__main__
ClassDefinition
p4768
(dp4769
g4
I1
sg5
I01
sg6
g4767
sg7
S'TTreeStopCriteria'
p4770
sg9
(lp4771
sg11
I00
sg12
(lp4772
(S'float'
p4773
S'maxMajority'
p4774
g4774
S'a maximal proportion of majority class for division to continue'
p4775
I0
I0
I01
tp4776
a(S'float'
p4777
S'minExamples'
p4778
g4778
S'a minimal number of examples for division to continue'
p4779
I0
I0
I01
tp4780
asbsS'TRetisExampleGenerator'
p4781
(i__main__
ClassDefinition
p4782
(dp4783
g4
I1
sg5
I01
sg6
g4781
sg7
S'TFileExampleGenerator'
p4784
sg9
(lp4785
sg11
I00
sg12
(lp4786
g125
ag129
ag133
ag137
ag141
asbsS'TTreeStopCriteria_Python'
p4787
(i__main__
ClassDefinition
p4788
(dp4789
g4
I1
sg5
I01
sg6
g4787
sg7
S'TTreeStopCriteria'
p4790
sg9
(lp4791
sg11
I00
sg12
(lp4792
sbsS'TGeneralExampleClustering'
p4793
(i__main__
ClassDefinition
p4794
(dp4795
g4
I1
sg5
I01
sg6
g4793
sg7
S'TOrange'
p4796
sg9
(lp4797
sg11
I01
sg12
(lp4798
sbsS'TIGByIM'
p4799
(i__main__
ClassDefinition
p4800
(dp4801
g4
I1
sg5
I01
sg6
g4799
sg7
S'TIGConstructor'
p4802
sg9
(lp4803
sg11
I00
sg12
(lp4804
(S'TIMConstructor'
p4805
S'IMconstructor'
p4806
g4806
S'IM constructor'
p4807
I0
I0
I00
tp4808
asbs.