(dp0
S'TComputeDomainContingency_ImputeWithClassifier'
p1
(i__main__
ClassDefinition
p2
(dp3
S'extended'
p4
I1
sS'imported'
p5
I01
sS'name'
p6
g1
sS'parent'
p7
S'TComputeDomainContingency'
p8
sS'components'
p9
(lp10
sS'abstract'
p11
I00
sS'properties'
p12
(lp13
(S'TLearner'
p14
S'learnerForDiscrete'
p15
g15
S'constructs a classifier for imputation of discrete values'
p16
I0
I0
I00
tp17
a(S'TLearner'
p18
S'learnerForContinuous'
p19
g19
S'constructs a classifier for imputation of continuous values'
p20
I0
I0
I00
tp21
a(S'bool'
p22
S'classIsOuter'
p23
g23
S'tells whether the class is the outer variable in contingencies'
p24
I0
I0
I01
tp25
asbsS'TRuleDataStoppingCriteria_NoPositives'
p26
(i__main__
ClassDefinition
p27
(dp28
g4
I1
sg5
I01
sg6
g26
sg7
S'TRuleDataStoppingCriteria'
p29
sg9
(lp30
sg11
I00
sg12
(lp31
sbsS'TExampleCluster'
p32
(i__main__
ClassDefinition
p33
(dp34
g4
I1
sg5
I01
sg6
g32
sg7
S'TOrange'
p35
sg9
(lp36
sg11
I00
sg12
(lp37
(S'TExampleCluster'
p38
S'left'
p39
g39
S"'left' cluster"
p40
I0
I0
I00
tp41
a(S'TExampleCluster'
p42
S'right'
p43
g43
S"'right' cluster"
p44
I0
I0
I00
tp45
a(S'float'
p46
S'distance'
p47
g47
S'distance between the two clusters (not defined for leaves)'
p48
I0
I0
I01
tp49
a(S'TExample'
p50
S'centroid'
p51
g51
S"cluster's centroid (always defined for leaves)"
p52
I0
I0
I00
tp53
asbsS'TClassifierByLookupTableN'
p54
(i__main__
ClassDefinition
p55
(dp56
g4
I1
sg5
I01
sg6
g54
sg7
S'TClassifierByLookupTable'
p57
sg9
(lp58
sg11
I00
sg12
(lp59
(S'TVarList'
p60
S'variables'
p61
g61
S'attributes'
p62
I01
I0
I00
tp63
a(S'TIntList'
p64
S'noOfValues'
p65
g65
S'number of values for each attribute'
p66
I01
I0
I00
tp67
a(S'TEFMDataDescription'
p68
S'dataDescription'
p69
g69
S'data description'
p70
I0
I0
I00
tp71
a(S'TValueList'
p72
S'lookupTable'
p73
g73
S'a list of class values, one for each attribute value'
p74
I01
I0
I00
tp75
a(S'TDistributionList'
p76
S'distributions'
p77
g77
S'a list of class distributions, one for each attribute value'
p78
I01
I0
I00
tp79
a(S'TVariable'
p80
S'classVar'
p81
g81
S'class variable'
p82
I0
I0
I00
tp83
a(S'bool'
p84
S'computesProbabilities'
p85
g85
S'set if classifier computes class probabilities (if not, it assigns 1.0 to the predicted)'
p86
I0
I0
I01
tp87
asbsS'TLearner_Python'
p88
(i__main__
ClassDefinition
p89
(dp90
g4
I1
sg5
I01
sg6
g88
sg7
S'TLearner'
p91
sg9
(lp92
sg11
I00
sg12
(lp93
(S'int'
p94
S'needs'
p95
g95
S'the kind of data that learner needs'
p96
I01
I0
I01
tp97
asbsS'TConditionalProbabilityEstimator_FromDistribution'
p98
(i__main__
ClassDefinition
p99
(dp100
g4
I1
sg5
I01
sg6
g98
sg7
S'TConditionalProbabilityEstimator'
p101
sg9
(lp102
sg11
I00
sg12
(lp103
(S'TContingency'
p104
S'probabilities'
p105
g105
S'Contingency that stores conditional probabilities'
p106
I0
I0
I00
tp107
a(S'bool'
p108
S'supportsDiscrete'
p109
g109
S'can estimate probabilities of discrete attributes'
p110
I01
I0
I01
tp111
a(S'bool'
p112
S'supportsContinuous'
p113
g113
S'can estimate probabilities of continuous attributes'
p114
I01
I0
I01
tp115
asbsS'TAssistantExampleGenerator'
p116
(i__main__
ClassDefinition
p117
(dp118
g4
I1
sg5
I01
sg6
g116
sg7
S'TFileExampleGenerator'
p119
sg9
(lp120
sg11
I00
sg12
(lp121
(S'string'
p122
S'filename'
p123
g123
S'filename'
p124
I0
I0
I01
tp125
a(S'int'
p126
S'startDataPos'
p127
g127
S'starting position of the data in file'
p128
I0
I0
I01
tp129
a(S'int'
p130
S'startDataLine'
p131
g131
S'line in the file where the data starts'
p132
I0
I0
I01
tp133
a(S'TDomain'
p134
S'domain'
p135
g135
S'domain'
p136
I0
I0
I00
tp137
a(S'int'
p138
S'version'
p139
g139
S'unique version identifier'
p140
I01
I0
I01
tp141
asbsS'TImputerConstruct_Python'
p142
(i__main__
ClassDefinition
p143
(dp144
g4
I1
sg5
I01
sg6
g142
sg7
S'TImputerConstructor'
p145
sg9
(lp146
sg11
I00
sg12
(lp147
(S'bool'
p148
S'imputeClass'
p149
g149
S'tells whether to impute the class value (default: true)'
p150
I0
I0
I01
tp151
asbsS'TIMByRowsConstructor'
p152
(i__main__
ClassDefinition
p153
(dp154
g4
I1
sg5
I01
sg6
g152
sg7
S'TOrange'
p155
sg9
(lp156
sg11
I01
sg12
(lp157
sbsS'TSubsetsGenerator_withRestrictions'
p158
(i__main__
ClassDefinition
p159
(dp160
g4
I1
sg5
I01
sg6
g158
sg7
S'TSubsetsGenerator'
p161
sg9
(lp162
sg11
I00
sg12
(lp163
(S'TSubsetsGenerator'
p164
S'subGenerator'
p165
g165
S'subset generator'
p166
I0
I0
I00
tp167
a(S'TVarList'
p168
S'required'
p169
g169
S'set of required attributes'
p170
I0
I0
I00
tp171
a(S'TVarList'
p172
S'forbidden'
p173
g173
S'set of forbidden attributes'
p174
I0
I0
I00
tp175
a(S'TVarListList'
p176
S'forbiddenSubSubsets'
p177
g177
S'set of forbidden subsets (attributes that must not occur together)'
p178
I0
I0
I00
tp179
a(S'TVarList'
p180
S'varList'
p181
g181
S'a set of attributes from which subsets are generated'
p182
I0
I0
I00
tp183
asbsS'TRuleBeamFilter_Python'
p184
(i__main__
ClassDefinition
p185
(dp186
g4
I1
sg5
I01
sg6
g184
sg7
S'TRuleBeamFilter'
p187
sg9
(lp188
sg11
I00
sg12
(lp189
sbsS'TTreeExampleSplitter'
p190
(i__main__
ClassDefinition
p191
(dp192
g4
I1
sg5
I01
sg6
g190
sg7
S'TOrange'
p193
sg9
(lp194
sg11
I01
sg12
(lp195
sbsS'TSVMClassifier'
p196
(i__main__
ClassDefinition
p197
(dp198
g4
I1
sg5
I01
sg6
g196
sg7
S'TClassifierFD'
p199
sg9
(lp200
sg11
I00
sg12
(lp201
(S'TDomain'
p202
S'domain'
p203
g203
S'domain'
p204
I0
I0
I00
tp205
ag83
ag87
asbsS'TFilteredGenerator'
p206
(i__main__
ClassDefinition
p207
(dp208
g4
I1
sg5
I01
sg6
g206
sg7
S'TAdapterGenerator'
p209
sg9
(lp210
sg11
I00
sg12
(lp211
(S'TFilter'
p212
S'filter'
p213
g213
S'decides which examples are skipped'
p214
I0
I0
I00
tp215
ag137
ag141
asbsS'TPythonVariable'
p216
(i__main__
ClassDefinition
p217
(dp218
g4
I1
sg5
I01
sg6
g216
sg7
S'TVariable'
p219
sg9
(lp220
sg11
I00
sg12
(lp221
(S'bool'
p222
S'usePickle'
p223
g223
S'tells whether to use pickle for saving to/loading from files'
p224
I0
I0
I01
tp225
a(S'bool'
p226
S'useSomeValue'
p227
g227
S'tells whether the Variable will operate on Value or SomeValue (default)'
p228
I0
I0
I01
tp229
a(S'string'
p230
S'name'
p231
g231
S"variable's name"
p232
I0
I0
I01
tp233
a(S'int'
p234
S'varType'
p235
g235
S'variable type'
p236
I0
I0
I01
tp237
a(S'bool'
p238
S'ordered'
p239
g239
S'variable values are ordered'
p240
I0
I0
I01
tp241
a(S'bool'
p242
S'distributed'
p243
g243
S'variable values are distributions'
p244
I0
I0
I01
tp245
a(S'TRandomGenerator'
p246
S'randomGenerator'
p247
g247
S'random generator for random values (initialized when first needed)'
p248
I0
I0
I00
tp249
a(S'TVariable'
p250
S'sourceVariable'
p251
g251
S'The attribute that this attribute is computed from (when applicable)'
p252
I0
I0
I00
tp253
a(S'TClassifier'
p254
S'getValueFrom'
p255
g255
S'Function to compute the value from values of other variables'
p256
I0
I0
I00
tp257
asbsS'TTreeLearner'
p258
(i__main__
ClassDefinition
p259
(dp260
g4
I1
sg5
I01
sg6
g258
sg7
S'TLearner'
p261
sg9
(lp262
sg11
I00
sg12
(lp263
(S'TTreeSplitConstructor'
p264
S'split'
p265
g265
S'split criterion'
p266
I0
I0
I00
tp267
a(S'TTreeStopCriteria'
p268
S'stop'
p269
g269
S'stop criterion'
p270
I0
I0
I00
tp271
a(S'TComputeDomainContingency'
p272
S'contingencyComputer'
p273
g273
S'computes contingency matrix'
p274
I0
I0
I00
tp275
a(S'TLearner'
p276
S'nodeLearner'
p277
g277
S'node learner'
p278
I0
I0
I00
tp279
a(S'TTreeExampleSplitter'
p280
S'exampleSplitter'
p281
g281
S'splits examples to branches'
p282
I0
I0
I00
tp283
a(S'int'
p284
S'maxDepth'
p285
g285
S'maximal tree depth (0 = root only, -1 = no limit)'
p286
I0
I0
I01
tp287
a(S'bool'
p288
S'storeExamples'
p289
g289
S'if true (default: false), learning examples in nodes are stored'
p290
I0
I0
I01
tp291
a(S'bool'
p292
S'storeDistributions'
p293
g293
S'if true (default), class distributions of learning examples in nodes are stored'
p294
I0
I0
I01
tp295
a(S'bool'
p296
S'storeContingencies'
p297
g297
S'if true (default), contingency matrices for examples are stored'
p298
I0
I0
I01
tp299
a(S'bool'
p300
S'storeNodeClassifier'
p301
g301
S'if true (default), the internal nodes have classifiers; needed for pruning'
p302
I0
I0
I01
tp303
a(S'TTreeDescender'
p304
S'descender'
p305
g305
S'descends down the tree'
p306
I0
I0
I00
tp307
ag97
asbsS'TLearner'
p308
(i__main__
ClassDefinition
p309
(dp310
g4
I1
sg5
I01
sg6
g308
sg7
S'TOrange'
p311
sg9
(lp312
sg11
I00
sg12
(lp313
g97
asbsS'TExamplesDistance_Maximal'
p314
(i__main__
ClassDefinition
p315
(dp316
g4
I1
sg5
I01
sg6
g314
sg7
S'TExamplesDistance_Normalized'
p317
sg9
(lp318
sg11
I00
sg12
(lp319
(S'TAttributedFloatList'
p320
S'normalizers'
p321
g321
S'normalizing factors for attributes'
p322
I0
I0
I00
tp323
a(S'TAttributedFloatList'
p324
S'bases'
p325
g325
S'lowest values for attributes'
p326
I0
I0
I00
tp327
a(S'TAttributedFloatList'
p328
S'averages'
p329
g329
S'average values for continuous attribute values'
p330
I0
I0
I00
tp331
a(S'TAttributedFloatList'
p332
S'variances'
p333
g333
S'variations for continuous attribute values'
p334
I0
I0
I00
tp335
a(S'int'
p336
S'domainVersion'
p337
g337
S'version of domain on which the ranges were computed'
p338
I0
I0
I01
tp339
a(S'bool'
p340
S'normalize'
p341
g341
S'tells whether to normalize distances between attributes'
p342
I0
I0
I01
tp343
a(S'bool'
p344
S'ignoreUnknowns'
p345
g345
S'if true (default: false) unknown values are ignored in computation'
p346
I0
I0
I01
tp347
asbsS'TPreprocessor_discretize'
p348
(i__main__
ClassDefinition
p349
(dp350
g4
I1
sg5
I01
sg6
g348
sg7
S'TPreprocessor'
p351
sg9
(lp352
sg11
I00
sg12
(lp353
(S'TVarList'
p354
S'attributes'
p355
g355
S'attributes to be discretized (all, if not defined or empty)'
p356
I0
I0
I00
tp357
a(S'bool'
p358
S'discretizeClass'
p359
g359
S'also discretize the class attribute (default: false)'
p360
I0
I0
I01
tp361
a(S'TDiscretization'
p362
S'method'
p363
g363
S'discretization method'
p364
I0
I0
I00
tp365
asbsS'TProgressCallback_Python'
p366
(i__main__
ClassDefinition
p367
(dp368
g4
I1
sg5
I01
sg6
g366
sg7
S'TProgressCallback'
p369
sg9
(lp370
sg11
I00
sg12
(lp371
sbsS'TImputeClassifier'
p372
(i__main__
ClassDefinition
p373
(dp374
g4
I1
sg5
I01
sg6
g372
sg7
S'TClassifier'
p375
sg9
(lp376
sg11
I00
sg12
(lp377
(S'TClassifierFromVar'
p378
S'classifierFromVar'
p379
g379
S'ClassifierFromVar that is used to retrieve defined values'
p380
I0
I0
I00
tp381
a(S'TClassifier'
p382
S'imputer'
p383
g383
S'classifier that is used to determine the missing values '
p384
I0
I0
I00
tp385
ag83
ag87
asbsS'TRuleCovererAndRemover'
p386
(i__main__
ClassDefinition
p387
(dp388
g4
I1
sg5
I01
sg6
g386
sg7
S'TOrange'
p389
sg9
(lp390
sg11
I01
sg12
(lp391
sbsS'TPythonValue'
p392
(i__main__
ClassDefinition
p393
(dp394
g4
I1
sg5
I01
sg6
g392
sg7
S'TSomeValue'
p395
sg9
(lp396
sg11
I00
sg12
(lp397
sbsS'TAssociationRulesSparseInducer'
p398
(i__main__
ClassDefinition
p399
(dp400
g4
I1
sg5
I01
sg6
g398
sg7
S'TOrange'
p401
sg9
(lp402
sg11
I00
sg12
(lp403
(S'int'
p404
S'maxItemSets'
p405
g405
S'maximal number of itemsets (increase if you want)'
p406
I0
I0
I01
tp407
a(S'float'
p408
S'confidence'
p409
g409
S'required confidence'
p410
I0
I0
I01
tp411
a(S'float'
p412
S'support'
p413
g413
S'required support'
p414
I0
I0
I01
tp415
asbsS'TFilter_sameExample'
p416
(i__main__
ClassDefinition
p417
(dp418
g4
I1
sg5
I01
sg6
g416
sg7
S'TFilter'
p419
sg9
(lp420
sg11
I00
sg12
(lp421
(S'TExample'
p422
S'example'
p423
g423
S'example with which examples are compared'
p424
I0
I0
I00
tp425
a(S'bool'
p426
S'negate'
p427
g427
S'if true, filter output should be negated.'
p428
I0
I0
I01
tp429
a(S'TDomain'
p430
S'domain'
p431
g431
S'domain to which the examples are converted (if needed)'
p432
I0
I0
I00
tp433
asbsS'TRuleClassifierConstructor'
p434
(i__main__
ClassDefinition
p435
(dp436
g4
I1
sg5
I01
sg6
g434
sg7
S'TOrange'
p437
sg9
(lp438
sg11
I01
sg12
(lp439
sbsS'TKaplanMeier'
p440
(i__main__
ClassDefinition
p441
(dp442
g4
I1
sg5
I01
sg6
g440
sg7
S'TOrange'
p443
sg9
(lp444
sg11
I00
sg12
(lp445
sbsS'TMakeRandomIndicesMultiple'
p446
(i__main__
ClassDefinition
p447
(dp448
g4
I1
sg5
I01
sg6
g446
sg7
S'TMakeRandomIndices'
p449
sg9
(lp450
sg11
I00
sg12
(lp451
(S'int'
p452
S'stratified'
p453
g453
S'requests stratified distributions'
p454
I0
I0
I01
tp455
a(S'int'
p456
S'randseed'
p457
g457
S'a seed for random generator'
p458
I0
I0
I01
tp459
a(S'TRandomGenerator'
p460
S'randomGenerator'
p461
g461
S'a random generator'
p462
I0
I0
I00
tp463
asbsS'TLearnerFD'
p464
(i__main__
ClassDefinition
p465
(dp466
g4
I1
sg5
I01
sg6
g464
sg7
S'TLearner'
p467
sg9
(lp468
sg11
I00
sg12
(lp469
(S'TDomain'
p470
S'domain'
p471
g471
S'domain'
p472
I0
I0
I00
tp473
ag97
asbsS'TFeatureInducer'
p474
(i__main__
ClassDefinition
p475
(dp476
g4
I1
sg5
I01
sg6
g474
sg7
S'TOrange'
p477
sg9
(lp478
sg11
I01
sg12
(lp479
sbsS'TMapIntValue'
p480
(i__main__
ClassDefinition
p481
(dp482
g4
I1
sg5
I01
sg6
g480
sg7
S'TTransformValue'
p483
sg9
(lp484
sg11
I00
sg12
(lp485
(S'TIntList'
p486
S'mapping'
p487
g487
S'a lookup table'
p488
I0
I0
I00
tp489
a(S'TTransformValue'
p490
S'subTransform'
p491
g491
S'transformation executed prior to this'
p492
I0
I0
I00
tp493
asbsS'TDistributionAssessor_Kramer'
p494
(i__main__
ClassDefinition
p495
(dp496
g4
I1
sg5
I01
sg6
g494
sg7
S'TDistributionAssessor'
p497
sg9
(lp498
sg11
I00
sg12
(lp499
sbsS'TTreeExampleSplitter_UnknownsToBranch'
p500
(i__main__
ClassDefinition
p501
(dp502
g4
I1
sg5
I01
sg6
g500
sg7
S'TTreeExampleSplitter'
p503
sg9
(lp504
sg11
I00
sg12
(lp505
sbsS'TMajorityLearner'
p506
(i__main__
ClassDefinition
p507
(dp508
g4
I1
sg5
I01
sg6
g506
sg7
S'TLearner'
p509
sg9
(lp510
sg11
I00
sg12
(lp511
(S'TProbabilityEstimatorConstructor'
p512
S'estimatorConstructor'
p513
g513
S'constructs probability estimator'
p514
I0
I0
I00
tp515
a(S'TDistribution'
p516
S'aprioriDistribution'
p517
g517
S'apriori class distribution'
p518
I0
I0
I00
tp519
ag97
asbsS'TFeatureByIM'
p520
(i__main__
ClassDefinition
p521
(dp522
g4
I1
sg5
I01
sg6
g520
sg7
S'TFeatureInducer'
p523
sg9
(lp524
sg11
I00
sg12
(lp525
(S'TIMConstructor'
p526
S'IMconstructor'
p527
g527
S'incompatibility matrix constructor'
p528
I0
I0
I00
tp529
a(S'TClustersFromIM'
p530
S'clustersFromIM'
p531
g531
S'clustering algorithm'
p532
I0
I0
I00
tp533
a(S'int'
p534
S'completion'
p535
g535
S'decides how to determine the class for points not covered by any cluster'
p536
I0
I0
I01
tp537
asbsS'TMeasureAttributeFromProbabilities'
p538
(i__main__
ClassDefinition
p539
(dp540
g4
I1
sg5
I01
sg6
g538
sg7
S'TMeasureAttribute'
p541
sg9
(lp542
sg11
I01
sg12
(lp543
(S'TProbabilityEstimatorConstructor'
p544
S'estimatorConstructor'
p545
g545
S'probability estimator (none by default)'
p546
I0
I0
I00
tp547
a(S'TConditionalProbabilityEstimatorConstructor'
p548
S'conditionalEstimatorConstructor'
p549
g549
S'conditional probability estimator (none by default)'
p550
I0
I0
I00
tp551
a(S'int'
p552
S'unknownsTreatment'
p553
g553
S'treatment of unknown values'
p554
I0
I0
I01
tp555
a(S'int'
p556
S'needs'
p557
g557
S'describes what kind of data is needed for computation'
p558
I0
I0
I01
tp559
a(S'bool'
p560
S'handlesDiscrete'
p561
g561
S'tells whether the measure can handle discrete attributes'
p562
I01
I0
I01
tp563
a(S'bool'
p564
S'handlesContinuous'
p565
g565
S'tells whether the measure can handle continuous attributes'
p566
I01
I0
I01
tp567
asbsS'TProbabilityEstimatorConstructor_relative'
p568
(i__main__
ClassDefinition
p569
(dp570
g4
I1
sg5
I01
sg6
g568
sg7
S'TProbabilityEstimatorConstructor'
p571
sg9
(lp572
sg11
I00
sg12
(lp573
sbsS'TClassifierByLookupTable3'
p574
(i__main__
ClassDefinition
p575
(dp576
g4
I1
sg5
I01
sg6
g574
sg7
S'TClassifierByLookupTable'
p577
sg9
(lp578
sg11
I00
sg12
(lp579
(S'TVariable'
p580
S'variable1'
p581
g581
S'the first attribute used for classification'
p582
I01
I0
I00
tp583
a(S'TVariable'
p584
S'variable2'
p585
g585
S'the second attribute used for classification'
p586
I01
I0
I00
tp587
a(S'TVariable'
p588
S'variable3'
p589
g589
S'the third attribute used for classification'
p590
I01
I0
I00
tp591
a(S'int'
p592
S'noOfValues1'
p593
g593
S'number of values of the first attribute'
p594
I01
I0
I01
tp595
a(S'int'
p596
S'noOfValues2'
p597
g597
S'number of values of the second attribute'
p598
I01
I0
I01
tp599
a(S'int'
p600
S'noOfValues3'
p601
g601
S'number of values of the third attribute'
p602
I01
I0
I01
tp603
a(S'TEFMDataDescription'
p604
S'dataDescription'
p605
g605
S'data description'
p606
I0
I0
I00
tp607
ag75
ag79
ag83
ag87
asbsS'TImputerConstructor_maximal'
p608
(i__main__
ClassDefinition
p609
(dp610
g4
I1
sg5
I01
sg6
g608
sg7
S'TImputerConstructor'
p611
sg9
(lp612
sg11
I00
sg12
(lp613
g151
asbsS'TRuleBeamRefiner'
p614
(i__main__
ClassDefinition
p615
(dp616
g4
I1
sg5
I01
sg6
g614
sg7
S'TOrange'
p617
sg9
(lp618
sg11
I01
sg12
(lp619
sbsS'TEquiDistDiscretizer'
p620
(i__main__
ClassDefinition
p621
(dp622
g4
I1
sg5
I01
sg6
g620
sg7
S'TDiscretizer'
p623
sg9
(lp624
sg11
I00
sg12
(lp625
(S'int'
p626
S'numberOfIntervals'
p627
g627
S'number of intervals'
p628
I0
I0
I01
tp629
a(S'float'
p630
S'firstCut'
p631
g631
S'the first cut-off point'
p632
I0
I0
I01
tp633
a(S'float'
p634
S'step'
p635
g635
S'step (width of interval)'
p636
I0
I0
I01
tp637
ag493
asbsS'TValueFilter_string'
p638
(i__main__
ClassDefinition
p639
(dp640
g4
I1
sg5
I01
sg6
g638
sg7
S'TValueFilter'
p641
sg9
(lp642
sg11
I00
sg12
(lp643
(S'string'
p644
S'min'
p645
(g645
S'ref'
p646
tp647
S' reference value (lower bound for interval operators)'
p648
I0
I0
I01
tp649
a(S'string'
p650
S'max'
p651
g651
S'upper bound for interval operators'
p652
I0
I0
I01
tp653
a(S'int'
p654
S'oper'
p655
g655
S'operator'
p656
I0
I0
I01
tp657
a(S'bool'
p658
S'caseSensitive'
p659
g659
S'if true (default), the operator is case sensitive'
p660
I0
I0
I01
tp661
a(S'int'
p662
S'position'
p663
g663
S"attribute's position in domain"
p664
I0
I0
I01
tp665
a(S'int'
p666
S'acceptSpecial'
p667
g667
S'tells whether a special value (DK, DC...) is accepted (1), rejected (0) or ignored (-1)'
p668
I0
I0
I01
tp669
asbsS'TFindNearest_BruteForce'
p670
(i__main__
ClassDefinition
p671
(dp672
g4
I1
sg5
I01
sg6
g670
sg7
S'TFindNearest'
p673
sg9
(lp674
sg11
I00
sg12
(lp675
(S'TExamplesDistance'
p676
S'distance'
p677
g677
S'metrics'
p678
I0
I0
I00
tp679
a(S'TExampleGenerator'
p680
S'examples'
p681
g681
S'a list of stored examples'
p682
I0
I0
I00
tp683
a(S'int'
p684
S'weightID'
p685
g685
S'weight to use when counting examples'
p686
I0
I0
I01
tp687
a(S'int'
p688
S'distanceID'
p689
g689
S'id of meta attribute where the distance should be stored (0 = no storing)'
p690
I0
I0
I01
tp691
a(S'bool'
p692
S'includeSame'
p693
g693
S'tells whether to include examples that are same as the reference example'
p694
I0
I0
I01
tp695
asbsS'TRuleBeamInitializer'
p696
(i__main__
ClassDefinition
p697
(dp698
g4
I1
sg5
I01
sg6
g696
sg7
S'TOrange'
p699
sg9
(lp700
sg11
I01
sg12
(lp701
sbsS'TMeasureAttribute_relevance'
p702
(i__main__
ClassDefinition
p703
(dp704
g4
I1
sg5
I01
sg6
g702
sg7
S'TMeasureAttributeFromProbabilities'
p705
sg9
(lp706
sg11
I00
sg12
(lp707
g547
ag551
ag555
ag559
ag563
ag567
asbsS'TFilter_hasSpecial'
p708
(i__main__
ClassDefinition
p709
(dp710
g4
I1
sg5
I01
sg6
g708
sg7
S'TFilter'
p711
sg9
(lp712
sg11
I00
sg12
(lp713
g429
ag433
asbsS'TDiscDistribution'
p714
(i__main__
ClassDefinition
p715
(dp716
g4
I1
sg5
I01
sg6
g714
sg7
S'TDistribution'
p717
sg9
(lp718
sg11
I00
sg12
(lp719
(S'TFloatList'
p720
S'variances'
p721
g721
S'variances'
p722
I0
I0
I00
tp723
a(S'TVariable'
p724
S'variable'
p725
g725
S'attribute descriptor (optional)'
p726
I0
I0
I00
tp727
a(S'float'
p728
S'unknowns'
p729
g729
S'number of unknown values'
p730
I0
I0
I01
tp731
a(S'float'
p732
S'abs'
p733
g733
S'sum of frequencies (not including unknown values!)'
p734
I0
I0
I01
tp735
a(S'float'
p736
S'cases'
p737
g737
S"number of cases; as abs, but doesn't change at *= and normalize()"
p738
I0
I0
I01
tp739
a(S'bool'
p740
S'normalized'
p741
g741
S'distribution is normalized'
p742
I0
I0
I01
tp743
a(S'bool'
p744
S'supportsDiscrete'
p745
g745
S'distribution supports discrete interface'
p746
I01
I0
I01
tp747
a(S'bool'
p748
S'supportsContinuous'
p749
g749
S'distribution supports continuous interface'
p750
I01
I0
I01
tp751
a(S'TRandomGenerator'
p752
S'randomGenerator'
p753
g753
S'random generator; initialized when needed, if not given earlier'
p754
I0
I0
I00
tp755
asbsS'TBayesLearner'
p756
(i__main__
ClassDefinition
p757
(dp758
g4
I1
sg5
I01
sg6
g756
sg7
S'TLearner'
p759
sg9
(lp760
sg11
I00
sg12
(lp761
(S'TProbabilityEstimatorConstructor'
p762
S'estimatorConstructor'
p763
g763
S'constructs a probability estimator for P(C)'
p764
I0
I0
I00
tp765
a(S'TConditionalProbabilityEstimatorConstructor'
p766
S'conditionalEstimatorConstructor'
p767
g767
S'constructs a probability estimator for P(C|A) '
p768
I0
I0
I00
tp769
a(S'TConditionalProbabilityEstimatorConstructor'
p770
S'conditionalEstimatorConstructorContinuous'
p771
g771
S'constructs a probability estimator for P(C|A) for continuous attributes'
p772
I0
I0
I00
tp773
a(S'bool'
p774
S'normalizePredictions'
p775
g775
S'instructs learner to construct a classifier that normalizes probabilities'
p776
I0
I0
I01
tp777
a(S'bool'
p778
S'adjustThreshold'
p779
g779
S'adjust probability thresholds (for binary classes only)'
p780
I0
I0
I01
tp781
ag97
asbsS'TIMByRelief'
p782
(i__main__
ClassDefinition
p783
(dp784
g4
I1
sg5
I01
sg6
g782
sg7
S'TIMConstructor'
p785
sg9
(lp786
sg11
I00
sg12
(lp787
(S'TExamplesDistance_Relief'
p788
S'distance'
p789
g789
S'distance measure'
p790
I0
I0
I00
tp791
a(S'float'
p792
S'k'
p793
g793
S'number of neighbours'
p794
I0
I0
I01
tp795
a(S'float'
p796
S'm'
p797
g797
S'number of reference examples'
p798
I0
I0
I01
tp799
a(S'float'
p800
S'kFromColumns'
p801
g801
S'if positive, number of neighbours is #columns*kFromColumns'
p802
I0
I0
I01
tp803
a(S'bool'
p804
S'ignoreSameExample'
p805
g805
S'does not put reference example into M'
p806
I0
I0
I01
tp807
a(S'bool'
p808
S'convertToBinary'
p809
g809
S'convert to binary class (hit-miss)'
p810
I0
I0
I01
tp811
a(S'bool'
p812
S'correctClassFirst'
p813
g813
S'puts the correct class proportion to the first place'
p814
I0
I0
I01
tp815
a(S'bool'
p816
S'allExamples'
p817
g817
S'uses all examples for reference examples'
p818
I0
I0
I01
tp819
a(S'bool'
p820
S'allSameNeighbours'
p821
g821
S'uses all the examples same to the reference as neighbours'
p822
I0
I0
I01
tp823
a(S'bool'
p824
S'recordRowExamples'
p825
g825
S'enables creation of rowExample list'
p826
I0
I0
I01
tp827
asbsS'TConditionalProbabilityEstimator'
p828
(i__main__
ClassDefinition
p829
(dp830
g4
I1
sg5
I01
sg6
g828
sg7
S'TOrange'
p831
sg9
(lp832
sg11
I01
sg12
(lp833
g111
ag115
asbsS'TColumnAssessor_Laplace'
p834
(i__main__
ClassDefinition
p835
(dp836
g4
I1
sg5
I01
sg6
g834
sg7
S'TColumnAssessor'
p837
sg9
(lp838
sg11
I00
sg12
(lp839
sbsS'TPreprocessor_addGaussianNoise'
p840
(i__main__
ClassDefinition
p841
(dp842
g4
I1
sg5
I01
sg6
g840
sg7
S'TPreprocessor'
p843
sg9
(lp844
sg11
I00
sg12
(lp845
(S'TVariableFloatMap'
p846
S'deviations'
p847
g847
S'deviations individual attribute values'
p848
I0
I0
I00
tp849
a(S'float'
p850
S'defaultDeviation'
p851
g851
S'default deviation'
p852
I0
I0
I01
tp853
a(S'TRandomGenerator'
p854
S'randomGenerator'
p855
g855
S'random number generator'
p856
I0
I0
I00
tp857
asbsS'TRuleStoppingCriteria_NegativeDistribution'
p858
(i__main__
ClassDefinition
p859
(dp860
g4
I1
sg5
I01
sg6
g858
sg7
S'TRuleStoppingCriteria'
p861
sg9
(lp862
sg11
I00
sg12
(lp863
sbsS'TTreeSplitConstructor_ExhaustiveBinary'
p864
(i__main__
ClassDefinition
p865
(dp866
g4
I1
sg5
I01
sg6
g864
sg7
S'TTreeSplitConstructor_Measure'
p867
sg9
(lp868
sg11
I00
sg12
(lp869
(S'TMeasureAttribute'
p870
S'measure'
p871
g871
S'attribute quality measure'
p872
I0
I0
I00
tp873
a(S'float'
p874
S'worstAcceptable'
p875
g875
S'the worst acceptable quality of the attribute'
p876
I0
I0
I01
tp877
a(S'float'
p878
S'minSubset'
p879
g879
S'minimal number of examples in a subset'
p880
I0
I0
I01
tp881
asbsS'TTreeClassifier'
p882
(i__main__
ClassDefinition
p883
(dp884
g4
I1
sg5
I01
sg6
g882
sg7
S'TClassifierFD'
p885
sg9
(lp886
sg11
I00
sg12
(lp887
(S'TTreeNode'
p888
S'tree'
p889
g889
S'decision tree'
p890
I0
I0
I00
tp891
a(S'TTreeDescender'
p892
S'descender'
p893
g893
S'object that descends down the tree'
p894
I0
I0
I00
tp895
ag205
ag83
ag87
asbsS'TFilter_compatibleExample'
p896
(i__main__
ClassDefinition
p897
(dp898
g4
I1
sg5
I01
sg6
g896
sg7
S'TFilter'
p899
sg9
(lp900
sg11
I00
sg12
(lp901
(S'TExample'
p902
S'example'
p903
g903
S'example with which examples are compared'
p904
I0
I0
I00
tp905
ag429
ag433
asbsS'TRemoveRedundant'
p906
(i__main__
ClassDefinition
p907
(dp908
g4
I1
sg5
I01
sg6
g906
sg7
S'TOrange'
p909
sg9
(lp910
sg11
I01
sg12
(lp911
(S'bool'
p912
S'keepValues'
p913
g913
S'keep an attribute if number values is only smaller, not one'
p914
I0
I0
I01
tp915
asbsS'TSomeValue'
p916
(i__main__
ClassDefinition
p917
(dp918
g4
I1
sg5
I01
sg6
g916
sg7
S'TOrange'
p919
sg9
(lp920
sg11
I01
sg12
(lp921
sbsS'TRuleClassifierConstructor_firstRule'
p922
(i__main__
ClassDefinition
p923
(dp924
g4
I1
sg5
I01
sg6
g922
sg7
S'TRuleClassifierConstructor'
p925
sg9
(lp926
sg11
I00
sg12
(lp927
sbsS'TLinRegLearner'
p928
(i__main__
ClassDefinition
p929
(dp930
g4
I1
sg5
I01
sg6
g928
sg7
S'TLearner'
p931
sg9
(lp932
sg11
I00
sg12
(lp933
(S'int'
p934
S'iterativeSelection'
p935
g935
S'0 all, 1 forward, 2 backward, 3 stepwise'
p936
I0
I0
I01
tp937
a(S'float'
p938
S'Fin'
p939
g939
S'significance limit for an attribute to enter the model'
p940
I0
I0
I01
tp941
a(S'float'
p942
S'Fout'
p943
g943
S'significance limit for the attribute to be removed'
p944
I0
I0
I01
tp945
a(S'int'
p946
S'maxIterations'
p947
g947
S'maximal number of iterations for stepwise'
p948
I0
I0
I01
tp949
a(S'TImputerConstructor'
p950
S'imputerConstructor'
p951
g951
S'if present, it constructs an imputer for unknown values'
p952
I0
I0
I00
tp953
a(S'TDomainContinuizer'
p954
S'continuizer'
p955
g955
S'if present, specifies the way in which discrete attributes are converted to continuous'
p956
I0
I0
I00
tp957
ag97
asbsS'TStopDistributionClustering_noProfit'
p958
(i__main__
ClassDefinition
p959
(dp960
g4
I1
sg5
I01
sg6
g958
sg7
S'TStopDistributionClustering'
p961
sg9
(lp962
sg11
I00
sg12
(lp963
(S'float'
p964
S'minProfitProportion'
p965
g965
S'minimal allowable profit proportion'
p966
I0
I0
I01
tp967
asbsS'TBiModalDiscretization'
p968
(i__main__
ClassDefinition
p969
(dp970
g4
I1
sg5
I01
sg6
g968
sg7
S'TDiscretization'
p971
sg9
(lp972
sg11
I00
sg12
(lp973
(S'bool'
p974
S'splitInTwo'
p975
g975
S'if true (default), flanks are merged into a single interval'
p976
I0
I0
I01
tp977
asbsS'TIntVariable'
p978
(i__main__
ClassDefinition
p979
(dp980
g4
I1
sg5
I01
sg6
g978
sg7
S'TVariable'
p981
sg9
(lp982
sg11
I00
sg12
(lp983
(S'int'
p984
S'startValue'
p985
g985
S'lowest value'
p986
I0
I0
I01
tp987
a(S'int'
p988
S'endValue'
p989
g989
S'highest value'
p990
I0
I0
I01
tp991
ag233
ag237
ag241
ag245
ag249
ag253
ag257
asbsS'TColoredIG'
p992
(i__main__
ClassDefinition
p993
(dp994
g4
I1
sg5
I01
sg6
g992
sg7
S'TGeneralExampleClustering'
p995
sg9
(lp996
sg11
I00
sg12
(lp997
(S'TIG'
p998
S'ig'
p999
g999
S'incompatibility graph'
p1000
I0
I0
I00
tp1001
a(S'TIntList'
p1002
S'colors'
p1003
g1003
S'colors (one element corresponding to each ig node)'
p1004
I0
I0
I00
tp1005
asbsS'TMeasureAttribute'
p1006
(i__main__
ClassDefinition
p1007
(dp1008
g4
I1
sg5
I01
sg6
g1006
sg7
S'TOrange'
p1009
sg9
(lp1010
sg11
I00
sg12
(lp1011
g559
ag563
ag567
asbsS'TRuleEvaluator'
p1012
(i__main__
ClassDefinition
p1013
(dp1014
g4
I1
sg5
I01
sg6
g1012
sg7
S'TOrange'
p1015
sg9
(lp1016
sg11
I01
sg12
(lp1017
sbsS'TStringVariable'
p1018
(i__main__
ClassDefinition
p1019
(dp1020
g4
I1
sg5
I01
sg6
g1018
sg7
S'TVariable'
p1021
sg9
(lp1022
sg11
I00
sg12
(lp1023
g233
ag237
ag241
ag245
ag249
ag253
ag257
asbsS'TAssessIMQuality'
p1024
(i__main__
ClassDefinition
p1025
(dp1026
g4
I1
sg5
I01
sg6
g1024
sg7
S'TOrange'
p1027
sg9
(lp1028
sg11
I00
sg12
(lp1029
(S'TColumnAssessor'
p1030
S'columnAssessor'
p1031
g1031
S'column quality assessor'
p1032
I0
I0
I00
tp1033
asbsS'TGraphAsTree'
p1034
(i__main__
ClassDefinition
p1035
(dp1036
g4
I1
sg5
I01
sg6
g1034
sg7
S'TGraph'
p1037
sg9
(lp1038
sg11
I00
sg12
(lp1039
(S'int'
p1040
S'nVertices'
p1041
g1041
S'the number of vertices'
p1042
I01
I0
I01
tp1043
a(S'int'
p1044
S'nEdgeTypes'
p1045
g1045
S'the number of edge types'
p1046
I01
I0
I01
tp1047
a(S'bool'
p1048
S'directed'
p1049
g1049
S'directed'
p1050
I01
I0
I01
tp1051
asbsS'TTreeExampleSplitter_IgnoreUnknowns'
p1052
(i__main__
ClassDefinition
p1053
(dp1054
g4
I1
sg5
I01
sg6
g1052
sg7
S'TTreeExampleSplitter'
p1055
sg9
(lp1056
sg11
I00
sg12
(lp1057
sbsS'TProbabilityEstimator_FromDistribution'
p1058
(i__main__
ClassDefinition
p1059
(dp1060
g4
I1
sg5
I01
sg6
g1058
sg7
S'TProbabilityEstimator'
p1061
sg9
(lp1062
sg11
I00
sg12
(lp1063
(S'TDistribution'
p1064
S'probabilities'
p1065
g1065
S'probabilities'
p1066
I0
I0
I00
tp1067
a(S'bool'
p1068
S'supportsDiscrete'
p1069
g1069
S'can estimate probabilities of discrete attributes'
p1070
I01
I0
I01
tp1071
a(S'bool'
p1072
S'supportsContinuous'
p1073
g1073
S'can estimate probabilities of continuous attributes'
p1074
I01
I0
I01
tp1075
asbsS'TTreeDescender_UnknownMergeAsBranchSizes'
p1076
(i__main__
ClassDefinition
p1077
(dp1078
g4
I1
sg5
I01
sg6
g1076
sg7
S'TTreeDescender'
p1079
sg9
(lp1080
sg11
I0
sg12
(lp1081
sbsS'TExamplesDistance'
p1082
(i__main__
ClassDefinition
p1083
(dp1084
g4
I1
sg5
I01
sg6
g1082
sg7
S'TOrange'
p1085
sg9
(lp1086
sg11
I01
sg12
(lp1087
sbsS'TFileExampleGenerator'
p1088
(i__main__
ClassDefinition
p1089
(dp1090
g4
I1
sg5
I01
sg6
g1088
sg7
S'TExampleGenerator'
p1091
sg9
(lp1092
sg11
I01
sg12
(lp1093
g125
ag129
ag133
ag137
ag141
asbsS'TMeasureAttribute_gainRatio'
p1094
(i__main__
ClassDefinition
p1095
(dp1096
g4
I1
sg5
I01
sg6
g1094
sg7
S'TMeasureAttributeFromProbabilities'
p1097
sg9
(lp1098
sg11
I00
sg12
(lp1099
g547
ag551
ag555
ag559
ag563
ag567
asbsS'TRandomForestLearner'
p1100
(i__main__
ClassDefinition
p1101
(dp1102
S'extended'
p1103
I1
sS'imported'
p1104
I0
sS'name'
p1105
g1100
sS'parent'
p1106
S'TLearner'
p1107
sS'abstract'
p1108
I00
sS'components'
p1109
(lp1110
sS'properties'
p1111
(lp1112
(S'int'
p1113
S'randomSeed'
p1114
g1114
S'seed for the random generator'
p1115
I0
I0
I01
tp1116
a(S'int'
p1117
S'noTrees'
p1118
g1118
S''
p1119
I0
I0
I01
tp1120
a(S'bool'
p1121
S'predictClass'
p1122
g1122
g1119
I0
I0
I01
tp1123
a(S'float'
p1124
S'sampleProp'
p1125
g1125
g1119
I0
I0
I01
tp1126
a(S'int'
p1127
S'noSelAttr'
p1128
g1128
g1119
I0
I0
I01
tp1129
a(S'int'
p1130
S'kNearestEqual'
p1131
g1131
g1119
I0
I0
I01
tp1132
ag97
asbsS'TLinRegClassifier'
p1133
(i__main__
ClassDefinition
p1134
(dp1135
g4
I1
sg5
I01
sg6
g1133
sg7
S'TClassifierFD'
p1136
sg9
(lp1137
sg11
I00
sg12
(lp1138
(S'TAttributedFloatList'
p1139
S'coefficients'
p1140
g1140
S'coefficients of regression plane'
p1141
I0
I0
I00
tp1142
a(S'TAttributedFloatList'
p1143
S'coefficients_se'
p1144
g1144
S'standard errors of coefficients'
p1145
I0
I0
I00
tp1146
a(S'float'
p1147
S'N'
p1148
g1148
S'number of examples'
p1149
I0
I0
I01
tp1150
a(S'float'
p1151
S'SStot'
p1152
g1152
S'total sum of squares'
p1153
I0
I0
I01
tp1154
a(S'float'
p1155
S'SSres'
p1156
g1156
S'residual sum of squares'
p1157
I0
I0
I01
tp1158
a(S'float'
p1159
S'SSreg'
p1160
g1160
S'sum of squares due to regression'
p1161
I0
I0
I01
tp1162
a(S'float'
p1163
S'MStot'
p1164
g1164
S'total mean squares'
p1165
I0
I0
I01
tp1166
a(S'float'
p1167
S'MSres'
p1168
g1168
S'residual mean square'
p1169
I0
I0
I01
tp1170
a(S'float'
p1171
S'MSreg'
p1172
g1172
S'mean square regression'
p1173
I0
I0
I01
tp1174
a(S'float'
p1175
S'F'
p1176
g1176
S'F statistics for the model'
p1177
I0
I0
I01
tp1178
a(S'float'
p1179
S'Fprob'
p1180
g1180
S'significance of the model (F)'
p1181
I0
I0
I01
tp1182
a(S'float'
p1183
S'R2'
p1184
g1184
S'determination'
p1185
I0
I0
I01
tp1186
a(S'float'
p1187
S'adjR2'
p1188
g1188
S'adjusted determination'
p1189
I0
I0
I01
tp1190
a(S'TImputer'
p1191
S'imputer'
p1192
g1192
S'if present, it imputes unknown values'
p1193
I0
I0
I00
tp1194
a(S'float'
p1195
S'threshold'
p1196
g1196
S'classification threshold (for discrete classes)'
p1197
I0
I0
I01
tp1198
ag205
ag83
ag87
asbsS'TContingencyClassAttr'
p1199
(i__main__
ClassDefinition
p1200
(dp1201
g4
I1
sg5
I01
sg6
g1199
sg7
S'TContingencyClass'
p1202
sg9
(lp1203
sg11
I00
sg12
(lp1204
(S'TVariable'
p1205
S'outerVariable'
p1206
g1206
S'outer attribute'
p1207
I0
I0
I00
tp1208
a(S'TVariable'
p1209
S'innerVariable'
p1210
(g1210
S'variable'
p1211
tp1212
S' inner attribute'
p1213
I0
I0
I00
tp1214
a(S'int'
p1215
S'varType'
p1216
g1216
S'outer attribute type'
p1217
I01
I0
I01
tp1218
a(S'TDistribution'
p1219
S'outerDistribution'
p1220
g1220
S'distribution of values of outer attributes'
p1221
I0
I0
I00
tp1222
a(S'TDistribution'
p1223
S'innerDistribution'
p1224
g1224
S'distribution of values of inner attributes'
p1225
I0
I0
I00
tp1226
asbsS'TMissValuesGenerator'
p1227
(i__main__
ClassDefinition
p1228
(dp1229
g4
I1
sg5
I01
sg6
g1227
sg7
S'TChangeExampleGenerator'
p1230
sg9
(lp1231
sg11
I00
sg12
(lp1232
(S'TIntFloatList'
p1233
S'replaceProbabilities'
p1234
g1234
S"probabilities for replacing attributes' values"
p1235
I0
I0
I00
tp1236
a(S'TRandomGenerator'
p1237
S'randomGenerator'
p1238
g1238
S'random generator'
p1239
I0
I0
I00
tp1240
ag137
ag141
asbsS'TLogRegClassifier'
p1241
(i__main__
ClassDefinition
p1242
(dp1243
g4
I1
sg5
I01
sg6
g1241
sg7
S'TClassifierFD'
p1244
sg9
(lp1245
sg11
I00
sg12
(lp1246
(S'TDomain'
p1247
S'continuizedDomain'
p1248
g1248
S'if absent, there is no continuous attributes in original domain'
p1249
I0
I0
I00
tp1250
a(S'TEFMDataDescription'
p1251
S'dataDescription'
p1252
g1252
S'Data needed for classification in presence of undefined values'
p1253
I0
I0
I00
tp1254
a(S'TAttributedFloatList'
p1255
S'beta'
p1256
g1256
S'estimated beta coefficients for logistic regression'
p1257
I0
I0
I00
tp1258
a(S'TAttributedFloatList'
p1259
S'beta_se'
p1260
g1260
S'estimated standard errors for beta coefficients'
p1261
I0
I0
I00
tp1262
a(S'TAttributedFloatList'
p1263
S'wald_Z'
p1264
g1264
S'Wald Z statstic for beta coefficients'
p1265
I0
I0
I00
tp1266
a(S'TAttributedFloatList'
p1267
S'P'
p1268
g1268
S'estimated significances for beta coefficients'
p1269
I0
I0
I00
tp1270
a(S'float'
p1271
S'likelihood'
p1272
g1272
S"Likelihood: The likelihood function is the function which specifies the probability of the sample observed on the basis of a known model, as a function of the model's parameters. "
p1273
I0
I0
I01
tp1274
a(S'int'
p1275
S'fit_status'
p1276
g1276
S"Tells how the model fitting ended - either regularly (LogRegFitter.OK), or it was interrupted due to one of beta coefficients escaping towards infinity (LogRegFitter.Infinity) or since the values didn't converge (LogRegFitter.Divergence)."
p1277
I0
I0
I01
tp1278
a(S'TImputer'
p1279
S'imputer'
p1280
g1280
S'if present, it imputes unknown values'
p1281
I0
I0
I00
tp1282
ag205
ag83
ag87
asbsS'TEquiDistDiscretization'
p1283
(i__main__
ClassDefinition
p1284
(dp1285
g4
I1
sg5
I01
sg6
g1283
sg7
S'TDiscretization'
p1286
sg9
(lp1287
sg11
I00
sg12
(lp1288
(S'int'
p1289
S'numberOfIntervals'
p1290
g1290
S'number of intervals'
p1291
I0
I0
I01
tp1292
asbsS'TPreprocessor_select'
p1293
(i__main__
ClassDefinition
p1294
(dp1295
g4
I1
sg5
I01
sg6
g1293
sg7
S'TPreprocessor'
p1296
sg9
(lp1297
sg11
I00
sg12
(lp1298
(S'TVarList'
p1299
S'attributes'
p1300
g1300
S'tells which attributes to select'
p1301
I0
I0
I00
tp1302
asbsS'TBasicAttrStat'
p1303
(i__main__
ClassDefinition
p1304
(dp1305
g4
I1
sg5
I01
sg6
g1303
sg7
S'TOrange'
p1306
sg9
(lp1307
sg11
I00
sg12
(lp1308
(S'float'
p1309
S'sum'
p1310
g1310
S'sum of values'
p1311
I01
I0
I01
tp1312
a(S'float'
p1313
S'sum2'
p1314
g1314
S'sum of squares of values'
p1315
I01
I0
I01
tp1316
a(S'float'
p1317
S'n'
p1318
g1318
S'number of examples for which the attribute is defined'
p1319
I01
I0
I01
tp1320
a(S'float'
p1321
S'min'
p1322
g1322
S'the lowest value of the attribute'
p1323
I0
I0
I01
tp1324
a(S'float'
p1325
S'max'
p1326
g1326
S'the highest value of the attribute'
p1327
I0
I0
I01
tp1328
a(S'float'
p1329
S'avg'
p1330
g1330
S'the average value of the attribute'
p1331
I0
I0
I01
tp1332
a(S'float'
p1333
S'dev'
p1334
g1334
S'the deviation of the value of the attribute'
p1335
I0
I0
I01
tp1336
a(S'TVariable'
p1337
S'variable'
p1338
g1338
S'the attribute to which the data applies'
p1339
I0
I0
I00
tp1340
a(S'bool'
p1341
S'holdRecomputation'
p1342
g1342
S'temporarily disables recomputation of avg and dev while adding values'
p1343
I0
I0
I01
tp1344
asbsS'TFilter_disjunction'
p1345
(i__main__
ClassDefinition
p1346
(dp1347
g4
I1
sg5
I01
sg6
g1345
sg7
S'TFilter'
p1348
sg9
(lp1349
sg11
I00
sg12
(lp1350
(S'TFilterList'
p1351
S'filters'
p1352
g1352
S'a list of filters;'
p1353
I0
I0
I00
tp1354
ag429
ag433
asbsS'TMeasureAttribute_gini'
p1355
(i__main__
ClassDefinition
p1356
(dp1357
g4
I1
sg5
I01
sg6
g1355
sg7
S'TMeasureAttributeFromProbabilities'
p1358
sg9
(lp1359
sg11
I00
sg12
(lp1360
g547
ag551
ag555
ag559
ag563
ag567
asbsS'TAttributedFloatList'
p1361
(i__main__
ClassDefinition
p1362
(dp1363
g4
I1
sg5
I01
sg6
g1361
sg7
S'TOrange'
p1364
sg9
(lp1365
sg11
I00
sg12
(lp1366
(S'TVarList'
p1367
S'attributes'
p1368
g1368
S'list of attributes (for indexing)'
p1369
I0
I0
I00
tp1370
asbsS'TIMByRowsByRelief'
p1371
(i__main__
ClassDefinition
p1372
(dp1373
g4
I1
sg5
I01
sg6
g1371
sg7
S'TIMByRowsConstructor'
p1374
sg9
(lp1375
sg11
I00
sg12
(lp1376
(S'float'
p1377
g793
g793
S'number of neighbours'
p1378
I0
I0
I01
tp1379
a(S'float'
p1380
g797
g797
S'number of reference examples'
p1381
I0
I0
I01
tp1382
a(S'float'
p1383
S'kFromColumns'
p1384
g1384
S'if positive, number of neighbours is #columns*kFromColumns'
p1385
I0
I0
I01
tp1386
a(S'bool'
p1387
S'ignoreSameExample'
p1388
g1388
S'does not put reference example into M'
p1389
I0
I0
I01
tp1390
a(S'bool'
p1391
S'convertToBinary'
p1392
g1392
S'convert to binary class (hit-miss)'
p1393
I0
I0
I01
tp1394
a(S'bool'
p1395
S'correctClassFirst'
p1396
g1396
S'puts the correct class proportion to the first place'
p1397
I0
I0
I01
tp1398
a(S'bool'
p1399
S'allExamples'
p1400
g1400
S'uses all examples for reference examples'
p1401
I0
I0
I01
tp1402
a(S'bool'
p1403
S'allSameNeighbours'
p1404
g1404
S'uses all the examples same to the reference as neighbours'
p1405
I0
I0
I01
tp1406
asbsS'TFindNearestConstructor'
p1407
(i__main__
ClassDefinition
p1408
(dp1409
g4
I1
sg5
I01
sg6
g1407
sg7
S'TOrange'
p1410
sg9
(lp1411
sg11
I01
sg12
(lp1412
(S'TExamplesDistanceConstructor'
p1413
S'distanceConstructor'
p1414
g1414
S'metrics'
p1415
I0
I0
I00
tp1416
a(S'bool'
p1417
S'includeSame'
p1418
g1418
S'tells whether to include examples that are same as the reference example'
p1419
I0
I0
I01
tp1420
asbsS'TRuleClassifier_firstRule'
p1421
(i__main__
ClassDefinition
p1422
(dp1423
g4
I1
sg5
I01
sg6
g1421
sg7
S'TRuleClassifier'
p1424
sg9
(lp1425
sg11
I00
sg12
(lp1426
(S'TDistribution'
p1427
S'prior'
p1428
g1428
S'prior distribution'
p1429
I0
I0
I00
tp1430
a(S'TRuleList'
p1431
S'rules'
p1432
g1432
g1119
I0
I0
I00
tp1433
a(S'TExampleTable'
p1434
S'examples'
p1435
g1435
g1119
I0
I0
I00
tp1436
ag83
ag87
asbsS'TColumnAssessor'
p1437
(i__main__
ClassDefinition
p1438
(dp1439
g4
I1
sg5
I01
sg6
g1437
sg7
S'TOrange'
p1440
sg9
(lp1441
sg11
I01
sg12
(lp1442
sbsS'TComputeDomainContingency_Preprocessor'
p1443
(i__main__
ClassDefinition
p1444
(dp1445
g4
I1
sg5
I01
sg6
g1443
sg7
S'TComputeDomainContingency'
p1446
sg9
(lp1447
sg11
I00
sg12
(lp1448
(S'TPreprocessor'
p1449
S'preprocessor'
p1450
g1450
S'preprocesses the exmaples (see the manual for restrictions!)'
p1451
I0
I0
I00
tp1452
a(S'bool'
p1453
S'resultInOriginalDomain'
p1454
g1454
S'tells whether the resulting DomainContingency should consist of original attributes'
p1455
I0
I0
I01
tp1456
ag25
asbsS'TMeasureAttribute_MSE'
p1457
(i__main__
ClassDefinition
p1458
(dp1459
g4
I1
sg5
I01
sg6
g1457
sg7
S'TMeasureAttribute'
p1460
sg9
(lp1461
sg11
I00
sg12
(lp1462
(S'float'
p1463
g797
g797
S'm for m-estimate'
p1464
I0
I0
I01
tp1465
a(S'int'
p1466
S'unknownsTreatment'
p1467
g1467
S'treatment of unknown values'
p1468
I0
I0
I01
tp1469
ag559
ag563
ag567
asbsS'TIntervalDiscretizer'
p1470
(i__main__
ClassDefinition
p1471
(dp1472
g4
I1
sg5
I01
sg6
g1470
sg7
S'TDiscretizer'
p1473
sg9
(lp1474
sg11
I00
sg12
(lp1475
(S'TFloatList'
p1476
S'points'
p1477
g1477
S'cut-off points'
p1478
I0
I0
I00
tp1479
ag493
asbsS'TImputer_asValue'
p1480
(i__main__
ClassDefinition
p1481
(dp1482
g4
I1
sg5
I01
sg6
g1480
sg7
S'TImputer'
p1483
sg9
(lp1484
sg11
I00
sg12
(lp1485
(S'TDomain'
p1486
S'domain'
p1487
g1487
S'domain to which the values are converted'
p1488
I0
I0
I00
tp1489
a(S'TExample'
p1490
S'defaults'
p1491
g1491
S'values to impute instead of missing ones - for continuous attributes only!'
p1492
I0
I0
I00
tp1493
asbsS'TDomainContinuizer'
p1494
(i__main__
ClassDefinition
p1495
(dp1496
g4
I1
sg5
I01
sg6
g1494
sg7
S'TOrange'
p1497
sg9
(lp1498
sg11
I00
sg12
(lp1499
(S'bool'
p1500
S'zeroBased'
p1501
g1501
S'if true (default) it gives values 0.0 and 1.0; else -1.0 and 1.0, 0.0 for undefined'
p1502
I0
I0
I01
tp1503
a(S'int'
p1504
S'continuousTreatment'
p1505
g1505
S'0-leave as they are, 1-divide by span, 1-normalize'
p1506
I0
I0
I01
tp1507
a(S'int'
p1508
S'multinomialTreatment'
p1509
g1509
S'0-lowest value, 1-most frequent (or baseValue), 2-n binary, 3-ignore, 4-error, 5-convert as ordinal, 6-ordinal,normalized'
p1510
I0
I0
I01
tp1511
a(S'int'
p1512
S'classTreatment'
p1513
g1513
S'3-leave as is unless target is given, 4-error if not continuous nor binary nor target given, 5-convert as ordinal (unless target given)'
p1514
I0
I0
I01
tp1515
asbsS'TNormalizeContinuous'
p1516
(i__main__
ClassDefinition
p1517
(dp1518
g4
I1
sg5
I01
sg6
g1516
sg7
S'TTransformValue'
p1519
sg9
(lp1520
sg11
I00
sg12
(lp1521
(S'float'
p1522
S'average'
p1523
g1523
S'the average value'
p1524
I0
I0
I01
tp1525
a(S'float'
p1526
S'span'
p1527
g1527
S'the value span'
p1528
I0
I0
I01
tp1529
ag493
asbsS'TPNN'
p1530
(i__main__
ClassDefinition
p1531
(dp1532
g4
I1
sg5
I01
sg6
g1530
sg7
S'TClassifierFD'
p1533
sg9
(lp1534
sg11
I00
sg12
(lp1535
(S'int'
p1536
S'dimensions'
p1537
g1537
S'the number of dimensions'
p1538
I01
I0
I01
tp1539
a(S'TFloatList'
p1540
S'offsets'
p1541
g1541
S'offsets to subtract from the attribute values'
p1542
I0
I0
I00
tp1543
a(S'TFloatList'
p1544
S'normalizers'
p1545
g1545
S'number to divide the values by'
p1546
I0
I0
I00
tp1547
a(S'TFloatList'
p1548
S'averages'
p1549
g1549
S'numbers to use instead of the missing'
p1550
I0
I0
I00
tp1551
a(S'bool'
p1552
S'normalizeExamples'
p1553
g1553
S'if true, attribute values are divided to sum up to 1'
p1554
I0
I0
I01
tp1555
a(S'int'
p1556
S'nExamples'
p1557
g1557
S'the number of examples'
p1558
I01
I0
I01
tp1559
a(S'int'
p1560
S'law'
p1561
g1561
S'law'
p1562
I0
I0
I01
tp1563
ag205
ag83
ag87
asbsS'TBiModalDiscretizer'
p1564
(i__main__
ClassDefinition
p1565
(dp1566
g4
I1
sg5
I01
sg6
g1564
sg7
S'TDiscretizer'
p1567
sg9
(lp1568
sg11
I00
sg12
(lp1569
(S'float'
p1570
S'low'
p1571
g1571
S'low threshold'
p1572
I0
I0
I01
tp1573
a(S'float'
p1574
S'high'
p1575
g1575
S'high threshold'
p1576
I0
I0
I01
tp1577
ag493
asbsS'TExamplesDistanceConstructor_Euclidean'
p1578
(i__main__
ClassDefinition
p1579
(dp1580
g4
I1
sg5
I01
sg6
g1578
sg7
S'TExamplesDistanceConstructor_Normalized'
p1581
sg9
(lp1582
sg11
I00
sg12
(lp1583
(S'bool'
p1584
S'normalize'
p1585
g1585
S'tells whether to normalize distances between attributes'
p1586
I0
I0
I01
tp1587
a(S'bool'
p1588
S'ignoreUnknowns'
p1589
g1589
S'if true (default: false) unknown values are ignored in computation'
p1590
I0
I0
I01
tp1591
a(S'bool'
p1592
S'ignoreClass'
p1593
g1593
S'if true (default), class value is ignored when computing distances'
p1594
I0
I0
I01
tp1595
asbsS'TContingencyAttrAttr'
p1596
(i__main__
ClassDefinition
p1597
(dp1598
g4
I1
sg5
I01
sg6
g1596
sg7
S'TContingency'
p1599
sg9
(lp1600
sg11
I00
sg12
(lp1601
g1208
ag1214
ag1218
ag1222
ag1226
asbsS'TRuleBeamRefiner_Selector'
p1602
(i__main__
ClassDefinition
p1603
(dp1604
g4
I1
sg5
I01
sg6
g1602
sg7
S'TRuleBeamRefiner'
p1605
sg9
(lp1606
sg11
I00
sg12
(lp1607
(S'TDiscretization'
p1608
S'discretization'
p1609
g1609
S'discretization for continuous attributes'
p1610
I0
I0
I00
tp1611
asbsS'TProbabilityEstimatorConstructor_Laplace'
p1612
(i__main__
ClassDefinition
p1613
(dp1614
g4
I1
sg5
I01
sg6
g1612
sg7
S'TProbabilityEstimatorConstructor'
p1615
sg9
(lp1616
sg11
I00
sg12
(lp1617
(S'float'
p1618
S'l'
p1619
g1619
S'number of examples added to each class (default: 1)'
p1620
I0
I0
I01
tp1621
a(S'bool'
p1622
S'renormalize'
p1623
g1623
S'computes the estimate on the original (not the normalized) distribution'
p1624
I0
I0
I01
tp1625
asbsS'TClassifierForLinearWeight'
p1626
(i__main__
ClassDefinition
p1627
(dp1628
g4
I1
sg5
I01
sg6
g1626
sg7
S'TClassifier'
p1629
sg9
(lp1630
sg11
I00
sg12
(lp1631
(S'int'
p1632
S'whichID'
p1633
g1633
S'Id of meta variable for time'
p1634
I0
I0
I01
tp1635
a(S'TVariable'
p1636
S'outcomeVar'
p1637
g1637
S'outcome variable'
p1638
I0
I0
I00
tp1639
a(S'int'
p1640
S'failIndex'
p1641
g1641
S"index of 'fail' value"
p1642
I0
I0
I01
tp1643
a(S'float'
p1644
S'maxTime'
p1645
g1645
S'maximal time'
p1646
I0
I0
I01
tp1647
ag83
ag87
asbsS'TExamplesDistance_Relief'
p1648
(i__main__
ClassDefinition
p1649
(dp1650
g4
I1
sg5
I01
sg6
g1648
sg7
S'TExamplesDistance'
p1651
sg9
(lp1652
sg11
I00
sg12
(lp1653
(S'TDomainDistributions'
p1654
S'distributions'
p1655
g1655
S"distributions of attributes' values"
p1656
I0
I0
I00
tp1657
a(S'TAttributedFloatList'
p1658
S'averages'
p1659
g1659
S'average values of attributes'
p1660
I0
I0
I00
tp1661
a(S'TAttributedFloatList'
p1662
S'normalizations'
p1663
g1663
S"ranges of attributes' values"
p1664
I0
I0
I00
tp1665
a(S'TAttributedFloatList'
p1666
S'bothSpecial'
p1667
g1667
S'distance if both values of both attributes are undefined'
p1668
I0
I0
I00
tp1669
asbsS'TExamplesDistance_Manhattan'
p1670
(i__main__
ClassDefinition
p1671
(dp1672
g4
I1
sg5
I01
sg6
g1670
sg7
S'TExamplesDistance_Normalized'
p1673
sg9
(lp1674
sg11
I00
sg12
(lp1675
g323
ag327
ag331
ag335
ag339
ag343
ag347
asbsS'TExamplesDistanceConstructor_Manhattan'
p1676
(i__main__
ClassDefinition
p1677
(dp1678
g4
I1
sg5
I01
sg6
g1676
sg7
S'TExamplesDistanceConstructor_Normalized'
p1679
sg9
(lp1680
sg11
I00
sg12
(lp1681
g1587
ag1591
ag1595
asbsS'TTreeDescender'
p1682
(i__main__
ClassDefinition
p1683
(dp1684
g4
I1
sg5
I01
sg6
g1682
sg7
S'TOrange'
p1685
sg9
(lp1686
sg11
I01
sg12
(lp1687
sbsS'TColumnAssessor_Measure'
p1688
(i__main__
ClassDefinition
p1689
(dp1690
g4
I1
sg5
I01
sg6
g1688
sg7
S'TColumnAssessor'
p1691
sg9
(lp1692
sg11
I00
sg12
(lp1693
(S'TMeasureAttribute'
p1694
S'measure'
p1695
g1695
S'attribute quality measure'
p1696
I0
I0
I00
tp1697
asbsS'TIMBlurer'
p1698
(i__main__
ClassDefinition
p1699
(dp1700
g4
I1
sg5
I01
sg6
g1698
sg7
S'TIMByRowsPreprocessor'
p1701
sg9
(lp1702
sg11
I00
sg12
(lp1703
(S'float'
p1704
S'weight'
p1705
g1705
S'weight of neighbours'
p1706
I0
I0
I01
tp1707
a(S'float'
p1708
S'origWeight'
p1709
g1709
S'weight of original row'
p1710
I0
I0
I01
tp1711
a(S'TFloatList'
p1712
S'attrWeights'
p1713
g1713
S'weights by individual (different) attributes'
p1714
I0
I0
I00
tp1715
a(S'bool'
p1716
S'adjustOrigWeight'
p1717
g1717
S'uses 1-weight(s) for weight of original row'
p1718
I0
I0
I01
tp1719
a(S'bool'
p1720
S'onlyEmpty'
p1721
g1721
S'blurs only empty cells'
p1722
I0
I0
I01
tp1723
asbsS'TStopIMClusteringByAssessor_noBigChange'
p1724
(i__main__
ClassDefinition
p1725
(dp1726
g4
I1
sg5
I01
sg6
g1724
sg7
S'TStopIMClusteringByAssessor'
p1727
sg9
(lp1728
sg11
I00
sg12
(lp1729
sbsS'TDiscretizedDomain'
p1730
(i__main__
ClassDefinition
p1731
(dp1732
g4
I1
sg5
I01
sg6
g1730
sg7
S'TDomain'
p1733
sg9
(lp1734
sg11
I00
sg12
(lp1735
(S'TDiscretization'
p1736
S'defaultDiscretization'
p1737
g1737
S'default discretization'
p1738
I0
I0
I00
tp1739
a(S'int'
p1740
S'defaultInt'
p1741
g1741
S'default number of intervals'
p1742
I0
I0
I01
tp1743
a(S'int'
p1744
S'weight'
p1745
g1745
S'id of attribute with weight'
p1746
I0
I0
I01
tp1747
a(S'TVariable'
p1748
S'classVar'
p1749
g1749
S'class variable'
p1750
I01
I0
I00
tp1751
a(S'TVarList'
p1752
S'attributes'
p1753
g1753
S'list of attributes, excluding the class'
p1754
I01
I0
I00
tp1755
a(S'TVarList'
p1756
S'variables'
p1757
g1757
S'list of attributes, including the class at the end of the list'
p1758
I01
I0
I00
tp1759
a(S'int'
p1760
S'version'
p1761
g1761
S"unique version identifier; it's changed each time a domain is changed"
p1762
I01
I0
I01
tp1763
asbsS'TC45Learner'
p1764
(i__main__
ClassDefinition
p1765
(dp1766
g4
I1
sg5
I01
sg6
g1764
sg7
S'TLearner'
p1767
sg9
(lp1768
sg11
I00
sg12
(lp1769
(S'bool'
p1770
S'gainRatio'
p1771
(g1771
S'g'
p1772
tp1773
S' use gain ratio (instead of information gain)'
p1774
I0
I0
I01
tp1775
a(S'bool'
p1776
S'subset'
p1777
(g1777
S's'
p1778
tp1779
S' use subsetting'
p1780
I0
I0
I01
tp1781
a(S'bool'
p1782
S'batch'
p1783
(g1783
S'b'
p1784
tp1785
S' batch'
p1786
I0
I0
I01
tp1787
a(S'bool'
p1788
S'probThresh'
p1789
(g1789
S'p'
p1790
tp1791
S' probability threshold'
p1792
I0
I0
I01
tp1793
a(S'int'
p1794
S'minObjs'
p1795
(g1795
g797
tp1796
S' minimal number of objects (examples) in leaves'
p1797
I0
I0
I01
tp1798
a(S'int'
p1799
S'window'
p1800
(g1800
S'w'
p1801
tp1802
S' window'
p1803
I0
I0
I01
tp1804
a(S'int'
p1805
S'increment'
p1806
(g1806
S'i'
p1807
tp1808
S' increment'
p1809
I0
I0
I01
tp1810
a(S'float'
p1811
S'cf'
p1812
(g1812
S'c'
p1813
tp1814
S' cf'
p1815
I0
I0
I01
tp1816
a(S'int'
p1817
S'trials'
p1818
(g1818
S't'
p1819
tp1820
S' trials'
p1821
I0
I0
I01
tp1822
a(S'bool'
p1823
S'prune'
p1824
g1824
S'return pruned tree'
p1825
I0
I0
I01
tp1826
a(S'bool'
p1827
S'convertToOrange'
p1828
g1828
S'return TreeClassifier instead of C45TreeClassifier'
p1829
I0
I0
I01
tp1830
a(S'bool'
p1831
S'storeExamples'
p1832
g1832
S'stores examples when (if) converting to TreeClassifier'
p1833
I0
I0
I01
tp1834
a(S'bool'
p1835
S'storeContingencies'
p1836
g1836
S'stores contingencies when (if) converting to TreeClassifier'
p1837
I0
I0
I01
tp1838
ag97
asbsS'TAttributedBoolList'
p1839
(i__main__
ClassDefinition
p1840
(dp1841
g4
I1
sg5
I01
sg6
g1839
sg7
g1364
sg9
(lp1842
sg11
I00
sg12
(lp1843
(S'TVarList'
p1844
S'attributes'
p1845
g1845
S'list of attributes (for indexing)'
p1846
I0
I0
I00
tp1847
asbsS'TRuleStoppingCriteria'
p1848
(i__main__
ClassDefinition
p1849
(dp1850
g4
I1
sg5
I01
sg6
g1848
sg7
S'TOrange'
p1851
sg9
(lp1852
sg11
I01
sg12
(lp1853
sbsS'TPreprocessor_dropMissingClasses'
p1854
(i__main__
ClassDefinition
p1855
(dp1856
g4
I1
sg5
I01
sg6
g1854
sg7
S'TPreprocessor'
p1857
sg9
(lp1858
sg11
I00
sg12
(lp1859
sbsS'TkNNClassifier'
p1860
(i__main__
ClassDefinition
p1861
(dp1862
g4
I1
sg5
I01
sg6
g1860
sg7
S'TClassifierFD'
p1863
sg9
(lp1864
sg11
I00
sg12
(lp1865
(S'TFindNearest'
p1866
S'findNearest'
p1867
g1867
g1119
I0
I0
I00
tp1868
a(S'float'
p1869
g793
g793
S'number of neighbours'
p1870
I0
I0
I01
tp1871
a(S'bool'
p1872
S'rankWeight'
p1873
g1873
S'enable weighting by ranks'
p1874
I0
I0
I01
tp1875
a(S'int'
p1876
S'weightID'
p1877
g1877
S'id of meta-attribute with weight'
p1878
I0
I0
I01
tp1879
ag205
ag83
ag87
asbsS'TMeasureAttribute_info'
p1880
(i__main__
ClassDefinition
p1881
(dp1882
g4
I1
sg5
I01
sg6
g1880
sg7
S'TMeasureAttributeFromProbabilities'
p1883
sg9
(lp1884
sg11
I00
sg12
(lp1885
g547
ag551
ag555
ag559
ag563
ag567
asbsS'TRuleBeamCandidateSelector_TakeAll'
p1886
(i__main__
ClassDefinition
p1887
(dp1888
g4
I1
sg5
I01
sg6
g1886
sg7
S'TRuleBeamCandidateSelector'
p1889
sg9
(lp1890
sg11
I00
sg12
(lp1891
sbsS'TExamplesDistanceConstructor_Relief'
p1892
(i__main__
ClassDefinition
p1893
(dp1894
g4
I1
sg5
I01
sg6
g1892
sg7
S'TExamplesDistanceConstructor'
p1895
sg9
(lp1896
sg11
I00
sg12
(lp1897
g1595
asbsS'TOrange'
p1898
(i__main__
ClassDefinition
p1899
(dp1900
g4
I1
sg5
I01
sg6
g1898
sg7
Nsg9
(lp1901
sg11
I00
sg12
(lp1902
sbsS'TRuleValidator'
p1903
(i__main__
ClassDefinition
p1904
(dp1905
g4
I1
sg5
I01
sg6
g1903
sg7
S'TOrange'
p1906
sg9
(lp1907
sg11
I01
sg12
(lp1908
sbsS'TColorIG'
p1909
(i__main__
ClassDefinition
p1910
(dp1911
g4
I1
sg5
I01
sg6
g1909
sg7
S'TOrange'
p1912
sg9
(lp1913
sg11
I01
sg12
(lp1914
sbsS'TRuleValidator_Python'
p1915
(i__main__
ClassDefinition
p1916
(dp1917
g4
I1
sg5
I01
sg6
g1915
sg7
S'TRuleValidator'
p1918
sg9
(lp1919
sg11
I00
sg12
(lp1920
sbsS'TIMByRowsBySorting'
p1921
(i__main__
ClassDefinition
p1922
(dp1923
g4
I1
sg5
I01
sg6
g1921
sg7
S'TIMByRowsConstructor'
p1924
sg9
(lp1925
sg11
I00
sg12
(lp1926
sbsS'TAssociationLearner'
p1927
(i__main__
ClassDefinition
p1928
(dp1929
g4
I1
sg5
I01
sg6
g1927
sg7
S'TLearner'
p1930
sg9
(lp1931
sg11
I00
sg12
(lp1932
(S'float'
p1933
S'confidence'
p1934
g1934
S'required confidence'
p1935
I0
I0
I01
tp1936
a(S'float'
p1937
S'support'
p1938
g1938
S'required support'
p1939
I0
I0
I01
tp1940
a(S'int'
p1941
S'voteWeight'
p1942
g1942
S'vote weight (s=support, c=confidence, p=product)'
p1943
I0
I0
I01
tp1944
a(S'int'
p1945
S'maxItemSets'
p1946
g1946
S'maximal number of itemsets (increase if you want)'
p1947
I0
I0
I01
tp1948
ag97
asbsS'TRuleBeamInitializer_Python'
p1949
(i__main__
ClassDefinition
p1950
(dp1951
g4
I1
sg5
I01
sg6
g1949
sg7
S'TRuleBeamInitializer'
p1952
sg9
(lp1953
sg11
I00
sg12
(lp1954
sbsS'TDistributionAssessor'
p1955
(i__main__
ClassDefinition
p1956
(dp1957
g4
I1
sg5
I01
sg6
g1955
sg7
S'TOrange'
p1958
sg9
(lp1959
sg11
I01
sg12
(lp1960
sbsS'TRuleCovererAndRemover_Python'
p1961
(i__main__
ClassDefinition
p1962
(dp1963
g4
I1
sg5
I01
sg6
g1961
sg7
S'TRuleCovererAndRemover'
p1964
sg9
(lp1965
sg11
I00
sg12
(lp1966
sbsS'TMeasureAttribute_gainRatioA'
p1967
(i__main__
ClassDefinition
p1968
(dp1969
g4
I1
sg5
I01
sg6
g1967
sg7
S'TMeasureAttribute_gainRatio'
p1970
sg9
(lp1971
sg11
I00
sg12
(lp1972
g547
ag551
ag555
ag559
ag563
ag567
asbsS'TConditionalProbabilityEstimatorConstructor_ByRows'
p1973
(i__main__
ClassDefinition
p1974
(dp1975
g4
I1
sg5
I01
sg6
g1973
sg7
S'TConditionalProbabilityEstimatorConstructor'
p1976
sg9
(lp1977
sg11
I00
sg12
(lp1978
(S'TProbabilityEstimatorConstructor'
p1979
S'estimatorConstructor'
p1980
g1980
S'ProbabilityEstimator to be used '
p1981
I0
I0
I00
tp1982
asbsS'TCartesianClassifier'
p1983
(i__main__
ClassDefinition
p1984
(dp1985
g4
I1
sg5
I01
sg6
g1983
sg7
S'TClassifierFD'
p1986
sg9
(lp1987
sg11
I00
sg12
(lp1988
g205
ag83
ag87
asbsS'TTreeSplitConstructor'
p1989
(i__main__
ClassDefinition
p1990
(dp1991
g4
I1
sg5
I01
sg6
g1989
sg7
S'TOrange'
p1992
sg9
(lp1993
sg11
I01
sg12
(lp1994
g881
asbsS'TTreeDescender_UnknownToBranch'
p1995
(i__main__
ClassDefinition
p1996
(dp1997
g4
I1
sg5
I01
sg6
g1995
sg7
g1079
sg9
(lp1998
sg11
I0
sg12
(lp1999
sbsS'TSubsetsGenerator_constSize'
p2000
(i__main__
ClassDefinition
p2001
(dp2002
g4
I1
sg5
I01
sg6
g2000
sg7
S'TSubsetsGenerator'
p2003
sg9
(lp2004
sg11
I00
sg12
(lp2005
(S'int'
p2006
S'B'
p2007
g2007
S'subset size'
p2008
I0
I0
I01
tp2009
ag183
asbsS'TColorIG_MCF'
p2010
(i__main__
ClassDefinition
p2011
(dp2012
g4
I1
sg5
I01
sg6
g2010
sg7
S'TColorIG'
p2013
sg9
(lp2014
sg11
I00
sg12
(lp2015
sbsS'TTreeSplitConstructor_Attribute'
p2016
(i__main__
ClassDefinition
p2017
(dp2018
g4
I1
sg5
I01
sg6
g2016
sg7
S'TTreeSplitConstructor_Measure'
p2019
sg9
(lp2020
sg11
I00
sg12
(lp2021
g873
ag877
ag881
asbsS'TRemoveRedundantByInduction'
p2022
(i__main__
ClassDefinition
p2023
(dp2024
g4
I1
sg5
I01
sg6
g2022
sg7
S'TRemoveRedundant'
p2025
sg9
(lp2026
sg11
I00
sg12
(lp2027
(S'TFeatureInducer'
p2028
S'featureReducer'
p2029
g2029
S'feature construction algorithm'
p2030
I0
I0
I00
tp2031
a(S'TMeasureAttribute'
p2032
S'measure'
p2033
g2033
S'measure for initial ordering of attributes'
p2034
I0
I0
I00
tp2035
a(S'TDiscretization'
p2036
S'discretization'
p2037
g2037
S'discretization method'
p2038
I0
I0
I00
tp2039
ag915
asbsS'TFilter_conjunction'
p2040
(i__main__
ClassDefinition
p2041
(dp2042
g4
I1
sg5
I01
sg6
g2040
sg7
S'TFilter'
p2043
sg9
(lp2044
sg11
I00
sg12
(lp2045
(S'TFilterList'
p2046
S'filters'
p2047
g2047
S'a list of filters;'
p2048
I0
I0
I00
tp2049
ag429
ag433
asbsS'TExampleForMissing'
p2050
(i__main__
ClassDefinition
p2051
(dp2052
g4
I1
sg5
I01
sg6
g2050
sg7
S'TExample'
p2053
sg9
(lp2054
sg11
I00
sg12
(lp2055
(S'TEFMDataDescription'
p2056
S'dataDescription'
p2057
g2057
S'data description'
p2058
I0
I0
I00
tp2059
a(S'TDomain'
p2060
S'domain'
p2061
g2061
S"Example's domain"
p2062
I01
I0
I00
tp2063
asbsS'TRuleBeamFilter'
p2064
(i__main__
ClassDefinition
p2065
(dp2066
g4
I1
sg5
I01
sg6
g2064
sg7
S'TOrange'
p2067
sg9
(lp2068
sg11
I01
sg12
(lp2069
sbsS'TBayesClassifier'
p2070
(i__main__
ClassDefinition
p2071
(dp2072
g4
I1
sg5
I01
sg6
g2070
sg7
S'TClassifierFD'
p2073
sg9
(lp2074
sg11
I00
sg12
(lp2075
(S'TDistribution'
p2076
S'distribution'
p2077
g2077
S'class distributions (P(C))'
p2078
I0
I0
I00
tp2079
a(S'TDomainContingency'
p2080
S'conditionalDistributions'
p2081
g2081
S'conditional distributions, P(C|A)'
p2082
I0
I0
I00
tp2083
a(S'TProbabilityEstimator'
p2084
S'estimator'
p2085
g2085
S'a probability estimator for P(C)'
p2086
I0
I0
I00
tp2087
a(S'TConditionalProbabilityEstimatorList'
p2088
S'conditionalEstimators'
p2089
g2089
S'a probability estimator for P(C|A)'
p2090
I0
I0
I00
tp2091
a(S'bool'
p2092
S'normalizePredictions'
p2093
g2093
S'if true, classifier will normalize predictions'
p2094
I0
I0
I01
tp2095
a(S'float'
p2096
S'threshold'
p2097
g2097
S'threshold probability for class 1 (for binary classes only)'
p2098
I0
I0
I01
tp2099
ag205
ag83
ag87
asbsS'TGraph'
p2100
(i__main__
ClassDefinition
p2101
(dp2102
g4
I1
sg5
I01
sg6
g2100
sg7
S'TOrange'
p2103
sg9
(lp2104
sg11
I01
sg12
(lp2105
g1043
ag1047
ag1051
asbsS'TPreprocessor_addClassWeight'
p2106
(i__main__
ClassDefinition
p2107
(dp2108
g4
I1
sg5
I01
sg6
g2106
sg7
S'TPreprocessor'
p2109
sg9
(lp2110
sg11
I00
sg12
(lp2111
(S'TFloatList'
p2112
S'classWeights'
p2113
g2113
S'weights of examples of particular classes'
p2114
I0
I0
I00
tp2115
a(S'bool'
p2116
S'equalize'
p2117
g2117
S'reweight examples to equalize class proportions'
p2118
I0
I0
I01
tp2119
a(S'TRandomGenerator'
p2120
S'randomGenerator'
p2121
g2121
S'random number generator'
p2122
I0
I0
I00
tp2123
asbsS'TStopIMClusteringByAssessor'
p2124
(i__main__
ClassDefinition
p2125
(dp2126
g4
I1
sg5
I01
sg6
g2124
sg7
S'TOrange'
p2127
sg9
(lp2128
sg11
I01
sg12
(lp2129
sbsS'TValueFilter_continuous'
p2130
(i__main__
ClassDefinition
p2131
(dp2132
g4
I1
sg5
I01
sg6
g2130
sg7
S'TValueFilter'
p2133
sg9
(lp2134
sg11
I00
sg12
(lp2135
(S'float'
p2136
S'min'
p2137
(g2137
S'ref'
p2138
tp2139
S' reference value (lower bound for interval operators)'
p2140
I0
I0
I01
tp2141
a(S'float'
p2142
S'max'
p2143
g2143
S'upper bound for interval operators'
p2144
I0
I0
I01
tp2145
a(S'bool'
p2146
S'outside'
p2147
g2147
S'obsolete: if true, the filter accepts the values outside the interval, not inside'
p2148
I0
I0
I01
tp2149
a(S'int'
p2150
S'oper'
p2151
g2151
S'operator'
p2152
I0
I0
I01
tp2153
ag665
ag669
asbsS'TAssociationRule'
p2154
(i__main__
ClassDefinition
p2155
(dp2156
g4
I1
sg5
I01
sg6
g2154
sg7
S'TOrange'
p2157
sg9
(lp2158
sg11
I00
sg12
(lp2159
(S'TExample'
p2160
S'left'
p2161
g2161
S'left side of the rule'
p2162
I0
I0
I00
tp2163
a(S'TExample'
p2164
S'right'
p2165
g2165
S'right side of the rule'
p2166
I0
I0
I00
tp2167
a(S'float'
p2168
S'support'
p2169
g2169
S'support for the rule'
p2170
I0
I0
I01
tp2171
a(S'float'
p2172
S'confidence'
p2173
g2173
S'confidence of the rule'
p2174
I0
I0
I01
tp2175
a(S'float'
p2176
S'coverage'
p2177
g2177
S"rule's coverage"
p2178
I0
I0
I01
tp2179
a(S'float'
p2180
S'strength'
p2181
g2181
S"rule's strength"
p2182
I0
I0
I01
tp2183
a(S'float'
p2184
S'lift'
p2185
g2185
S"rule's lift"
p2186
I0
I0
I01
tp2187
a(S'float'
p2188
S'leverage'
p2189
g2189
S"rule's leverage"
p2190
I0
I0
I01
tp2191
a(S'float'
p2192
S'nAppliesLeft'
p2193
g2193
S"number of examples covered by the rule's left side "
p2194
I0
I0
I01
tp2195
a(S'float'
p2196
S'nAppliesRight'
p2197
g2197
S"number of examples covered by the rule's right side "
p2198
I0
I0
I01
tp2199
a(S'float'
p2200
S'nAppliesBoth'
p2201
g2201
S'number of examples covered by the rule'
p2202
I0
I0
I01
tp2203
a(S'float'
p2204
S'nExamples'
p2205
g2205
S'number of learning examples'
p2206
I0
I0
I01
tp2207
a(S'int'
p2208
S'nLeft'
p2209
g2209
S"number of items on the rule's left side"
p2210
I0
I0
I01
tp2211
a(S'int'
p2212
S'nRight'
p2213
g2213
S"number of items on the rule's right side"
p2214
I0
I0
I01
tp2215
asbsS'TValueFilter'
p2216
(i__main__
ClassDefinition
p2217
(dp2218
g4
I1
sg5
I01
sg6
g2216
sg7
S'TOrange'
p2219
sg9
(lp2220
sg11
I01
sg12
(lp2221
g665
ag669
asbsS'TClustersFromDistributions'
p2222
(i__main__
ClassDefinition
p2223
(dp2224
g4
I1
sg5
I01
sg6
g2222
sg7
S'TOrange'
p2225
sg9
(lp2226
sg11
I01
sg12
(lp2227
sbsS'TVariable'
p2228
(i__main__
ClassDefinition
p2229
(dp2230
g4
I1
sg5
I01
sg6
g2228
sg7
S'TOrange'
p2231
sg9
(lp2232
sg11
I01
sg12
(lp2233
g233
ag237
ag241
ag245
ag249
ag253
ag257
asbsS'TNoiseValuesGenerator'
p2234
(i__main__
ClassDefinition
p2235
(dp2236
g4
I1
sg5
I01
sg6
g2234
sg7
S'TChangeExampleGenerator'
p2237
sg9
(lp2238
sg11
I00
sg12
(lp2239
(S'TIntFloatList'
p2240
S'replaceProbabilities'
p2241
g2241
S"probabilities for replacing attributes' values"
p2242
I0
I0
I00
tp2243
a(S'TRandomGenerator'
p2244
S'randomGenerator'
p2245
g2245
S'random generator'
p2246
I0
I0
I00
tp2247
ag137
ag141
asbsS'TFilter_sameValue'
p2248
(i__main__
ClassDefinition
p2249
(dp2250
g4
I1
sg5
I01
sg6
g2248
sg7
S'TFilter'
p2251
sg9
(lp2252
sg11
I00
sg12
(lp2253
(S'int'
p2254
S'position'
p2255
g2255
S'position of the observed attribute'
p2256
I0
I0
I01
tp2257
a(S'TValue'
p2258
S'value'
p2259
g2259
S'value that the selected examples should have'
p2260
I0
I0
I01
tp2261
ag429
ag433
asbsS'TEquiNDiscretization'
p2262
(i__main__
ClassDefinition
p2263
(dp2264
g4
I1
sg5
I01
sg6
g2262
sg7
S'TDiscretization'
p2265
sg9
(lp2266
sg11
I00
sg12
(lp2267
(S'int'
p2268
S'numberOfIntervals'
p2269
g2269
S'number of intervals'
p2270
I0
I0
I01
tp2271
a(S'bool'
p2272
S'recursiveDivision'
p2273
g2273
S'find cut-off points by recursive division (default = true)'
p2274
I0
I0
I01
tp2275
asbsS'TImputerConstructor_average'
p2276
(i__main__
ClassDefinition
p2277
(dp2278
g4
I1
sg5
I01
sg6
g2276
sg7
S'TImputerConstructor'
p2279
sg9
(lp2280
sg11
I00
sg12
(lp2281
g151
asbsS'TDomainBasicAttrStat'
p2282
(i__main__
ClassDefinition
p2283
(dp2284
g4
I1
sg5
I01
sg6
g2282
sg7
g1364
sg9
(lp2285
sg11
I00
sg12
(lp2286
sbsS'TStopDistributionClustering'
p2287
(i__main__
ClassDefinition
p2288
(dp2289
g4
I1
sg5
I01
sg6
g2287
sg7
S'TOrange'
p2290
sg9
(lp2291
sg11
I01
sg12
(lp2292
sbsS'TImputerConstructor_random'
p2293
(i__main__
ClassDefinition
p2294
(dp2295
g4
I1
sg5
I01
sg6
g2293
sg7
S'TImputerConstructor'
p2296
sg9
(lp2297
sg11
I00
sg12
(lp2298
(S'bool'
p2299
S'deterministic'
p2300
g2300
S"tells whether to initialize random by example's CRC (default: false)"
p2301
I0
I0
I01
tp2302
ag151
asbsS'TCostWrapperClassifier'
p2303
(i__main__
ClassDefinition
p2304
(dp2305
g4
I1
sg5
I01
sg6
g2303
sg7
S'TClassifier'
p2306
sg9
(lp2307
sg11
I00
sg12
(lp2308
(S'TClassifier'
p2309
S'classifier'
p2310
g2310
S'basic classifier'
p2311
I0
I0
I00
tp2312
a(S'TCostMatrix'
p2313
S'costMatrix'
p2314
g2314
S'cost matrix'
p2315
I0
I0
I00
tp2316
ag83
ag87
asbsS'TPreprocessor_ignore'
p2317
(i__main__
ClassDefinition
p2318
(dp2319
g4
I1
sg5
I01
sg6
g2317
sg7
S'TPreprocessor'
p2320
sg9
(lp2321
sg11
I00
sg12
(lp2322
(S'TVarList'
p2323
S'attributes'
p2324
g2324
S'tells which attributes to remove'
p2325
I0
I0
I00
tp2326
asbsS'TC45TreeNode'
p2327
(i__main__
ClassDefinition
p2328
(dp2329
g4
I1
sg5
I01
sg6
g2327
sg7
S'TOrange'
p2330
sg9
(lp2331
sg11
I00
sg12
(lp2332
(S'int'
p2333
S'nodeType'
p2334
g2334
S'0 = leaf,  1 = branch,  2 = cut,  3 = subset'
p2335
I0
I0
I01
tp2336
a(S'TValue'
p2337
S'leaf'
p2338
g2338
S'most frequent class at this node'
p2339
I0
I0
I01
tp2340
a(S'float'
p2341
S'items'
p2342
g2342
S'no of items at this node'
p2343
I0
I0
I01
tp2344
a(S'TDiscDistribution'
p2345
S'classDist'
p2346
g2346
S'class distribution of items'
p2347
I0
I0
I00
tp2348
a(S'TVariable'
p2349
S'tested'
p2350
g2350
S'attribute referenced in test'
p2351
I0
I0
I00
tp2352
a(S'float'
p2353
S'cut'
p2354
g2354
S'threshold for continuous attribute'
p2355
I0
I0
I01
tp2356
a(S'float'
p2357
S'lower'
p2358
g2358
S'lower limit of soft threshold'
p2359
I0
I0
I01
tp2360
a(S'float'
p2361
S'upper'
p2362
g2362
S'upper limit of soft threshold'
p2363
I0
I0
I01
tp2364
a(S'TIntList'
p2365
S'mapping'
p2366
g2366
S'mapping for discrete value'
p2367
I0
I0
I00
tp2368
a(S'TC45TreeNodeList'
p2369
S'branch'
p2370
g2370
S'branch[x] = (sub)tree for outcome x */'
p2371
I0
I0
I00
tp2372
asbsS'TMeasureAttribute_Python'
p2373
(i__main__
ClassDefinition
p2374
(dp2375
g4
I1
sg5
I01
sg6
g2373
sg7
S'TMeasureAttribute'
p2376
sg9
(lp2377
sg11
I00
sg12
(lp2378
g559
ag563
ag567
asbsS'TDistributionAssessor_Measure'
p2379
(i__main__
ClassDefinition
p2380
(dp2381
g4
I1
sg5
I01
sg6
g2379
sg7
S'TDistributionAssessor'
p2382
sg9
(lp2383
sg11
I00
sg12
(lp2384
(S'TMeasureAttribute'
p2385
S'measure'
p2386
g2386
S'attribute quality measure'
p2387
I0
I0
I00
tp2388
asbsS'TDistributionAssessor_m'
p2389
(i__main__
ClassDefinition
p2390
(dp2391
g4
I1
sg5
I01
sg6
g2389
sg7
S'TDistributionAssessor'
p2392
sg9
(lp2393
sg11
I00
sg12
(lp2394
(S'float'
p2395
g797
g797
S'm for m-estimate'
p2396
I0
I0
I01
tp2397
asbsS'TClassifierRandomGenerator'
p2398
(i__main__
ClassDefinition
p2399
(dp2400
g4
I1
sg5
I01
sg6
g2398
sg7
S'TExampleGenerator'
p2401
sg9
(lp2402
sg11
I00
sg12
(lp2403
(S'TClassifier'
p2404
S'classify'
p2405
g2405
S'classifier'
p2406
I0
I0
I00
tp2407
a(S'int'
p2408
S'noOfEx'
p2409
g2409
S'number of examples'
p2410
I0
I0
I01
tp2411
ag137
ag141
asbsS'TExamplesDistance_Hamiltonian'
p2412
(i__main__
ClassDefinition
p2413
(dp2414
g4
I1
sg5
I01
sg6
g2412
sg7
S'TExamplesDistance'
p2415
sg9
(lp2416
sg11
I00
sg12
(lp2417
(S'bool'
p2418
S'ignoreClass'
p2419
g2419
S'if true (default), class value is ignored when computing distances'
p2420
I0
I0
I01
tp2421
a(S'bool'
p2422
S'ignoreUnknowns'
p2423
g2423
S'if true (default: false) unknown values are ignored in computation'
p2424
I0
I0
I01
tp2425
asbsS'TThresholdDiscretizer'
p2426
(i__main__
ClassDefinition
p2427
(dp2428
g4
I1
sg5
I01
sg6
g2426
sg7
S'TDiscretizer'
p2429
sg9
(lp2430
sg11
I00
sg12
(lp2431
(S'float'
p2432
S'threshold'
p2433
g2433
S'threshold'
p2434
I0
I0
I01
tp2435
ag493
asbsS'TExampleTable'
p2436
(i__main__
ClassDefinition
p2437
(dp2438
g4
I1
sg5
I01
sg6
g2436
sg7
S'TExampleGenerator'
p2439
sg9
(lp2440
sg11
I00
sg12
(lp2441
(S'TRandomGenerator'
p2442
S'randomGenerator'
p2443
g2443
S'random generator used by randomExample'
p2444
I0
I0
I00
tp2445
a(S'TExampleGenerator'
p2446
S'lock'
p2447
g2447
S'the real owner of examples'
p2448
I01
I0
I00
tp2449
a(S'bool'
p2450
S'ownsExamples'
p2451
g2451
S'if false, examples in this table are references to examples in another table'
p2452
I01
I0
I01
tp2453
ag137
ag141
asbsS'TTreeSplitConstructor_Threshold'
p2454
(i__main__
ClassDefinition
p2455
(dp2456
g4
I1
sg5
I01
sg6
g2454
sg7
S'TTreeSplitConstructor_Measure'
p2457
sg9
(lp2458
sg11
I00
sg12
(lp2459
g873
ag877
ag881
asbsS'TStopDistributionClustering_n'
p2460
(i__main__
ClassDefinition
p2461
(dp2462
g4
I1
sg5
I01
sg6
g2460
sg7
S'TStopDistributionClustering'
p2463
sg9
(lp2464
sg11
I00
sg12
(lp2465
(S'int'
p2466
g1318
g1318
S'number of clusters'
p2467
I0
I0
I01
tp2468
asbsS'TLWRLearner'
p2469
(i__main__
ClassDefinition
p2470
(dp2471
g4
I1
sg5
I01
sg6
g2469
sg7
S'TLearner'
p2472
sg9
(lp2473
sg11
I00
sg12
(lp2474
(S'TExamplesDistanceConstructor'
p2475
S'distanceConstructor'
p2476
g2476
S'constructor for object that will find the nearest neighbours'
p2477
I0
I0
I00
tp2478
a(S'TLinRegLearner'
p2479
S'linRegLearner'
p2480
g2480
S'learner that performs local linear regression'
p2481
I0
I0
I00
tp2482
a(S'float'
p2483
g793
g793
S'number of neighbours'
p2484
I0
I0
I01
tp2485
a(S'bool'
p2486
S'rankWeight'
p2487
g2487
S'use ranks instead of distances'
p2488
I0
I0
I01
tp2489
ag97
asbsS'TTreeExampleSplitter_UnknownsAsSelector'
p2490
(i__main__
ClassDefinition
p2491
(dp2492
g4
I1
sg5
I01
sg6
g2490
sg7
S'TTreeExampleSplitter'
p2493
sg9
(lp2494
sg11
I00
sg12
(lp2495
sbsS'TClassifier_Python'
p2496
(i__main__
ClassDefinition
p2497
(dp2498
g4
I1
sg5
I01
sg6
g2496
sg7
S'TClassifier'
p2499
sg9
(lp2500
sg11
I00
sg12
(lp2501
g83
ag87
asbsS'TFilter_isDefined'
p2502
(i__main__
ClassDefinition
p2503
(dp2504
g4
I1
sg5
I01
sg6
g2502
sg7
S'TFilter'
p2505
sg9
(lp2506
sg11
I00
sg12
(lp2507
(S'TAttributedBoolList'
p2508
S'check'
p2509
g2509
S'tells which attributes to check; checks all if the list is empty'
p2510
I01
I0
I00
tp2511
ag429
ag433
asbsS'TRemoveRedundantByQuality'
p2512
(i__main__
ClassDefinition
p2513
(dp2514
g4
I1
sg5
I01
sg6
g2512
sg7
S'TRemoveRedundant'
p2515
sg9
(lp2516
sg11
I00
sg12
(lp2517
(S'bool'
p2518
S'remeasure'
p2519
g2519
S'reapply the measure after removal'
p2520
I0
I0
I01
tp2521
a(S'float'
p2522
S'minQuality'
p2523
g2523
S'minimal acceptable quality'
p2524
I0
I0
I01
tp2525
a(S'int'
p2526
S'removeBut'
p2527
g2527
S'the desired number of attributes'
p2528
I0
I0
I01
tp2529
a(S'TMeasureAttribute'
p2530
S'measure'
p2531
g2531
S'attribute quality measure'
p2532
I0
I0
I00
tp2533
ag915
asbsS'TGraphAsList'
p2534
(i__main__
ClassDefinition
p2535
(dp2536
g4
I1
sg5
I01
sg6
g2534
sg7
S'TGraph'
p2537
sg9
(lp2538
sg11
I00
sg12
(lp2539
g1043
ag1047
ag1051
asbsS'TProbabilityEstimatorConstructor_m'
p2540
(i__main__
ClassDefinition
p2541
(dp2542
g4
I1
sg5
I01
sg6
g2540
sg7
S'TProbabilityEstimatorConstructor'
p2543
sg9
(lp2544
sg11
I00
sg12
(lp2545
(S'float'
p2546
g797
g797
S'parameter m for m-estimation'
p2547
I0
I0
I01
tp2548
a(S'bool'
p2549
S'renormalize'
p2550
g2550
S'computes the estimate on the original (not the normalized) distribution'
p2551
I0
I0
I01
tp2552
asbsS'TDistanceMap'
p2553
(i__main__
ClassDefinition
p2554
(dp2555
g4
I1
sg5
I01
sg6
g2553
sg7
S'TOrange'
p2556
sg9
(lp2557
sg11
I00
sg12
(lp2558
(S'int'
p2559
S'dim'
p2560
g2560
S'bitmap dimension (in cells)'
p2561
I01
I0
I01
tp2562
a(S'int'
p2563
S'matrixType'
p2564
g2564
S'0 lower, 1 upper, 2 symmetric'
p2565
I0
I0
I01
tp2566
a(S'TIntList'
p2567
S'elementIndices'
p2568
g2568
S'indices to elements (one for row + one at the end)'
p2569
I01
I0
I00
tp2570
asbsS'TDistanceMapConstructor'
p2571
(i__main__
ClassDefinition
p2572
(dp2573
g4
I1
sg5
I01
sg6
g2571
sg7
S'TOrange'
p2574
sg9
(lp2575
sg11
I00
sg12
(lp2576
(S'TSymMatrix'
p2577
S'distanceMatrix'
p2578
g2578
S'distance matrix'
p2579
I0
I0
I00
tp2580
a(S'TIntList'
p2581
S'order'
p2582
g2582
S'order of elements'
p2583
I0
I0
I00
tp2584
asbsS'TTransformValue'
p2585
(i__main__
ClassDefinition
p2586
(dp2587
g4
I1
sg5
I01
sg6
g2585
sg7
S'TOrange'
p2588
sg9
(lp2589
sg11
I01
sg12
(lp2590
g493
asbsS'TComputeDomainContingency_DomainTransformation'
p2591
(i__main__
ClassDefinition
p2592
(dp2593
g4
I1
sg5
I01
sg6
g2591
sg7
S'TComputeDomainContingency'
p2594
sg9
(lp2595
sg11
I00
sg12
(lp2596
(S'TDomainTransformerConstructor'
p2597
S'domainTransformerConstructor'
p2598
g2598
S'constructs a domain in which each attribute corresponds one of originals'
p2599
I0
I0
I00
tp2600
a(S'bool'
p2601
S'resultInOriginalDomain'
p2602
g2602
S'tells whether the resulting DomainContingency should consist of original attributes'
p2603
I0
I0
I01
tp2604
ag25
asbsS'TStopDistributionClustering_noBigChange'
p2605
(i__main__
ClassDefinition
p2606
(dp2607
g4
I1
sg5
I01
sg6
g2605
sg7
S'TStopDistributionClustering'
p2608
sg9
(lp2609
sg11
I00
sg12
(lp2610
sbsS'TTreePruner'
p2611
(i__main__
ClassDefinition
p2612
(dp2613
g4
I1
sg5
I01
sg6
g2611
sg7
S'TOrange'
p2614
sg9
(lp2615
sg11
I01
sg12
(lp2616
sbsS'TImputer_Python'
p2617
(i__main__
ClassDefinition
p2618
(dp2619
g4
I1
sg5
I01
sg6
g2617
sg7
S'TImputer'
p2620
sg9
(lp2621
sg11
I00
sg12
(lp2622
sbsS'TRuleLearner'
p2623
(i__main__
ClassDefinition
p2624
(dp2625
g4
I1
sg5
I01
sg6
g2623
sg7
S'TLearner'
p2626
sg9
(lp2627
sg11
I00
sg12
(lp2628
(S'TRuleDataStoppingCriteria'
p2629
S'dataStopping'
p2630
g2630
g1119
I0
I0
I00
tp2631
a(S'TRuleStoppingCriteria'
p2632
S'ruleStopping'
p2633
g2633
g1119
I0
I0
I00
tp2634
a(S'TRuleCovererAndRemover'
p2635
S'coverAndRemove'
p2636
g2636
g1119
I0
I0
I00
tp2637
a(S'TRuleFinder'
p2638
S'ruleFinder'
p2639
g2639
g1119
I0
I0
I00
tp2640
a(S'TRuleClassifierConstructor'
p2641
S'classifierConstructor'
p2642
g2642
S'classifier'
p2643
I0
I0
I00
tp2644
a(S'TProgressCallback'
p2645
S'progressCallback'
p2646
g2646
S'progress callback function'
p2647
I0
I0
I00
tp2648
a(S'bool'
p2649
S'storeExamples'
p2650
g2650
g1119
I0
I0
I01
tp2651
a(S'int'
p2652
S'targetClass'
p2653
g2653
g1119
I0
I0
I01
tp2654
a(S'TRuleList'
p2655
S'baseRules'
p2656
g2656
g1119
I0
I0
I00
tp2657
ag97
asbsS'TOrdinal2Continuous'
p2658
(i__main__
ClassDefinition
p2659
(dp2660
g4
I1
sg5
I01
sg6
g2658
sg7
S'TTransformValue'
p2661
sg9
(lp2662
sg11
I00
sg12
(lp2663
(S'float'
p2664
S'factor'
p2665
g2665
S'number of values'
p2666
I0
I0
I01
tp2667
ag493
asbsS'TTreeSplitConstructor_Combined'
p2668
(i__main__
ClassDefinition
p2669
(dp2670
g4
I1
sg5
I01
sg6
g2668
sg7
S'TTreeSplitConstructor'
p2671
sg9
(lp2672
sg11
I00
sg12
(lp2673
(S'TTreeSplitConstructor'
p2674
S'discreteSplitConstructor'
p2675
g2675
S'split constructor for discrete attributes'
p2676
I0
I0
I00
tp2677
a(S'TTreeSplitConstructor'
p2678
S'continuousSplitConstructor'
p2679
g2679
S'split constructor for continuous attributes'
p2680
I0
I0
I00
tp2681
ag881
asbsS'TTransformValue_Python'
p2682
(i__main__
ClassDefinition
p2683
(dp2684
g4
I1
sg5
I01
sg6
g2682
sg7
S'TTransformValue'
p2685
sg9
(lp2686
sg11
I00
sg12
(lp2687
g493
asbsS'TRuleStoppingCriteria_Python'
p2688
(i__main__
ClassDefinition
p2689
(dp2690
g4
I1
sg5
I01
sg6
g2688
sg7
S'TRuleStoppingCriteria'
p2691
sg9
(lp2692
sg11
I00
sg12
(lp2693
sbsS'TRuleEvaluator_Python'
p2694
(i__main__
ClassDefinition
p2695
(dp2696
g4
I1
sg5
I01
sg6
g2694
sg7
S'TRuleEvaluator'
p2697
sg9
(lp2698
sg11
I00
sg12
(lp2699
sbsS'TIGBySorting'
p2700
(i__main__
ClassDefinition
p2701
(dp2702
g4
I1
sg5
I01
sg6
g2700
sg7
S'TIGConstructor'
p2703
sg9
(lp2704
sg11
I00
sg12
(lp2705
sbsS'TConditionalProbabilityEstimator_ByRows'
p2706
(i__main__
ClassDefinition
p2707
(dp2708
g4
I1
sg5
I01
sg6
g2706
sg7
S'TConditionalProbabilityEstimator'
p2709
sg9
(lp2710
sg11
I00
sg12
(lp2711
(S'TProbabilityEstimatorList'
p2712
S'estimatorList'
p2713
g2713
S'A list of probability estimators'
p2714
I0
I0
I00
tp2715
ag111
ag115
asbsS'TProgressCallback'
p2716
(i__main__
ClassDefinition
p2717
(dp2718
g4
I1
sg5
I01
sg6
g2716
sg7
S'TOrange'
p2719
sg9
(lp2720
sg11
I01
sg12
(lp2721
sbsS'THierarchicalClustering'
p2722
(i__main__
ClassDefinition
p2723
(dp2724
g4
I1
sg5
I01
sg6
g2722
sg7
S'TOrange'
p2725
sg9
(lp2726
sg11
I00
sg12
(lp2727
(S'int'
p2728
S'linkage'
p2729
g2729
S'linkage'
p2730
I0
I0
I01
tp2731
a(S'bool'
p2732
S'overwriteMatrix'
p2733
g2733
S'if true (default is false) it will use (and destroy) the distance matrix given as argument'
p2734
I0
I0
I01
tp2735
a(S'TProgressCallback'
p2736
S'progressCallback'
p2737
g2737
S'progress callback function'
p2738
I0
I0
I00
tp2739
asbsS'TRuleBeamInitializer_Default'
p2740
(i__main__
ClassDefinition
p2741
(dp2742
g4
I1
sg5
I01
sg6
g2740
sg7
S'TRuleBeamInitializer'
p2743
sg9
(lp2744
sg11
I00
sg12
(lp2745
sbsS'TClassifierFromVar'
p2746
(i__main__
ClassDefinition
p2747
(dp2748
g4
I1
sg5
I01
sg6
g2746
sg7
S'TClassifier'
p2749
sg9
(lp2750
sg11
I00
sg12
(lp2751
(S'TVariable'
p2752
S'whichVar'
p2753
(g2753
S'variable'
p2754
tp2755
S' variable'
p2756
I0
I0
I00
tp2757
a(S'TTransformValue'
p2758
S'transformer'
p2759
g2759
S'transformer'
p2760
I0
I0
I00
tp2761
a(S'TDistribution'
p2762
S'distributionForUnknown'
p2763
g2763
S'distribution for unknown value'
p2764
I0
I0
I00
tp2765
a(S'bool'
p2766
S'transformUnknowns'
p2767
g2767
S'if false (default), unknowns stay unknown or are changed into distribution if given'
p2768
I0
I0
I01
tp2769
ag83
ag87
asbsS'TIM'
p2770
(i__main__
ClassDefinition
p2771
(dp2772
g4
I1
sg5
I01
sg6
g2770
sg7
S'TOrange'
p2773
sg9
(lp2774
sg11
I00
sg12
(lp2775
(S'int'
p2776
S'varType'
p2777
g2777
S'class variable type'
p2778
I0
I0
I01
tp2779
a(S'TExampleTable'
p2780
S'rowExamples'
p2781
g2781
S'examples with free attributes for each row'
p2782
I0
I0
I00
tp2783
asbsS'TClassifier'
p2784
(i__main__
ClassDefinition
p2785
(dp2786
g4
I1
sg5
I01
sg6
g2784
sg7
S'TOrange'
p2787
sg9
(lp2788
sg11
I00
sg12
(lp2789
g83
ag87
asbsS'TTreeSplitConstructor_Python'
p2790
(i__main__
ClassDefinition
p2791
(dp2792
g4
I1
sg5
I01
sg6
g2790
sg7
S'TTreeSplitConstructor'
p2793
sg9
(lp2794
sg11
I00
sg12
(lp2795
g881
asbsS'TIG'
p2796
(i__main__
ClassDefinition
p2797
(dp2798
g4
I1
sg5
I01
sg6
g2796
sg7
S'TOrange'
p2799
sg9
(lp2800
sg11
I00
sg12
(lp2801
sbsS'TMeasureAttribute_relief'
p2802
(i__main__
ClassDefinition
p2803
(dp2804
g4
I1
sg5
I01
sg6
g2802
sg7
S'TMeasureAttribute'
p2805
sg9
(lp2806
S'prevGenerator'
p2807
aS'prevDomain'
p2808
asg11
I00
sg12
(lp2809
(S'float'
p2810
g793
g793
S'number of neighbours'
p2811
I0
I0
I01
tp2812
a(S'float'
p2813
g797
g797
S'number of reference examples'
p2814
I0
I0
I01
tp2815
ag559
ag563
ag567
asbsS'TTreeExampleSplitter_Python'
p2816
(i__main__
ClassDefinition
p2817
(dp2818
g4
I1
sg5
I01
sg6
g2816
sg7
S'TTreeExampleSplitter'
p2819
sg9
(lp2820
sg11
I00
sg12
(lp2821
sbsS'TExampleGenerator'
p2822
(i__main__
ClassDefinition
p2823
(dp2824
g4
I1
sg5
I01
sg6
g2822
sg7
S'TOrange'
p2825
sg9
(lp2826
sg11
I01
sg12
(lp2827
g137
ag141
asbsS'TAdapterGenerator'
p2828
(i__main__
ClassDefinition
p2829
(dp2830
g4
I1
sg5
I01
sg6
g2828
sg7
S'TExampleGenerator'
p2831
sg9
(lp2832
sg11
I00
sg12
(lp2833
g137
ag141
asbsS'TIMFromExamples'
p2834
(i__main__
ClassDefinition
p2835
(dp2836
g4
I1
sg5
I01
sg6
g2834
sg7
S'TOrange'
p2837
sg9
(lp2838
sg11
I01
sg12
(lp2839
sbsS'TFilter_random'
p2840
(i__main__
ClassDefinition
p2841
(dp2842
g4
I1
sg5
I01
sg6
g2840
sg7
S'TFilter'
p2843
sg9
(lp2844
sg11
I00
sg12
(lp2845
(S'float'
p2846
S'prob'
p2847
g2847
S'probability of selecting an example'
p2848
I0
I0
I01
tp2849
a(S'TRandomGenerator'
p2850
S'randomGenerator'
p2851
g2851
S'random generator'
p2852
I0
I0
I00
tp2853
ag429
ag433
asbsS'TC45ExampleGenerator'
p2854
(i__main__
ClassDefinition
p2855
(dp2856
g4
I1
sg5
I01
sg6
g2854
sg7
S'TFileExampleGenerator'
p2857
sg9
(lp2858
sg11
I00
sg12
(lp2859
(S'TBoolList'
p2860
S'skip'
p2861
g2861
S'a boolean list, one element per attribute, denoting which attributes to skip'
p2862
I0
I0
I00
tp2863
ag125
ag129
ag133
ag137
ag141
asbsS'TExamplesDistanceConstructor_Hamiltonian'
p2864
(i__main__
ClassDefinition
p2865
(dp2866
g4
I1
sg5
I01
sg6
g2864
sg7
S'TExamplesDistanceConstructor'
p2867
sg9
(lp2868
sg11
I00
sg12
(lp2869
(S'bool'
p2870
S'ignoreClass'
p2871
g2871
S'if true (default), class value is ignored when computing distances'
p2872
I0
I0
I01
tp2873
a(S'bool'
p2874
S'ignoreUnknowns'
p2875
g2875
S'if true (default: false) unknown values are ignored in computation'
p2876
I0
I0
I01
tp2877
ag1595
asbsS'TProbabilityEstimatorConstructor_loess'
p2878
(i__main__
ClassDefinition
p2879
(dp2880
g4
I1
sg5
I01
sg6
g2878
sg7
S'TProbabilityEstimatorConstructor'
p2881
sg9
(lp2882
sg11
I00
sg12
(lp2883
(S'float'
p2884
S'windowProportion'
p2885
g2885
S'The proportion of points in a window for LR'
p2886
I0
I0
I01
tp2887
a(S'int'
p2888
S'nPoints'
p2889
g2889
S'The number of points on curve (negative means the given number of points is inserted in each interval)'
p2890
I0
I0
I01
tp2891
a(S'int'
p2892
S'distributionMethod'
p2893
g2893
S"Meaning of the 'nPoints'"
p2894
I0
I0
I01
tp2895
asbsS'TLogRegFitter'
p2896
(i__main__
ClassDefinition
p2897
(dp2898
g4
I1
sg5
I01
sg6
g2896
sg7
S'TOrange'
p2899
sg9
(lp2900
sg11
I01
sg12
(lp2901
sbsS'TMakeRandomIndicesCV'
p2902
(i__main__
ClassDefinition
p2903
(dp2904
g4
I1
sg5
I01
sg6
g2902
sg7
S'TMakeRandomIndices'
p2905
sg9
(lp2906
sg11
I00
sg12
(lp2907
(S'int'
p2908
S'folds'
p2909
g2909
S'number of folds'
p2910
I0
I0
I01
tp2911
ag455
ag459
ag463
asbsS'TPreprocessor_removeDuplicates'
p2912
(i__main__
ClassDefinition
p2913
(dp2914
g4
I1
sg5
I01
sg6
g2912
sg7
S'TPreprocessor'
p2915
sg9
(lp2916
sg11
I00
sg12
(lp2917
sbsS'TTreeExampleSplitter_UnknownsAsBranchSizes'
p2918
(i__main__
ClassDefinition
p2919
(dp2920
g4
I1
sg5
I01
sg6
g2918
sg7
S'TTreeExampleSplitter'
p2921
sg9
(lp2922
sg11
I00
sg12
(lp2923
sbsS'TExamplesDistanceConstructor_Normalized'
p2924
(i__main__
ClassDefinition
p2925
(dp2926
g4
I1
sg5
I01
sg6
g2924
sg7
S'TExamplesDistanceConstructor'
p2927
sg9
(lp2928
sg11
I01
sg12
(lp2929
g1587
ag1591
ag1595
asbsS'TCostWrapperLearner'
p2930
(i__main__
ClassDefinition
p2931
(dp2932
g4
I1
sg5
I01
sg6
g2930
sg7
S'TLearner'
p2933
sg9
(lp2934
sg11
I00
sg12
(lp2935
(S'TLearner'
p2936
S'basicLearner'
p2937
g2937
S'basic learner'
p2938
I0
I0
I00
tp2939
a(S'TCostMatrix'
p2940
S'costMatrix'
p2941
g2941
S'cost matrix'
p2942
I0
I0
I00
tp2943
ag97
asbsS'TFindNearest'
p2944
(i__main__
ClassDefinition
p2945
(dp2946
g4
I1
sg5
I01
sg6
g2944
sg7
S'TOrange'
p2947
sg9
(lp2948
sg11
I01
sg12
(lp2949
g691
ag695
asbsS'TLogRegFitter_Cholesky'
p2950
(i__main__
ClassDefinition
p2951
(dp2952
g4
I1
sg5
I01
sg6
g2950
sg7
S'TLogRegFitter'
p2953
sg9
(lp2954
sg11
I00
sg12
(lp2955
sbsS'TDistributionAssessor_Laplace'
p2956
(i__main__
ClassDefinition
p2957
(dp2958
g4
I1
sg5
I01
sg6
g2956
sg7
S'TDistributionAssessor'
p2959
sg9
(lp2960
sg11
I00
sg12
(lp2961
sbsS'TColumnAssessor_Relief'
p2962
(i__main__
ClassDefinition
p2963
(dp2964
g4
I1
sg5
I01
sg6
g2962
sg7
S'TColumnAssessor'
p2965
sg9
(lp2966
sg11
I00
sg12
(lp2967
sbsS'TClassifierByLookupTable'
p2968
(i__main__
ClassDefinition
p2969
(dp2970
g4
I1
sg5
I01
sg6
g2968
sg7
S'TClassifier'
p2971
sg9
(lp2972
sg11
I01
sg12
(lp2973
g75
ag79
ag83
ag87
asbsS'TRuleBeamFinder'
p2974
(i__main__
ClassDefinition
p2975
(dp2976
g4
I1
sg5
I01
sg6
g2974
sg7
S'TRuleFinder'
p2977
sg9
(lp2978
sg11
I00
sg12
(lp2979
(S'TRuleBeamInitializer'
p2980
S'initializer'
p2981
g2981
g1119
I0
I0
I00
tp2982
a(S'TRuleBeamRefiner'
p2983
S'refiner'
p2984
g2984
g1119
I0
I0
I00
tp2985
a(S'TRuleBeamCandidateSelector'
p2986
S'candidateSelector'
p2987
g2987
g1119
I0
I0
I00
tp2988
a(S'TRuleBeamFilter'
p2989
S'ruleFilter'
p2990
g2990
g1119
I0
I0
I00
tp2991
a(S'TRuleValidator'
p2992
S'ruleStoppingValidator'
p2993
g2993
g1119
I0
I0
I00
tp2994
a(S'TRuleValidator'
p2995
S'validator'
p2996
g2996
g1119
I0
I0
I00
tp2997
a(S'TRuleEvaluator'
p2998
S'evaluator'
p2999
g2999
g1119
I0
I0
I00
tp3000
asbsS'TFilter'
p3001
(i__main__
ClassDefinition
p3002
(dp3003
g4
I1
sg5
I01
sg6
g3001
sg7
S'TOrange'
p3004
sg9
(lp3005
sg11
I01
sg12
(lp3006
g429
ag433
asbsS'TC45Classifier'
p3007
(i__main__
ClassDefinition
p3008
(dp3009
g4
I1
sg5
I01
sg6
g3007
sg7
S'TClassifierFD'
p3010
sg9
(lp3011
sg11
I00
sg12
(lp3012
(S'TC45TreeNode'
p3013
S'tree'
p3014
g3014
S'tree'
p3015
I0
I0
I00
tp3016
ag205
ag83
ag87
asbsS'TMeasureAttribute_cost'
p3017
(i__main__
ClassDefinition
p3018
(dp3019
g4
I1
sg5
I01
sg6
g3017
sg7
S'TMeasureAttributeFromProbabilities'
p3020
sg9
(lp3021
sg11
I00
sg12
(lp3022
(S'TCostMatrix'
p3023
S'cost'
p3024
g3024
S'cost matrix'
p3025
I0
I0
I00
tp3026
ag547
ag551
ag555
ag559
ag563
ag567
asbsS'TImputerConstructor_minimal'
p3027
(i__main__
ClassDefinition
p3028
(dp3029
g4
I1
sg5
I01
sg6
g3027
sg7
S'TImputerConstructor'
p3030
sg9
(lp3031
sg11
I00
sg12
(lp3032
g151
asbsS'TClustersFromIM'
p3033
(i__main__
ClassDefinition
p3034
(dp3035
g4
I1
sg5
I01
sg6
g3033
sg7
S'TOrange'
p3036
sg9
(lp3037
sg11
I01
sg12
(lp3038
sbsS'TFilter_values'
p3039
(i__main__
ClassDefinition
p3040
(dp3041
g4
I1
sg5
I01
sg6
g3039
sg7
S'TFilter'
p3042
sg9
(lp3043
sg11
I00
sg12
(lp3044
(S'TValueFilterList'
p3045
S'conditions'
p3046
g3046
S'a list of filters'
p3047
I0
I0
I00
tp3048
a(S'bool'
p3049
S'conjunction'
p3050
g3050
S'if true, filter computes conjunction, otherwise disjunction'
p3051
I0
I0
I01
tp3052
ag429
ag433
asbsS'TClassifierForKMWeight'
p3053
(i__main__
ClassDefinition
p3054
(dp3055
g4
I1
sg5
I01
sg6
g3053
sg7
S'TClassifier'
p3056
sg9
(lp3057
sg11
I00
sg12
(lp3058
(S'int'
p3059
S'whichID'
p3060
g3060
S'Id of meta variable for time'
p3061
I0
I0
I01
tp3062
a(S'TVariable'
p3063
S'outcomeVar'
p3064
g3064
S'outcome variable'
p3065
I0
I0
I00
tp3066
a(S'int'
p3067
S'failIndex'
p3068
g3068
S"index of 'fail' value"
p3069
I0
I0
I01
tp3070
a(S'TKaplanMeier'
p3071
S'kaplanMeier'
p3072
g3072
S'Kaplan-Meier curve'
p3073
I0
I0
I00
tp3074
ag83
ag87
asbsS'TSymMatrix'
p3075
(i__main__
ClassDefinition
p3076
(dp3077
g4
I1
sg5
I01
sg6
g3075
sg7
S'TOrange'
p3078
sg9
(lp3079
sg11
I00
sg12
(lp3080
(S'int'
p3081
S'dim'
p3082
g3082
S'matrix dimension'
p3083
I01
I0
I01
tp3084
a(S'int'
p3085
S'matrixType'
p3086
g3086
S'0 lower, 1 upper, 2 symmetric, 3 lower_filled, 4 upper_filled'
p3087
I0
I0
I01
tp3088
asbsS'TSVMLearner'
p3089
(i__main__
ClassDefinition
p3090
(dp3091
g4
I1
sg5
I01
sg6
g3089
sg7
S'TLearner'
p3092
sg9
(lp3093
sg11
I00
sg12
(lp3094
(S'int'
p3095
S'svm_type'
p3096
S'type'
p3097
S' SVM type (C_SVC=0, NU_SVC, ONE_CLASS, C_SVR=3)'
p3098
I0
I0
I01
tp3099
a(S'int'
p3100
S'kernel_type'
p3101
S'kernel'
p3102
S' kernel type (LINEAR=0, POLY, RBF, SIGMOID=3)'
p3103
I0
I0
I01
tp3104
a(S'float'
p3105
S'degree'
p3106
g3106
S'polynomial kernel degree'
p3107
I0
I0
I01
tp3108
a(S'float'
p3109
S'gamma'
p3110
g3110
S'poly/rbf/sigm parameter'
p3111
I0
I0
I01
tp3112
a(S'float'
p3113
S'coef0'
p3114
g3114
S'poly/sigm parameter'
p3115
I0
I0
I01
tp3116
a(S'float'
p3117
S'cache_size'
p3118
g3118
S'cache size in MB'
p3119
I0
I0
I01
tp3120
a(S'float'
p3121
S'eps'
p3122
g3122
S'stopping criteria'
p3123
I0
I0
I01
tp3124
a(S'float'
p3125
S'C'
p3126
g3126
S'for C_SVC and C_SVR'
p3127
I0
I0
I01
tp3128
a(S'float'
p3129
S'nu'
p3130
g3130
S'for NU_SVC and ONE_CLASS'
p3131
I0
I0
I01
tp3132
a(S'float'
p3133
g1790
g1790
S'for C_SVR'
p3134
I0
I0
I01
tp3135
a(S'int'
p3136
S'max_iter'
p3137
g3137
S'maximal number of iterations'
p3138
I0
I0
I01
tp3139
a(S'float'
p3140
S'iter_mult'
p3141
g3141
S'epsilon multiplier'
p3142
I0
I0
I01
tp3143
ag97
asbsS'TImputerConstructor_defaults'
p3144
(i__main__
ClassDefinition
p3145
(dp3146
g4
I1
sg5
I01
sg6
g3144
sg7
S'TImputerConstructor'
p3147
sg9
(lp3148
sg11
I00
sg12
(lp3149
(S'TExample'
p3150
S'defaults'
p3151
g3151
S'default values to be imputed instead missing ones'
p3152
I0
I0
I00
tp3153
ag151
asbsS'TConditionalProbabilityEstimatorConstructor'
p3154
(i__main__
ClassDefinition
p3155
(dp3156
g4
I1
sg5
I01
sg6
g3154
sg7
S'TOrange'
p3157
sg9
(lp3158
sg11
I01
sg12
(lp3159
sbsS'TPreprocessor_takeMissingClasses'
p3160
(i__main__
ClassDefinition
p3161
(dp3162
g4
I1
sg5
I01
sg6
g3160
sg7
S'TPreprocessor'
p3163
sg9
(lp3164
sg11
I00
sg12
(lp3165
sbsS'TClustersFromIMByAssessor'
p3166
(i__main__
ClassDefinition
p3167
(dp3168
g4
I1
sg5
I01
sg6
g3166
sg7
S'TClustersFromIM'
p3169
sg9
(lp3170
sg11
I00
sg12
(lp3171
(S'TColumnAssessor'
p3172
S'columnAssessor'
p3173
g3173
S'column quality assessor'
p3174
I0
I0
I00
tp3175
a(S'TStopIMClusteringByAssessor'
p3176
S'stopCriterion'
p3177
g3177
S'stop criterion'
p3178
I0
I0
I00
tp3179
asbsS'TRuleValidator_LRS'
p3180
(i__main__
ClassDefinition
p3181
(dp3182
g4
I1
sg5
I01
sg6
g3180
sg7
S'TRuleValidator'
p3183
sg9
(lp3184
sg11
I00
sg12
(lp3185
(S'float'
p3186
S'alpha'
p3187
g3187
g1119
I0
I0
I01
tp3188
a(S'float'
p3189
S'min_coverage'
p3190
g3190
g1119
I0
I0
I01
tp3191
a(S'float'
p3192
S'max_rule_complexity'
p3193
g3193
g1119
I0
I0
I01
tp3194
asbsS'TLogRegFitter_Python'
p3195
(i__main__
ClassDefinition
p3196
(dp3197
g4
I1
sg5
I01
sg6
g3195
sg7
S'TLogRegFitter'
p3198
sg9
(lp3199
sg11
I00
sg12
(lp3200
sbsS'TMakeRandomIndices2'
p3201
(i__main__
ClassDefinition
p3202
(dp3203
g4
I1
sg5
I01
sg6
g3201
sg7
S'TMakeRandomIndices'
p3204
sg9
(lp3205
sg11
I00
sg12
(lp3206
(S'float'
p3207
S'p0'
p3208
g3208
S"a proportion or a number of 0's"
p3209
I0
I0
I01
tp3210
ag455
ag459
ag463
asbsS'TValueList'
p3211
(i__main__
ClassDefinition
p3212
(dp3213
g4
I1
sg5
I01
sg6
g3211
sg7
g1364
sg9
(lp3214
sg11
I00
sg12
(lp3215
(S'TVariable'
p3216
S'variable'
p3217
g3217
S'the variable to which the list applies'
p3218
I0
I0
I00
tp3219
asbsS'TTreeExampleSplitter_UnknownsToCommon'
p3220
(i__main__
ClassDefinition
p3221
(dp3222
g4
I1
sg5
I01
sg6
g3220
sg7
S'TTreeExampleSplitter'
p3223
sg9
(lp3224
sg11
I00
sg12
(lp3225
sbsS'TContDistribution'
p3226
(i__main__
ClassDefinition
p3227
(dp3228
g4
I1
sg5
I01
sg6
g3226
sg7
S'TDistribution'
p3229
sg9
(lp3230
sg11
I00
sg12
(lp3231
(S'TFloatList'
p3232
S'variances'
p3233
g3233
S'variances'
p3234
I0
I0
I00
tp3235
a(S'float'
p3236
S'sum'
p3237
g3237
S'weighted sum of elements (i.e. N*average)'
p3238
I01
I0
I01
tp3239
a(S'float'
p3240
S'sum2'
p3241
g3241
S'weighted sum of squares of elements'
p3242
I01
I0
I01
tp3243
ag727
ag731
ag735
ag739
ag743
ag747
ag751
ag755
asbsS'TTreeDescender_UnknownMergeAsSelector'
p3244
(i__main__
ClassDefinition
p3245
(dp3246
g4
I1
sg5
I01
sg6
g3244
sg7
g1079
sg9
(lp3247
sg11
I0
sg12
(lp3248
sbsS'TContingencyAttrClass'
p3249
(i__main__
ClassDefinition
p3250
(dp3251
g4
I1
sg5
I01
sg6
g3249
sg7
S'TContingencyClass'
p3252
sg9
(lp3253
sg11
I00
sg12
(lp3254
g1208
ag1214
ag1218
ag1222
ag1226
asbsS'TDomainTransformerConstructor'
p3255
(i__main__
ClassDefinition
p3256
(dp3257
g4
I1
sg5
I01
sg6
g3255
sg7
S'TOrange'
p3258
sg9
(lp3259
sg11
I01
sg12
(lp3260
(S'bool'
p3261
S'preservesOrder'
p3262
g3262
S'a flag, telling that original attributes have corresponding attribute in the same order'
p3263
I01
I0
I01
tp3264
a(S'bool'
p3265
S'preservesAttributes'
p3266
g3266
S'a flag, telling whether each original has a corresponding new attribute'
p3267
I01
I0
I01
tp3268
asbsS'TPythonValueSpecial'
p3269
(i__main__
ClassDefinition
p3270
(dp3271
g4
I1
sg5
I01
sg6
g3269
sg7
S'TOrange'
p3272
sg9
(lp3273
sg11
I00
sg12
(lp3274
(S'int'
p3275
S'valueType'
p3276
g3276
S'value type'
p3277
I0
I0
I01
tp3278
asbsS'TIGConstructor'
p3279
(i__main__
ClassDefinition
p3280
(dp3281
g4
I1
sg5
I01
sg6
g3279
sg7
S'TOrange'
p3282
sg9
(lp3283
sg11
I01
sg12
(lp3284
sbsS'TProbabilityEstimatorConstructor'
p3285
(i__main__
ClassDefinition
p3286
(dp3287
g4
I1
sg5
I01
sg6
g3285
sg7
S'TOrange'
p3288
sg9
(lp3289
sg11
I01
sg12
(lp3290
sbsS'TFloatVariable'
p3291
(i__main__
ClassDefinition
p3292
(dp3293
g4
I1
sg5
I01
sg6
g3291
sg7
S'TVariable'
p3294
sg9
(lp3295
sg11
I00
sg12
(lp3296
(S'float'
p3297
S'startValue'
p3298
g3298
S'lowest value'
p3299
I0
I0
I01
tp3300
a(S'float'
p3301
S'endValue'
p3302
g3302
S'highest value'
p3303
I0
I0
I01
tp3304
a(S'float'
p3305
S'stepValue'
p3306
g3306
S'step'
p3307
I0
I0
I01
tp3308
a(S'int'
p3309
S'numberOfDecimals'
p3310
g3310
S'number of digits after decimal point'
p3311
I0
I0
I01
tp3312
a(S'bool'
p3313
S'scientificFormat'
p3314
g3314
S'use scientific format in output'
p3315
I0
I0
I01
tp3316
a(S'int'
p3317
S'adjustDecimals'
p3318
g3318
S"adjust number of decimals according to the values converted (0 - no, 1 - yes, 2 - yes, but haven't seen any yet)"
p3319
I0
I0
I01
tp3320
ag233
ag237
ag241
ag245
ag249
ag253
ag257
asbsS'TImputer_random'
p3321
(i__main__
ClassDefinition
p3322
(dp3323
g4
I1
sg5
I01
sg6
g3321
sg7
S'TImputer'
p3324
sg9
(lp3325
sg11
I00
sg12
(lp3326
(S'bool'
p3327
S'imputeClass'
p3328
g3328
S'Tells whether to impute the class values, too (default: true)'
p3329
I0
I0
I01
tp3330
a(S'bool'
p3331
S'deterministic'
p3332
g3332
S"tells whether to initialize random by example's CRC (default: false)"
p3333
I0
I0
I01
tp3334
asbsS'TProbabilityEstimatorConstructor_kernel'
p3335
(i__main__
ClassDefinition
p3336
(dp3337
g4
I1
sg5
I01
sg6
g3335
sg7
S'TProbabilityEstimatorConstructor'
p3338
sg9
(lp3339
sg11
I00
sg12
(lp3340
(S'float'
p3341
S'minImpact'
p3342
g3342
S'Minimal impact the point must have to be counted'
p3343
I0
I0
I01
tp3344
a(S'float'
p3345
S'smoothing'
p3346
g3346
S'Smoothing factor'
p3347
I0
I0
I01
tp3348
a(S'int'
p3349
S'nPoints'
p3350
g3350
S'Number of points for curve (negative means the given number of points is inserted in each interval)'
p3351
I0
I0
I01
tp3352
asbsS'TRuleCovererAndRemover_Default'
p3353
(i__main__
ClassDefinition
p3354
(dp3355
g4
I1
sg5
I01
sg6
g3353
sg7
S'TRuleCovererAndRemover'
p3356
sg9
(lp3357
sg11
I00
sg12
(lp3358
sbsS'TP2NN'
p3359
(i__main__
ClassDefinition
p3360
(dp3361
g4
I1
sg5
I01
sg6
g3359
sg7
S'TPNN'
p3362
sg9
(lp3363
sg11
I00
sg12
(lp3364
g1539
ag1543
ag1547
ag1551
ag1555
ag1559
ag1563
ag205
ag83
ag87
asbsS'TFilter_Python'
p3365
(i__main__
ClassDefinition
p3366
(dp3367
g4
I1
sg5
I01
sg6
g3365
sg7
S'TFilter'
p3368
sg9
(lp3369
sg11
I00
sg12
(lp3370
g429
ag433
asbsS'TExamplesDistanceConstructor_Maximal'
p3371
(i__main__
ClassDefinition
p3372
(dp3373
g4
I1
sg5
I01
sg6
g3371
sg7
S'TExamplesDistanceConstructor_Normalized'
p3374
sg9
(lp3375
sg11
I00
sg12
(lp3376
g1587
ag1591
ag1595
asbsS'TTreeDescender_Python'
p3377
(i__main__
ClassDefinition
p3378
(dp3379
g4
I1
sg5
I01
sg6
g3377
sg7
S'TTreeDescender'
p3380
sg9
(lp3381
sg11
I00
sg12
(lp3382
sbsS'TSubsetsGenerator_constant'
p3383
(i__main__
ClassDefinition
p3384
(dp3385
g4
I1
sg5
I01
sg6
g3383
sg7
S'TSubsetsGenerator'
p3386
sg9
(lp3387
sg11
I00
sg12
(lp3388
(S'TVarList'
p3389
S'constant'
p3390
g3390
S'a subset that is returned (once!)'
p3391
I0
I0
I00
tp3392
ag183
asbsS'TGaussianNoiseGenerator'
p3393
(i__main__
ClassDefinition
p3394
(dp3395
g4
I1
sg5
I01
sg6
g3393
sg7
S'TChangeExampleGenerator'
p3396
sg9
(lp3397
sg11
I00
sg12
(lp3398
(S'TIntFloatList'
p3399
S'deviations'
p3400
g3400
S"deviations for attributes' values"
p3401
I0
I0
I00
tp3402
a(S'TRandomGenerator'
p3403
S'randomGenerator'
p3404
g3404
S'random generator'
p3405
I0
I0
I00
tp3406
ag137
ag141
asbsS'TClustersFromDistributionsByAssessor'
p3407
(i__main__
ClassDefinition
p3408
(dp3409
g4
I1
sg5
I01
sg6
g3407
sg7
S'TClustersFromDistributions'
p3410
sg9
(lp3411
sg11
I00
sg12
(lp3412
(S'TDistributionAssessor'
p3413
S'distributionAssessor'
p3414
g3414
S'column quality assessor'
p3415
I0
I0
I00
tp3416
a(S'TStopDistributionClustering'
p3417
S'stopCriterion'
p3418
g3418
S'stop criterion'
p3419
I0
I0
I00
tp3420
a(S'float'
p3421
S'minProfitProportion'
p3422
g3422
S'minimal merge profit'
p3423
I0
I0
I01
tp3424
asbsS'TDefaultClassifier'
p3425
(i__main__
ClassDefinition
p3426
(dp3427
g4
I1
sg5
I01
sg6
g3425
sg7
S'TClassifier'
p3428
sg9
(lp3429
sg11
I00
sg12
(lp3430
(S'TValue'
p3431
S'defaultVal'
p3432
g3432
S'default prediction'
p3433
I0
I0
I01
tp3434
a(S'TDistribution'
p3435
S'defaultDistribution'
p3436
g3436
S'default distribution'
p3437
I0
I0
I00
tp3438
ag83
ag87
asbsS'TColumnAssessor_Kramer'
p3439
(i__main__
ClassDefinition
p3440
(dp3441
g4
I1
sg5
I01
sg6
g3439
sg7
S'TColumnAssessor'
p3442
sg9
(lp3443
sg11
I00
sg12
(lp3444
sbsS'TDiscretization'
p3445
(i__main__
ClassDefinition
p3446
(dp3447
g4
I1
sg5
I01
sg6
g3445
sg7
S'TOrange'
p3448
sg9
(lp3449
sg11
I01
sg12
(lp3450
sbsS'TTreeSplitConstructor_Measure'
p3451
(i__main__
ClassDefinition
p3452
(dp3453
g4
I1
sg5
I01
sg6
g3451
sg7
S'TTreeSplitConstructor'
p3454
sg9
(lp3455
sg11
I01
sg12
(lp3456
g873
ag877
ag881
asbsS'TTreeNode'
p3457
(i__main__
ClassDefinition
p3458
(dp3459
g4
I1
sg5
I01
sg6
g3457
sg7
S'TOrange'
p3460
sg9
(lp3461
sg11
I00
sg12
(lp3462
(S'TClassifier'
p3463
S'nodeClassifier'
p3464
g3464
S'classifies an example'
p3465
I0
I0
I00
tp3466
a(S'TDistribution'
p3467
S'distribution'
p3468
g3468
S'distribution of classes in the node'
p3469
I0
I0
I00
tp3470
a(S'TDomainContingency'
p3471
S'contingency'
p3472
g3472
S'domain contingency for examples in the node'
p3473
I0
I0
I00
tp3474
a(S'TExampleGenerator'
p3475
S'examples'
p3476
g3476
S'learning examples (if stored)'
p3477
I0
I0
I00
tp3478
a(S'int'
p3479
S'weightID'
p3480
g3480
S'weightID used to construct this node'
p3481
I0
I0
I01
tp3482
a(S'TClassifier'
p3483
S'branchSelector'
p3484
g3484
S'classifier that select a branch for an example'
p3485
I0
I0
I00
tp3486
a(S'TTreeNodeList'
p3487
S'branches'
p3488
g3488
S'classifiers presenting the branches'
p3489
I0
I0
I00
tp3490
a(S'TStringList'
p3491
S'branchDescriptions'
p3492
g3492
S'descriptions of branches'
p3493
I0
I0
I00
tp3494
a(S'TDiscDistribution'
p3495
S'branchSizes'
p3496
g3496
S'numbers of examples in branches'
p3497
I0
I0
I00
tp3498
asbsS'TTransformValue_IsDefined'
p3499
(i__main__
ClassDefinition
p3500
(dp3501
g4
I1
sg5
I01
sg6
g3499
sg7
S'TTransformValue'
p3502
sg9
(lp3503
sg11
I00
sg12
(lp3504
g493
asbsS'TFilter_hasClassValue'
p3505
(i__main__
ClassDefinition
p3506
(dp3507
g4
I1
sg5
I01
sg6
g3505
sg7
S'TFilter'
p3508
sg9
(lp3509
sg11
I00
sg12
(lp3510
g429
ag433
asbsS'TStopDistributionClustering_binary'
p3511
(i__main__
ClassDefinition
p3512
(dp3513
g4
I1
sg5
I01
sg6
g3511
sg7
S'TStopDistributionClustering'
p3514
sg9
(lp3515
sg11
I00
sg12
(lp3516
sbsS'TIMByRows'
p3517
(i__main__
ClassDefinition
p3518
(dp3519
g4
I1
sg5
I01
sg6
g3517
sg7
S'TOrange'
p3520
sg9
(lp3521
sg11
I00
sg12
(lp3522
(S'int'
p3523
S'varType'
p3524
g3524
S'class variable type'
p3525
I0
I0
I01
tp3526
asbsS'TRuleFinder'
p3527
(i__main__
ClassDefinition
p3528
(dp3529
g4
I1
sg5
I01
sg6
g3527
sg7
S'TOrange'
p3530
sg9
(lp3531
sg11
I01
sg12
(lp3532
g2997
ag3000
asbsS'TClassifierByExampleTable'
p3533
(i__main__
ClassDefinition
p3534
(dp3535
g4
I1
sg5
I01
sg6
g3533
sg7
S'TClassifierFD'
p3536
sg9
(lp3537
sg11
I00
sg12
(lp3538
(S'TExampleTable'
p3539
S'sortedExamples'
p3540
g3540
S'a table of examples'
p3541
I0
I0
I00
tp3542
a(S'bool'
p3543
S'containsUnknowns'
p3544
g3544
S'if true, the table contains unknown values'
p3545
I0
I0
I01
tp3546
a(S'TClassifier'
p3547
S'classifierForUnknown'
p3548
g3548
S'a classifier for unknown cases'
p3549
I0
I0
I00
tp3550
a(S'TEFMDataDescription'
p3551
S'dataDescription'
p3552
g3552
S'data description'
p3553
I0
I0
I00
tp3554
ag205
ag83
ag87
asbsNNsS'TChangeExampleGenerator'
p3555
(i__main__
ClassDefinition
p3556
(dp3557
g4
I1
sg5
I01
sg6
g3555
sg7
S'TAdapterGenerator'
p3558
sg9
(lp3559
sg11
I01
sg12
(lp3560
g137
ag141
asbsS'TRule'
p3561
(i__main__
ClassDefinition
p3562
(dp3563
g4
I1
sg5
I01
sg6
g3561
sg7
S'TOrange'
p3564
sg9
(lp3565
sg11
I00
sg12
(lp3566
(S'TFilter'
p3567
S'filter'
p3568
g3568
S'stored filter for this rule'
p3569
I0
I0
I00
tp3570
a(S'TClassifier'
p3571
S'classifier'
p3572
g3572
S'classifies an example'
p3573
I0
I0
I00
tp3574
a(S'TLearner'
p3575
S'learner'
p3576
g3576
S'learns a classifier from data'
p3577
I0
I0
I00
tp3578
a(S'TDistribution'
p3579
S'classDistribution'
p3580
g3580
S'distribution of classes covered by the rule'
p3581
I0
I0
I00
tp3582
a(S'TExampleTable'
p3583
S'examples'
p3584
g3584
S'covered examples'
p3585
I0
I0
I00
tp3586
a(S'int'
p3587
S'weightID'
p3588
g3588
S'weight for the stored examples'
p3589
I0
I0
I01
tp3590
a(S'float'
p3591
S'quality'
p3592
g3592
S'some measure of rule quality'
p3593
I0
I0
I01
tp3594
a(S'float'
p3595
S'complexity'
p3596
g3596
g1119
I0
I0
I01
tp3597
asbsS'TClassifierByLookupTable2'
p3598
(i__main__
ClassDefinition
p3599
(dp3600
g4
I1
sg5
I01
sg6
g3598
sg7
S'TClassifierByLookupTable'
p3601
sg9
(lp3602
sg11
I00
sg12
(lp3603
(S'TVariable'
p3604
S'variable1'
p3605
g3605
S'the first attribute used for classification'
p3606
I01
I0
I00
tp3607
a(S'TVariable'
p3608
S'variable2'
p3609
g3609
S'the second attribute used for classification'
p3610
I01
I0
I00
tp3611
a(S'int'
p3612
S'noOfValues1'
p3613
g3613
S'number of values of the first attribute'
p3614
I01
I0
I01
tp3615
a(S'int'
p3616
S'noOfValues2'
p3617
g3617
S'number of values of the second attribute'
p3618
I01
I0
I01
tp3619
a(S'TEFMDataDescription'
p3620
S'dataDescription'
p3621
g3621
S'data description'
p3622
I0
I0
I00
tp3623
ag75
ag79
ag83
ag87
asbsS'TPreprocessor_addClassNoise'
p3624
(i__main__
ClassDefinition
p3625
(dp3626
g4
I1
sg5
I01
sg6
g3624
sg7
S'TPreprocessor'
p3627
sg9
(lp3628
sg11
I00
sg12
(lp3629
(S'float'
p3630
S'proportion'
p3631
g3631
S'proportion of changed class values'
p3632
I0
I0
I01
tp3633
a(S'TRandomGenerator'
p3634
S'randomGenerator'
p3635
g3635
S'random number generator'
p3636
I0
I0
I00
tp3637
asbsS'TClassifierByLookupTable1'
p3638
(i__main__
ClassDefinition
p3639
(dp3640
g4
I1
sg5
I01
sg6
g3638
sg7
S'TClassifierByLookupTable'
p3641
sg9
(lp3642
sg11
I00
sg12
(lp3643
(S'TVariable'
p3644
S'variable1'
p3645
(g3645
S'variable'
p3646
tp3647
S' attribute used for classification'
p3648
I01
I0
I00
tp3649
ag75
ag79
ag83
ag87
asbsS'TRuleClassifierConstructor_Python'
p3650
(i__main__
ClassDefinition
p3651
(dp3652
g4
I1
sg5
I01
sg6
g3650
sg7
S'TRuleClassifierConstructor'
p3653
sg9
(lp3654
sg11
I00
sg12
(lp3655
sbsS'TRemoveRedundantOneValue'
p3656
(i__main__
ClassDefinition
p3657
(dp3658
g4
I1
sg5
I01
sg6
g3656
sg7
S'TRemoveRedundant'
p3659
sg9
(lp3660
sg11
I00
sg12
(lp3661
(S'bool'
p3662
S'onData'
p3663
g3663
S'observe the actual number of value on the data (not on attribute definitions)'
p3664
I0
I0
I01
tp3665
ag915
asbsS'TDistributionAssessor_Relief'
p3666
(i__main__
ClassDefinition
p3667
(dp3668
g4
I1
sg5
I01
sg6
g3666
sg7
S'TDistributionAssessor'
p3669
sg9
(lp3670
sg11
I00
sg12
(lp3671
sbsS'TEnumVariable'
p3672
(i__main__
ClassDefinition
p3673
(dp3674
g4
I1
sg5
I01
sg6
g3672
sg7
S'TVariable'
p3675
sg9
(lp3676
sg11
I00
sg12
(lp3677
(S'TStringList'
p3678
S'values'
p3679
g3679
S"attribute's values"
p3680
I0
I0
I00
tp3681
a(S'int'
p3682
S'baseValue'
p3683
g3683
S'the index of the base value'
p3684
I0
I0
I01
tp3685
ag233
ag237
ag241
ag245
ag249
ag253
ag257
asbsS'TConditionalProbabilityEstimatorConstructor_loess'
p3686
(i__main__
ClassDefinition
p3687
(dp3688
g4
I1
sg5
I01
sg6
g3686
sg7
S'TConditionalProbabilityEstimatorConstructor'
p3689
sg9
(lp3690
sg11
I00
sg12
(lp3691
(S'float'
p3692
S'windowProportion'
p3693
g3693
S'The proportion of points in a window for LR'
p3694
I0
I0
I01
tp3695
a(S'int'
p3696
S'nPoints'
p3697
g3697
S'The number of points on curve'
p3698
I0
I0
I01
tp3699
a(S'int'
p3700
S'distributionMethod'
p3701
g3701
S"Meaning of the 'nPoints'"
p3702
I0
I0
I01
tp3703
asbsS'TPreprocessor_addMissing'
p3704
(i__main__
ClassDefinition
p3705
(dp3706
g4
I1
sg5
I01
sg6
g3704
sg7
S'TPreprocessor'
p3707
sg9
(lp3708
sg11
I00
sg12
(lp3709
(S'TVariableFloatMap'
p3710
S'proportions'
p3711
g3711
S'proportion of removed values for individual values'
p3712
I0
I0
I00
tp3713
a(S'float'
p3714
S'defaultProportion'
p3715
g3715
S'default proportion of removed values (for attributes not specified above)'
p3716
I0
I0
I01
tp3717
a(S'int'
p3718
S'specialType'
p3719
g3719
S'special value type (1=DC, 2=DK)'
p3720
I0
I0
I01
tp3721
a(S'TRandomGenerator'
p3722
S'randomGenerator'
p3723
g3723
S'random number generator'
p3724
I0
I0
I00
tp3725
asbsS'TRuleBeamCandidateSelector'
p3726
(i__main__
ClassDefinition
p3727
(dp3728
g4
I1
sg5
I01
sg6
g3726
sg7
S'TOrange'
p3729
sg9
(lp3730
sg11
I01
sg12
(lp3731
sbsS'TSubsetsGenerator_minMaxSize'
p3732
(i__main__
ClassDefinition
p3733
(dp3734
g4
I1
sg5
I01
sg6
g3732
sg7
S'TSubsetsGenerator'
p3735
sg9
(lp3736
sg11
I00
sg12
(lp3737
(S'int'
p3738
S'min'
p3739
g3739
S'minimal subset size'
p3740
I0
I0
I01
tp3741
a(S'int'
p3742
S'max'
p3743
g3743
S'maximal subset size'
p3744
I0
I0
I01
tp3745
ag183
asbsS'TMakeRandomIndicesN'
p3746
(i__main__
ClassDefinition
p3747
(dp3748
g4
I1
sg5
I01
sg6
g3746
sg7
S'TMakeRandomIndices'
p3749
sg9
(lp3750
sg11
I00
sg12
(lp3751
(S'TFloatList'
p3752
g1790
g1790
S'probabilities of indices (last is 1-sum(p))'
p3753
I0
I0
I00
tp3754
ag455
ag459
ag463
asbsS'TTreeExampleSplitter_UnknownsToAll'
p3755
(i__main__
ClassDefinition
p3756
(dp3757
g4
I1
sg5
I01
sg6
g3755
sg7
S'TTreeExampleSplitter'
p3758
sg9
(lp3759
sg11
I00
sg12
(lp3760
sbsS'TValueFilter_stringList'
p3761
(i__main__
ClassDefinition
p3762
(dp3763
g4
I1
sg5
I01
sg6
g3761
sg7
S'TValueFilter'
p3764
sg9
(lp3765
sg11
I00
sg12
(lp3766
(S'TStringList'
p3767
S'values'
p3768
g3768
S'accepted values'
p3769
I0
I0
I00
tp3770
a(S'bool'
p3771
S'caseSensitive'
p3772
g3772
S'if true (default), the comparison is case sensitive'
p3773
I0
I0
I01
tp3774
ag665
ag669
asbsS'TContingencyClass'
p3775
(i__main__
ClassDefinition
p3776
(dp3777
g4
I1
sg5
I01
sg6
g3775
sg7
S'TContingency'
p3778
sg9
(lp3779
sg11
I01
sg12
(lp3780
g1208
ag1214
ag1218
ag1222
ag1226
asbsS'TAssociationClassifier'
p3781
(i__main__
ClassDefinition
p3782
(dp3783
g4
I1
sg5
I01
sg6
g3781
sg7
S'TClassifierFD'
p3784
sg9
(lp3785
sg11
I00
sg12
(lp3786
(S'TAssociationRules'
p3787
S'rules'
p3788
g3788
S'association rules'
p3789
I0
I0
I00
tp3790
a(S'int'
p3791
S'voteWeight'
p3792
g3792
S'vote weight (s=support, c=confidence, p=product)'
p3793
I0
I0
I01
tp3794
ag205
ag83
ag87
asbsS'TDomainDistributions'
p3795
(i__main__
ClassDefinition
p3796
(dp3797
g4
I1
sg5
I01
sg6
g3795
sg7
g1364
sg9
(lp3798
sg11
I00
sg12
(lp3799
sbsS'TDomain'
p3800
(i__main__
ClassDefinition
p3801
(dp3802
g4
I1
sg5
I01
sg6
g3800
sg7
S'TOrange'
p3803
sg9
(lp3804
sg11
I00
sg12
(lp3805
g1751
ag1755
ag1759
ag1763
asbsS'TTreePruner_SameMajority'
p3806
(i__main__
ClassDefinition
p3807
(dp3808
g4
I1
sg5
I01
sg6
g3806
sg7
S'TTreePruner'
p3809
sg9
(lp3810
sg11
I00
sg12
(lp3811
sbsS'TExampleDistConstructor'
p3812
(i__main__
ClassDefinition
p3813
(dp3814
g4
I1
sg5
I01
sg6
g3812
sg7
S'TOrange'
p3815
sg9
(lp3816
sg11
I01
sg12
(lp3817
sbsS'TIMByIMByRows'
p3818
(i__main__
ClassDefinition
p3819
(dp3820
g4
I1
sg5
I01
sg6
g3818
sg7
S'TIMConstructor'
p3821
sg9
(lp3822
sg11
I00
sg12
(lp3823
g827
asbsS'TDiscrete2Continuous'
p3824
(i__main__
ClassDefinition
p3825
(dp3826
g4
I1
sg5
I01
sg6
g3824
sg7
S'TTransformValue'
p3827
sg9
(lp3828
sg11
I00
sg12
(lp3829
(S'int'
p3830
S'value'
p3831
g3831
S'target value'
p3832
I0
I0
I01
tp3833
a(S'bool'
p3834
S'invert'
p3835
g3835
S'give 1.0 to values not equal to the target'
p3836
I0
I0
I01
tp3837
a(S'bool'
p3838
S'zeroBased'
p3839
g3839
S'if true (default) it gives values 0.0 and 1.0; else -1.0 and 1.0, 0.0 for undefined'
p3840
I0
I0
I01
tp3841
ag493
asbsS'TDomainDiscretization'
p3842
(i__main__
ClassDefinition
p3843
(dp3844
g4
I1
sg5
I01
sg6
g3842
sg7
S'TOrange'
p3845
sg9
(lp3846
sg11
I00
sg12
(lp3847
(S'TDiscretization'
p3848
S'discretization'
p3849
g3849
S'discretization'
p3850
I0
I0
I00
tp3851
asbsS'TColumnAssessor_m'
p3852
(i__main__
ClassDefinition
p3853
(dp3854
g4
I1
sg5
I01
sg6
g3852
sg7
S'TColumnAssessor'
p3855
sg9
(lp3856
sg11
I00
sg12
(lp3857
(S'float'
p3858
g797
g797
S'm for m-estimate'
p3859
I0
I0
I01
tp3860
asbsS'TImputer_defaults'
p3861
(i__main__
ClassDefinition
p3862
(dp3863
g4
I1
sg5
I01
sg6
g3861
sg7
S'TImputer'
p3864
sg9
(lp3865
sg11
I00
sg12
(lp3866
(S'TExample'
p3867
S'defaults'
p3868
g3868
S'values that are to be inserted instead of missing ones'
p3869
I0
I0
I00
tp3870
asbsS'TContingency'
p3871
(i__main__
ClassDefinition
p3872
(dp3873
g4
I1
sg5
I01
sg6
g3871
sg7
S'TOrange'
p3874
sg9
(lp3875
sg11
I00
sg12
(lp3876
g1208
ag1214
ag1218
ag1222
ag1226
asbsS'TStringValue'
p3877
(i__main__
ClassDefinition
p3878
(dp3879
g4
I1
sg5
I01
sg6
g3877
sg7
S'TSomeValue'
p3880
sg9
(lp3881
sg11
I00
sg12
(lp3882
sbsS'TClassifierGenerator'
p3883
(i__main__
ClassDefinition
p3884
(dp3885
g4
I1
sg5
I01
sg6
g3883
sg7
S'TExampleGenerator'
p3886
sg9
(lp3887
sg11
I00
sg12
(lp3888
(S'TClassifier'
p3889
S'classify'
p3890
g3890
S'classifier'
p3891
I0
I0
I00
tp3892
ag137
ag141
asbsS'TRuleDataStoppingCriteria_Python'
p3893
(i__main__
ClassDefinition
p3894
(dp3895
g4
I1
sg5
I01
sg6
g3893
sg7
S'TRuleDataStoppingCriteria'
p3896
sg9
(lp3897
sg11
I00
sg12
(lp3898
sbsS'TTreeDescender_UnknownToCommonSelector'
p3899
(i__main__
ClassDefinition
p3900
(dp3901
g4
I1
sg5
I01
sg6
g3899
sg7
g1079
sg9
(lp3902
sg11
I0
sg12
(lp3903
sbsS'THierarchicalCluster'
p3904
(i__main__
ClassDefinition
p3905
(dp3906
g4
I1
sg5
I01
sg6
g3904
sg7
S'TOrange'
p3907
sg9
(lp3908
sg11
I00
sg12
(lp3909
(S'THierarchicalClusterList'
p3910
S'branches'
p3911
g3911
S'subclusters'
p3912
I0
I0
I00
tp3913
a(S'float'
p3914
S'height'
p3915
g3915
S'height'
p3916
I0
I0
I01
tp3917
a(S'TIntList'
p3918
S'mapping'
p3919
g3919
S'indices to the list of all elements in the clustering'
p3920
I0
I0
I00
tp3921
a(S'int'
p3922
S'first'
p3923
g3923
S"the index into 'elements' to the first element of the cluster"
p3924
I0
I0
I01
tp3925
a(S'int'
p3926
S'last'
p3927
g3927
S"the index into 'elements' to the one after the last element of the cluster"
p3928
I0
I0
I01
tp3929
asbsS'TPreprocessIM'
p3930
(i__main__
ClassDefinition
p3931
(dp3932
g4
I1
sg5
I01
sg6
g3930
sg7
S'TOrange'
p3933
sg9
(lp3934
sg11
I01
sg12
(lp3935
sbsS'TRuleEvaluator_Laplace'
p3936
(i__main__
ClassDefinition
p3937
(dp3938
g4
I1
sg5
I01
sg6
g3936
sg7
S'TRuleEvaluator'
p3939
sg9
(lp3940
sg11
I00
sg12
(lp3941
sbsS'TColumnAssessor_N'
p3942
(i__main__
ClassDefinition
p3943
(dp3944
g4
I1
sg5
I01
sg6
g3942
sg7
S'TColumnAssessor'
p3945
sg9
(lp3946
sg11
I00
sg12
(lp3947
sbsS'TPreprocessor_dropMissing'
p3948
(i__main__
ClassDefinition
p3949
(dp3950
g4
I1
sg5
I01
sg6
g3948
sg7
S'TPreprocessor'
p3951
sg9
(lp3952
sg11
I00
sg12
(lp3953
sbsS'TFeatureByMinComplexity'
p3954
(i__main__
ClassDefinition
p3955
(dp3956
g4
I1
sg5
I01
sg6
g3954
sg7
S'TFeatureInducer'
p3957
sg9
(lp3958
sg11
I00
sg12
(lp3959
(S'TColorIG'
p3960
S'colorIG'
p3961
g3961
S'graph coloring algorithm'
p3962
I0
I0
I00
tp3963
a(S'int'
p3964
S'completion'
p3965
g3965
S'decides how to determine the class for points not covered by any cluster'
p3966
I0
I0
I01
tp3967
asbsS'TExample'
p3968
(i__main__
ClassDefinition
p3969
(dp3970
g4
I1
sg5
I01
sg6
g3968
sg7
S'TOrange'
p3971
sg9
(lp3972
sg11
I00
sg12
(lp3973
g2063
asbsS'TFixedDiscretization'
p3974
(i__main__
ClassDefinition
p3975
(dp3976
g4
I1
sg5
I01
sg6
g3974
sg7
S'TDiscretization'
p3977
sg9
(lp3978
sg11
I00
sg12
(lp3979
(S'TFloatList'
p3980
S'points'
p3981
g3981
S'cut-off points'
p3982
I0
I0
I00
tp3983
asbsS'TDomainContingency'
p3984
(i__main__
ClassDefinition
p3985
(dp3986
g4
I1
sg5
I01
sg6
g3984
sg7
g1364
sg9
(lp3987
sg11
I00
sg12
(lp3988
(S'TDistribution'
p3989
S'classes'
p3990
g3990
S'distribution of class values'
p3991
I01
I0
I00
tp3992
a(S'bool'
p3993
S'classIsOuter'
p3994
g3994
S'tells whether the class is the outer variable'
p3995
I01
I0
I01
tp3996
asbsS'TPreprocessor_addGaussianClassNoise'
p3997
(i__main__
ClassDefinition
p3998
(dp3999
g4
I1
sg5
I01
sg6
g3997
sg7
S'TPreprocessor'
p4000
sg9
(lp4001
sg11
I00
sg12
(lp4002
(S'float'
p4003
S'deviation'
p4004
g4004
S'class deviation'
p4005
I0
I0
I01
tp4006
a(S'TRandomGenerator'
p4007
S'randomGenerator'
p4008
g4008
S'random number generator'
p4009
I0
I0
I00
tp4010
asbsS'TRuleDataStoppingCriteria'
p4011
(i__main__
ClassDefinition
p4012
(dp4013
g4
I1
sg5
I01
sg6
g4011
sg7
S'TOrange'
p4014
sg9
(lp4015
sg11
I01
sg12
(lp4016
sbsS'TPreprocessor_filter'
p4017
(i__main__
ClassDefinition
p4018
(dp4019
g4
I1
sg5
I01
sg6
g4017
sg7
S'TPreprocessor'
p4020
sg9
(lp4021
sg11
I00
sg12
(lp4022
(S'TFilter'
p4023
S'filter'
p4024
g4024
S'filter'
p4025
I0
I0
I00
tp4026
asbsS'TExampleDistBySorting'
p4027
(i__main__
ClassDefinition
p4028
(dp4029
g4
I1
sg5
I01
sg6
g4027
sg7
S'TExampleDistConstructor'
p4030
sg9
(lp4031
sg11
I00
sg12
(lp4032
sbsS'TGraphAsMatrix'
p4033
(i__main__
ClassDefinition
p4034
(dp4035
g4
I1
sg5
I01
sg6
g4033
sg7
S'TGraph'
p4036
sg9
(lp4037
sg11
I00
sg12
(lp4038
g1043
ag1047
ag1051
asbsS'TLWRClassifier'
p4039
(i__main__
ClassDefinition
p4040
(dp4041
g4
I1
sg5
I01
sg6
g4039
sg7
S'TClassifierFD'
p4042
sg9
(lp4043
sg11
I00
sg12
(lp4044
(S'TFindNearest'
p4045
S'findNearest'
p4046
g4046
S'object that find nearest neighbours'
p4047
I0
I0
I00
tp4048
a(S'TLinRegLearner'
p4049
S'linRegLearner'
p4050
g4050
S'learner the performs local linear regression'
p4051
I0
I0
I00
tp4052
a(S'float'
p4053
g793
g793
S'number of neighbours'
p4054
I0
I0
I01
tp4055
a(S'bool'
p4056
S'rankWeight'
p4057
g4057
S'use ranks instead of distances'
p4058
I0
I0
I01
tp4059
a(S'int'
p4060
S'weightID'
p4061
g4061
S"weights of examples stored in 'findNearest'"
p4062
I0
I0
I01
tp4063
ag205
ag83
ag87
asbsS'TValueFilter_discrete'
p4064
(i__main__
ClassDefinition
p4065
(dp4066
g4
I1
sg5
I01
sg6
g4064
sg7
S'TValueFilter'
p4067
sg9
(lp4068
sg11
I00
sg12
(lp4069
(S'TValueList'
p4070
S'values'
p4071
g4071
S'accepted values'
p4072
I0
I0
I00
tp4073
ag665
ag669
asbsS'TComputeDomainContingency'
p4074
(i__main__
ClassDefinition
p4075
(dp4076
g4
I1
sg5
I01
sg6
g4074
sg7
S'TOrange'
p4077
sg9
(lp4078
sg11
I00
sg12
(lp4079
g25
asbsS'TAssociationRulesInducer'
p4080
(i__main__
ClassDefinition
p4081
(dp4082
g4
I1
sg5
I01
sg6
g4080
sg7
S'TOrange'
p4083
sg9
(lp4084
sg11
I00
sg12
(lp4085
(S'int'
p4086
S'maxItemSets'
p4087
g4087
S'maximal number of itemsets (increase if you want)'
p4088
I0
I0
I01
tp4089
a(S'float'
p4090
S'confidence'
p4091
g4091
S'required confidence'
p4092
I0
I0
I01
tp4093
a(S'float'
p4094
S'support'
p4095
g4095
S'required support'
p4096
I0
I0
I01
tp4097
a(S'bool'
p4098
S'classificationRules'
p4099
g4099
S'if true, rules will have the class and only the class attribute on the right-hand side'
p4100
I0
I0
I01
tp4101
asbsS'TTreeStopCriteria'
p4102
(i__main__
ClassDefinition
p4103
(dp4104
g4
I1
sg5
I01
sg6
g4102
sg7
S'TOrange'
p4105
sg9
(lp4106
sg11
I00
sg12
(lp4107
sbsS'TPreprocessor_addMissingClasses'
p4108
(i__main__
ClassDefinition
p4109
(dp4110
g4
I1
sg5
I01
sg6
g4108
sg7
S'TPreprocessor'
p4111
sg9
(lp4112
sg11
I00
sg12
(lp4113
(S'float'
p4114
S'proportion'
p4115
g4115
S'proportion of removed class values'
p4116
I0
I0
I01
tp4117
a(S'int'
p4118
S'specialType'
p4119
g4119
S'special value type (1=DC, 2=DK)'
p4120
I0
I0
I01
tp4121
a(S'TRandomGenerator'
p4122
S'randomGenerator'
p4123
g4123
S'random number generator'
p4124
I0
I0
I00
tp4125
asbsS'TLookupLearner'
p4126
(i__main__
ClassDefinition
p4127
(dp4128
g4
I1
sg5
I01
sg6
g4126
sg7
S'TLearner'
p4129
sg9
(lp4130
sg11
I00
sg12
(lp4131
(S'TLearner'
p4132
S'learnerForUnknown'
p4133
g4133
S'a learner for classifying cases not found in the table'
p4134
I0
I0
I00
tp4135
a(S'bool'
p4136
S'allowFastLookups'
p4137
g4137
S'if true, it constructs LookupClassifiers for <=3 attributes'
p4138
I0
I0
I01
tp4139
a(S'int'
p4140
S'unknownsHandling'
p4141
g4141
S'0 omit examples with unknowns, 1 distribute them, 2 keep them in table'
p4142
I0
I0
I01
tp4143
ag97
asbsS'TBasketExampleGenerator'
p4144
(i__main__
ClassDefinition
p4145
(dp4146
g4
I1
sg5
I01
sg6
g4144
sg7
S'TFileExampleGenerator'
p4147
sg9
(lp4148
sg11
I00
sg12
(lp4149
(S'bool'
p4150
S'dontStore'
p4151
g4151
S'disables items storing'
p4152
I0
I0
I01
tp4153
a(S'bool'
p4154
S'dontCheckStored'
p4155
g4155
S'disables items lookup in the global cache'
p4156
I0
I0
I01
tp4157
a(S'TDomain'
p4158
S'sourceDomain'
p4159
g4159
S'domain with items that can be reused'
p4160
I0
I0
I00
tp4161
ag125
ag129
ag133
ag137
ag141
asbsS'TRuleEvaluator_Entropy'
p4162
(i__main__
ClassDefinition
p4163
(dp4164
g4
I1
sg5
I01
sg6
g4162
sg7
S'TRuleEvaluator'
p4165
sg9
(lp4166
sg11
I00
sg12
(lp4167
sbsS'TDistribution'
p4168
(i__main__
ClassDefinition
p4169
(dp4170
g4
I1
sg5
I01
sg6
g4168
sg7
S'TSomeValue'
p4171
sg9
(lp4172
sg11
I01
sg12
(lp4173
g727
ag731
ag735
ag739
ag743
ag747
ag751
ag755
asbsS'TExamplesDistance_DTW'
p4174
(i__main__
ClassDefinition
p4175
(dp4176
g4
I1
sg5
I01
sg6
g4174
sg7
S'TExamplesDistance_Normalized'
p4177
sg9
(lp4178
sg11
I00
sg12
(lp4179
(S'int'
p4180
S'dtwDistance'
p4181
g4181
S'distance measure between individual attributes (default: square of difference)'
p4182
I0
I0
I01
tp4183
ag323
ag327
ag331
ag335
ag339
ag343
ag347
asbsS'TTreeExampleSplitter_UnknownsToRandom'
p4184
(i__main__
ClassDefinition
p4185
(dp4186
g4
I1
sg5
I01
sg6
g4184
sg7
S'TTreeExampleSplitter'
p4187
sg9
(lp4188
sg11
I00
sg12
(lp4189
sbsS'TTreePruner_m'
p4190
(i__main__
ClassDefinition
p4191
(dp4192
g4
I1
sg5
I01
sg6
g4190
sg7
S'TTreePruner'
p4193
sg9
(lp4194
sg11
I00
sg12
(lp4195
(S'float'
p4196
g797
g797
S'm for m-estimate'
p4197
I0
I0
I01
tp4198
asbsS'TImputer'
p4199
(i__main__
ClassDefinition
p4200
(dp4201
g4
I1
sg5
I01
sg6
g4199
sg7
S'TOrange'
p4202
sg9
(lp4203
sg11
I01
sg12
(lp4204
sbsS'TExamplesDistanceConstructor_DTW'
p4205
(i__main__
ClassDefinition
p4206
(dp4207
g4
I1
sg5
I01
sg6
g4205
sg7
S'TExamplesDistanceConstructor_Normalized'
p4208
sg9
(lp4209
sg11
I00
sg12
(lp4210
(S'int'
p4211
S'dtwDistance'
p4212
g4212
S'distance measure between individual attributes (default: square of difference)'
p4213
I0
I0
I01
tp4214
ag1587
ag1591
ag1595
asbsS'TStopIMClusteringByAssessor_n'
p4215
(i__main__
ClassDefinition
p4216
(dp4217
g4
I1
sg5
I01
sg6
g4215
sg7
S'TStopIMClusteringByAssessor'
p4218
sg9
(lp4219
sg11
I00
sg12
(lp4220
(S'int'
p4221
g1318
g1318
S'number of clusters'
p4222
I0
I0
I01
tp4223
asbsS'TRandomGenerator'
p4224
(i__main__
ClassDefinition
p4225
(dp4226
g4
I1
sg5
I01
sg6
g4224
sg7
S'TOrange'
p4227
sg9
(lp4228
sg11
I00
sg12
(lp4229
(S'int'
p4230
S'initseed'
p4231
g4231
S'initial random seed'
p4232
I0
I0
I01
tp4233
a(S'int'
p4234
S'uses'
p4235
g4235
S'#times a number was returned'
p4236
I0
I0
I01
tp4237
asbsS'TThresholdCA'
p4238
(i__main__
ClassDefinition
p4239
(dp4240
g4
I1
sg5
I01
sg6
g4238
sg7
S'TOrange'
p4241
sg9
(lp4242
sg11
I00
sg12
(lp4243
sbsS'TPreprocessor_imputeByLearner'
p4244
(i__main__
ClassDefinition
p4245
(dp4246
g4
I1
sg5
I01
sg6
g4244
sg7
S'TPreprocessor'
p4247
sg9
(lp4248
sg11
I00
sg12
(lp4249
(S'TLearner'
p4250
S'learner'
p4251
g4251
S'learner used for inducing a model for imputation'
p4252
I0
I0
I00
tp4253
asbsS'TRuleBeamRefiner_Python'
p4254
(i__main__
ClassDefinition
p4255
(dp4256
g4
I1
sg5
I01
sg6
g4254
sg7
S'TRuleBeamRefiner'
p4257
sg9
(lp4258
sg11
I00
sg12
(lp4259
sbsS'TClassifierFromVarFD'
p4260
(i__main__
ClassDefinition
p4261
(dp4262
g4
I1
sg5
I01
sg6
g4260
sg7
S'TClassifierFD'
p4263
sg9
(lp4264
sg11
I00
sg12
(lp4265
(S'int'
p4266
S'position'
p4267
g4267
S'position of the attribute in domain'
p4268
I0
I0
I01
tp4269
a(S'TTransformValue'
p4270
S'transformer'
p4271
g4271
S'transformer'
p4272
I0
I0
I00
tp4273
a(S'TDistribution'
p4274
S'distributionForUnknown'
p4275
g4275
S'distribution for unknown value'
p4276
I0
I0
I00
tp4277
a(S'bool'
p4278
S'transformUnknowns'
p4279
g4279
S'if false (default), unknowns stay unknown or are changed into distribution if given'
p4280
I0
I0
I01
tp4281
ag205
ag83
ag87
asbsS'TImputer_model'
p4282
(i__main__
ClassDefinition
p4283
(dp4284
g4
I1
sg5
I01
sg6
g4282
sg7
S'TImputer'
p4285
sg9
(lp4286
sg11
I00
sg12
(lp4287
(S'TClassifierList'
p4288
S'models'
p4289
g4289
S'classifiers'
p4290
I0
I0
I00
tp4291
asbsS'TLogRegLearner'
p4292
(i__main__
ClassDefinition
p4293
(dp4294
g4
I1
sg5
I01
sg6
g4292
sg7
S'TLearner'
p4295
sg9
(lp4296
sg11
I00
sg12
(lp4297
(S'TLogRegFitter'
p4298
S'fitter'
p4299
g4299
S'fits beta coefficients and calculates beta errors.'
p4300
I0
I0
I00
tp4301
a(S'TImputerConstructor'
p4302
S'imputerConstructor'
p4303
g4303
S'if present, it constructs an imputer for unknown values'
p4304
I0
I0
I00
tp4305
a(S'TDomainContinuizer'
p4306
S'domainContinuizer'
p4307
g4307
S'if present, it constructs continuous domain if needed; if absent, default is used'
p4308
I0
I0
I00
tp4309
ag97
asbsS'TPreprocessor_takeMissing'
p4310
(i__main__
ClassDefinition
p4311
(dp4312
g4
I1
sg5
I01
sg6
g4310
sg7
S'TPreprocessor'
p4313
sg9
(lp4314
sg11
I00
sg12
(lp4315
sbsS'TMeasureAttribute_IM'
p4316
(i__main__
ClassDefinition
p4317
(dp4318
g4
I1
sg5
I01
sg6
g4316
sg7
S'TMeasureAttribute'
p4319
sg9
(lp4320
sg11
I00
sg12
(lp4321
(S'TIMConstructor'
p4322
S'IMconstructor'
p4323
g4323
S'incompatibility matrix constructor'
p4324
I0
I0
I00
tp4325
a(S'TColumnAssessor'
p4326
S'columnAssessor'
p4327
g4327
S'column quality assessor'
p4328
I0
I0
I00
tp4329
ag559
ag563
ag567
asbsS'TFeatureByDistributions'
p4330
(i__main__
ClassDefinition
p4331
(dp4332
g4
I1
sg5
I01
sg6
g4330
sg7
S'TFeatureInducer'
p4333
sg9
(lp4334
sg11
I00
sg12
(lp4335
(S'TClustersFromDistributions'
p4336
S'clustersFromDistributions'
p4337
g4337
S'clustering algorithm'
p4338
I0
I0
I00
tp4339
a(S'int'
p4340
S'completion'
p4341
g4341
S'decides how to determine the class for points not covered by any cluster'
p4342
I0
I0
I01
tp4343
asbsS'TCostMatrix'
p4344
(i__main__
ClassDefinition
p4345
(dp4346
g4
I1
sg5
I01
sg6
g4344
sg7
S'TOrange'
p4347
sg9
(lp4348
sg11
I00
sg12
(lp4349
(S'TVariable'
p4350
S'classVar'
p4351
g4351
S'attribute to which the matrix applies'
p4352
I0
I0
I00
tp4353
asbsS'TStopIMClusteringByAssessor_noProfit'
p4354
(i__main__
ClassDefinition
p4355
(dp4356
g4
I1
sg5
I01
sg6
g4354
sg7
S'TStopIMClusteringByAssessor'
p4357
sg9
(lp4358
sg11
I00
sg12
(lp4359
(S'float'
p4360
S'minProfitProportion'
p4361
g4361
S'minimal allowable profit proportion'
p4362
I0
I0
I01
tp4363
asbsS'TRemoveUnusedValues'
p4364
(i__main__
ClassDefinition
p4365
(dp4366
g4
I1
sg5
I01
sg6
g4364
sg7
S'TOrange'
p4367
sg9
(lp4368
sg11
I00
sg12
(lp4369
(S'bool'
p4370
S'removeOneValued'
p4371
g4371
S'if true (default is false), one valued attributes are also removed'
p4372
I0
I0
I01
tp4373
asbsS'TExamplesDistance_Normalized'
p4374
(i__main__
ClassDefinition
p4375
(dp4376
g4
I1
sg5
I01
sg6
g4374
sg7
S'TExamplesDistance'
p4377
sg9
(lp4378
sg11
I01
sg12
(lp4379
g323
ag327
ag331
ag335
ag339
ag343
ag347
asbsS'TExamplesDistance_Euclidean'
p4380
(i__main__
ClassDefinition
p4381
(dp4382
g4
I1
sg5
I01
sg6
g4380
sg7
S'TExamplesDistance_Normalized'
p4383
sg9
(lp4384
sg11
I00
sg12
(lp4385
(S'TDomainDistributions'
p4386
S'distributions'
p4387
g4387
S'distributions (of discrete attributes only)'
p4388
I0
I0
I00
tp4389
a(S'TAttributedFloatList'
p4390
S'bothSpecialDist'
p4391
g4391
S'distances between discrete attributes if both values are unknown'
p4392
I0
I0
I00
tp4393
ag323
ag327
ag331
ag335
ag339
ag343
ag347
asbsS'TPreprocessor_take'
p4394
(i__main__
ClassDefinition
p4395
(dp4396
g4
I1
sg5
I01
sg6
g4394
sg7
S'TPreprocessor'
p4397
sg9
(lp4398
sg11
I00
sg12
(lp4399
(S'TVariableFilterMap'
p4400
S'values'
p4401
g4401
S'variable-filter pairs'
p4402
I0
I0
I00
tp4403
a(S'bool'
p4404
S'conjunction'
p4405
g4405
S'decides whether to take conjunction or disjunction of values'
p4406
I0
I0
I01
tp4407
asbsS'TIMConstructor'
p4408
(i__main__
ClassDefinition
p4409
(dp4410
g4
I1
sg5
I01
sg6
g4408
sg7
S'TOrange'
p4411
sg9
(lp4412
sg11
I01
sg12
(lp4413
g827
asbsS'TRuleFinder_Python'
p4414
(i__main__
ClassDefinition
p4415
(dp4416
g4
I1
sg5
I01
sg6
g4414
sg7
S'TRuleFinder'
p4417
sg9
(lp4418
sg11
I00
sg12
(lp4419
g2997
ag3000
asbsS'TTabDelimExampleGenerator'
p4420
(i__main__
ClassDefinition
p4421
(dp4422
g4
I1
sg5
I01
sg6
g4420
sg7
S'TFileExampleGenerator'
p4423
sg9
(lp4424
sg11
I00
sg12
(lp4425
(S'TIntList'
p4426
S'attributeTypes'
p4427
g4427
S'types of attributes (-1 normal, 0 skip, <-1 = meta ID)'
p4428
I0
I0
I00
tp4429
a(S'int'
p4430
S'classPos'
p4431
g4431
S'position of the class attribute'
p4432
I0
I0
I01
tp4433
a(S'int'
p4434
S'headerLines'
p4435
g4435
S'number of header lines (3 for .tab, 1 for .txt)'
p4436
I0
I0
I01
tp4437
a(S'bool'
p4438
S'csv'
p4439
g4439
S"also allow ',' as a separator"
p4440
I0
I0
I01
tp4441
ag125
ag129
ag133
ag137
ag141
asbsS'TRandomClassifier'
p4442
(i__main__
ClassDefinition
p4443
(dp4444
g4
I1
sg5
I01
sg6
g4442
sg7
S'TClassifier'
p4445
sg9
(lp4446
sg11
I00
sg12
(lp4447
(S'TDistribution'
p4448
S'probabilities'
p4449
g4449
S'probabilities of predictions'
p4450
I0
I0
I00
tp4451
ag83
ag87
asbsS'TkNNLearner'
p4452
(i__main__
ClassDefinition
p4453
(dp4454
g4
I1
sg5
I01
sg6
g4452
sg7
S'TLearner'
p4455
sg9
(lp4456
sg11
I00
sg12
(lp4457
(S'float'
p4458
g793
g793
S'number of neighbours'
p4459
I0
I0
I01
tp4460
a(S'bool'
p4461
S'rankWeight'
p4462
g4462
S'enable weighting by ranks'
p4463
I0
I0
I01
tp4464
a(S'TExamplesDistanceConstructor'
p4465
S'distanceConstructor'
p4466
g4466
S'metrics'
p4467
I0
I0
I00
tp4468
ag97
asbsS'TTreeDescender_UnknownToNode'
p4469
(i__main__
ClassDefinition
p4470
(dp4471
g4
I1
sg5
I01
sg6
g4469
sg7
g1079
sg9
(lp4472
sg11
I0
sg12
(lp4473
sbsS'TDistributionAssessor_mf'
p4474
(i__main__
ClassDefinition
p4475
(dp4476
g4
I1
sg5
I01
sg6
g4474
sg7
S'TDistributionAssessor'
p4477
sg9
(lp4478
sg11
I00
sg12
(lp4479
(S'float'
p4480
g797
g797
S'm for m-estimate'
p4481
I0
I0
I01
tp4482
asbsS'TExampleClusters'
p4483
(i__main__
ClassDefinition
p4484
(dp4485
g4
I1
sg5
I01
sg6
g4483
sg7
S'TGeneralExampleClustering'
p4486
sg9
(lp4487
sg11
I00
sg12
(lp4488
(S'TExampleCluster'
p4489
S'root'
p4490
g4490
S'root of cluster hierarchy'
p4491
I0
I0
I00
tp4492
a(S'float'
p4493
S'quality'
p4494
g4494
S"'quality' of clustering"
p4495
I0
I0
I01
tp4496
asbsS'TCostLearner'
p4497
(i__main__
ClassDefinition
p4498
(dp4499
g4
I1
sg5
I01
sg6
g4497
sg7
S'TMajorityLearner'
p4500
sg9
(lp4501
sg11
I00
sg12
(lp4502
(S'TCostMatrix'
p4503
S'cost'
p4504
g4504
S'cost matrix'
p4505
I0
I0
I00
tp4506
ag515
ag519
ag97
asbsS'TEFMDataDescription'
p4507
(i__main__
ClassDefinition
p4508
(dp4509
g4
I1
sg5
I01
sg6
g4507
sg7
S'TOrange'
p4510
sg9
(lp4511
sg11
I00
sg12
(lp4512
(S'TDomain'
p4513
S'domain'
p4514
g4514
S'domain'
p4515
I01
I0
I00
tp4516
asbsS'TClassifierFD'
p4517
(i__main__
ClassDefinition
p4518
(dp4519
g4
I1
sg5
I01
sg6
g4517
sg7
S'TClassifier'
p4520
sg9
(lp4521
sg11
I00
sg12
(lp4522
g205
ag83
ag87
asbsS'TPreprocessor_drop'
p4523
(i__main__
ClassDefinition
p4524
(dp4525
g4
I1
sg5
I01
sg6
g4523
sg7
S'TPreprocessor'
p4526
sg9
(lp4527
sg11
I00
sg12
(lp4528
(S'TVariableFilterMap'
p4529
S'values'
p4530
g4530
S'variable-filter pairs'
p4531
I0
I0
I00
tp4532
a(S'bool'
p4533
S'conjunction'
p4534
g4534
S'decides whether to take conjunction or disjunction of values'
p4535
I0
I0
I01
tp4536
asbsS'TTreeDescender_UnknownToCommonBranch'
p4537
(i__main__
ClassDefinition
p4538
(dp4539
g4
I1
sg5
I01
sg6
g4537
sg7
g1079
sg9
(lp4540
sg11
I0
sg12
(lp4541
sbsS'TPreprocessor_addNoise'
p4542
(i__main__
ClassDefinition
p4543
(dp4544
g4
I1
sg5
I01
sg6
g4542
sg7
S'TPreprocessor'
p4545
sg9
(lp4546
sg11
I00
sg12
(lp4547
(S'TVariableFloatMap'
p4548
S'proportions'
p4549
g4549
S'proportion of changed values for individual attributes'
p4550
I0
I0
I00
tp4551
a(S'float'
p4552
S'defaultProportion'
p4553
g4553
S'default proportion of changed values (for attributes not specified above)'
p4554
I0
I0
I01
tp4555
a(S'TRandomGenerator'
p4556
S'randomGenerator'
p4557
g4557
S'random number generator'
p4558
I0
I0
I00
tp4559
asbsS'TStopIMClusteringByAssessor_binary'
p4560
(i__main__
ClassDefinition
p4561
(dp4562
g4
I1
sg5
I01
sg6
g4560
sg7
S'TStopIMClusteringByAssessor'
p4563
sg9
(lp4564
sg11
I00
sg12
(lp4565
sbsS'TColumnAssessor_mf'
p4566
(i__main__
ClassDefinition
p4567
(dp4568
g4
I1
sg5
I01
sg6
g4566
sg7
S'TColumnAssessor'
p4569
sg9
(lp4570
sg11
I00
sg12
(lp4571
(S'float'
p4572
g797
g797
S'm for m-estimate'
p4573
I0
I0
I01
tp4574
asbsS'TExamplesDistanceConstructor'
p4575
(i__main__
ClassDefinition
p4576
(dp4577
g4
I1
sg5
I01
sg6
g4575
sg7
S'TOrange'
p4578
sg9
(lp4579
sg11
I01
sg12
(lp4580
g1595
asbsS'TSubsetsGenerator'
p4581
(i__main__
ClassDefinition
p4582
(dp4583
g4
I1
sg5
I01
sg6
g4581
sg7
S'TOrange'
p4584
sg9
(lp4585
sg11
I01
sg12
(lp4586
g183
asbsS'TPreprocessor_addCensorWeight'
p4587
(i__main__
ClassDefinition
p4588
(dp4589
g4
I1
sg5
I01
sg6
g4587
sg7
S'TPreprocessor'
p4590
sg9
(lp4591
sg11
I00
sg12
(lp4592
(S'TVariable'
p4593
S'outcomeVar'
p4594
g4594
S'outcome variable'
p4595
I0
I0
I00
tp4596
a(S'TVariable'
p4597
S'timeVar'
p4598
g4598
S'time variable'
p4599
I0
I0
I00
tp4600
a(S'TValue'
p4601
S'eventValue'
p4602
g4602
S'event (fail) value'
p4603
I0
I0
I01
tp4604
a(S'int'
p4605
S'method'
p4606
g4606
S'weighting method'
p4607
I0
I0
I01
tp4608
a(S'float'
p4609
S'maxTime'
p4610
g4610
S'maximal time'
p4611
I0
I0
I01
tp4612
a(S'bool'
p4613
S'addComplementary'
p4614
g4614
S'if true (default is false), complementary examples are added for censored examples'
p4615
I0
I0
I01
tp4616
asbsS'TRuleBeamCandidateSelector_Python'
p4617
(i__main__
ClassDefinition
p4618
(dp4619
g4
I1
sg5
I01
sg6
g4617
sg7
S'TRuleBeamCandidateSelector'
p4620
sg9
(lp4621
sg11
I00
sg12
(lp4622
sbsS'TRandomForest'
p4623
(i__main__
ClassDefinition
p4624
(dp4625
g1103
I1
sg1104
I0
sg1105
g4623
sg1106
S'TClassifier'
p4626
sg1108
I00
sg1109
(lp4627
sg1111
(lp4628
(S'TRandomGenerator'
p4629
S'randomGenerator'
p4630
g4630
S'random generator'
p4631
I01
I0
I00
tp4632
ag83
ag87
asbsS'TEntropyDiscretization'
p4633
(i__main__
ClassDefinition
p4634
(dp4635
g4
I1
sg5
I01
sg6
g4633
sg7
S'TDiscretization'
p4636
sg9
(lp4637
sg11
I00
sg12
(lp4638
(S'int'
p4639
S'maxNumberOfIntervals'
p4640
g4640
S'maximal number of intervals; default = 0 (no limits)'
p4641
I0
I0
I01
tp4642
a(S'bool'
p4643
S'forceAttribute'
p4644
g4644
S'minimal number of intervals; default = 0 (no limits)'
p4645
I0
I0
I01
tp4646
asbsS'TIMBySorting'
p4647
(i__main__
ClassDefinition
p4648
(dp4649
g4
I1
sg5
I01
sg6
g4647
sg7
S'TIMConstructor'
p4650
sg9
(lp4651
sg11
I00
sg12
(lp4652
g827
asbsS'TImputerConstructor_asValue'
p4653
(i__main__
ClassDefinition
p4654
(dp4655
g4
I1
sg5
I01
sg6
g4653
sg7
S'TImputerConstructor'
p4656
sg9
(lp4657
sg11
I00
sg12
(lp4658
g151
asbsS'TGaussianDistribution'
p4659
(i__main__
ClassDefinition
p4660
(dp4661
g4
I1
sg5
I01
sg6
g4659
sg7
S'TDistribution'
p4662
sg9
(lp4663
sg11
I00
sg12
(lp4664
(S'float'
p4665
S'mean'
p4666
g4666
S'mu'
p4667
I0
I0
I01
tp4668
a(S'float'
p4669
S'sigma'
p4670
g4670
S'sigma'
p4671
I0
I0
I01
tp4672
ag727
ag731
ag735
ag739
ag743
ag747
ag751
ag755
asbsS'TExampleDistVector'
p4673
(i__main__
ClassDefinition
p4674
(dp4675
g4
I1
sg5
I01
sg6
g4673
sg7
S'TOrange'
p4676
sg9
(lp4677
sg11
I00
sg12
(lp4678
sbsS'TRuleClassifier'
p4679
(i__main__
ClassDefinition
p4680
(dp4681
g4
I1
sg5
I01
sg6
g4679
sg7
S'TClassifier'
p4682
sg9
(lp4683
sg11
I01
sg12
(lp4684
g1433
ag1436
ag83
ag87
asbsS'TRuleBeamFilter_Width'
p4685
(i__main__
ClassDefinition
p4686
(dp4687
g4
I1
sg5
I01
sg6
g4685
sg7
S'TRuleBeamFilter'
p4688
sg9
(lp4689
sg11
I00
sg12
(lp4690
(S'int'
p4691
S'width'
p4692
g4692
g1119
I0
I0
I01
tp4693
asbsS'TProbabilityEstimator'
p4694
(i__main__
ClassDefinition
p4695
(dp4696
g4
I1
sg5
I01
sg6
g4694
sg7
S'TOrange'
p4697
sg9
(lp4698
sg11
I01
sg12
(lp4699
g1071
ag1075
asbsS'TIMClustering'
p4700
(i__main__
ClassDefinition
p4701
(dp4702
g4
I1
sg5
I01
sg6
g4700
sg7
S'TOrange'
p4703
sg9
(lp4704
sg11
I00
sg12
(lp4705
(S'TIM'
p4706
S'im'
p4707
g4707
S'incompatibilty matrix'
p4708
I0
I0
I00
tp4709
a(S'TIntList'
p4710
S'clusters'
p4711
g4711
S'cluster index for each matrix column'
p4712
I0
I0
I00
tp4713
a(S'int'
p4714
S'maxCluster'
p4715
g4715
S'the highest cluster index'
p4716
I0
I0
I01
tp4717
a(S'float'
p4718
S'quality'
p4719
g4719
S'cluster quality'
p4720
I0
I0
I01
tp4721
asbsS'TImputerConstructor_model'
p4722
(i__main__
ClassDefinition
p4723
(dp4724
g4
I1
sg5
I01
sg6
g4722
sg7
S'TImputerConstructor'
p4725
sg9
(lp4726
sg11
I00
sg12
(lp4727
(S'TLearner'
p4728
S'learnerDiscrete'
p4729
g4729
S'learner for discrete attributes'
p4730
I0
I0
I00
tp4731
a(S'TLearner'
p4732
S'learnerContinuous'
p4733
g4733
S'learner for continuous attributes'
p4734
I0
I0
I00
tp4735
a(S'bool'
p4736
S'useClass'
p4737
g4737
S'tells whether to use class value in imputation (default: false)'
p4738
I0
I0
I01
tp4739
ag151
asbsS'TFindNearestConstructor_BruteForce'
p4740
(i__main__
ClassDefinition
p4741
(dp4742
g4
I1
sg5
I01
sg6
g4740
sg7
S'TFindNearestConstructor'
p4743
sg9
(lp4744
sg11
I00
sg12
(lp4745
g1416
ag1420
asbsS'TImputerConstructor'
p4746
(i__main__
ClassDefinition
p4747
(dp4748
g4
I1
sg5
I01
sg6
g4746
sg7
S'TOrange'
p4749
sg9
(lp4750
sg11
I01
sg12
(lp4751
g151
asbsS'TPreprocessor'
p4752
(i__main__
ClassDefinition
p4753
(dp4754
g4
I1
sg5
I01
sg6
g4752
sg7
S'TOrange'
p4755
sg9
(lp4756
sg11
I01
sg12
(lp4757
sbsS'TMakeRandomIndices'
p4758
(i__main__
ClassDefinition
p4759
(dp4760
g4
I1
sg5
I01
sg6
g4758
sg7
S'TOrange'
p4761
sg9
(lp4762
sg11
I00
sg12
(lp4763
g455
ag459
ag463
asbsS'TDiscretizer'
p4764
(i__main__
ClassDefinition
p4765
(dp4766
g4
I1
sg5
I01
sg6
g4764
sg7
S'TTransformValue'
p4767
sg9
(lp4768
sg11
I01
sg12
(lp4769
g493
asbsS'TIMByRowsPreprocessor'
p4770
(i__main__
ClassDefinition
p4771
(dp4772
g4
I1
sg5
I01
sg6
g4770
sg7
S'TOrange'
p4773
sg9
(lp4774
sg11
I01
sg12
(lp4775
sbsS'TTreeStopCriteria_common'
p4776
(i__main__
ClassDefinition
p4777
(dp4778
g4
I1
sg5
I01
sg6
g4776
sg7
S'TTreeStopCriteria'
p4779
sg9
(lp4780
sg11
I00
sg12
(lp4781
(S'float'
p4782
S'maxMajority'
p4783
g4783
S'a maximal proportion of majority class for division to continue'
p4784
I0
I0
I01
tp4785
a(S'float'
p4786
S'minExamples'
p4787
g4787
S'a minimal number of examples for division to continue'
p4788
I0
I0
I01
tp4789
asbsS'TRetisExampleGenerator'
p4790
(i__main__
ClassDefinition
p4791
(dp4792
g4
I1
sg5
I01
sg6
g4790
sg7
S'TFileExampleGenerator'
p4793
sg9
(lp4794
sg11
I00
sg12
(lp4795
g125
ag129
ag133
ag137
ag141
asbsS'TTreeStopCriteria_Python'
p4796
(i__main__
ClassDefinition
p4797
(dp4798
g4
I1
sg5
I01
sg6
g4796
sg7
S'TTreeStopCriteria'
p4799
sg9
(lp4800
sg11
I00
sg12
(lp4801
sbsS'TGeneralExampleClustering'
p4802
(i__main__
ClassDefinition
p4803
(dp4804
g4
I1
sg5
I01
sg6
g4802
sg7
S'TOrange'
p4805
sg9
(lp4806
sg11
I01
sg12
(lp4807
sbsS'TIGByIM'
p4808
(i__main__
ClassDefinition
p4809
(dp4810
g4
I1
sg5
I01
sg6
g4808
sg7
S'TIGConstructor'
p4811
sg9
(lp4812
sg11
I00
sg12
(lp4813
(S'TIMConstructor'
p4814
S'IMconstructor'
p4815
g4815
S'IM constructor'
p4816
I0
I0
I00
tp4817
asbs.