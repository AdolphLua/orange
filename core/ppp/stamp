(dp0
S'TComputeDomainContingency_ImputeWithClassifier'
p1
(i__main__
ClassDefinition
p2
(dp3
S'extended'
p4
I1
sS'imported'
p5
I01
sS'name'
p6
g1
sS'parent'
p7
S'TComputeDomainContingency'
p8
sS'components'
p9
(lp10
sS'abstract'
p11
I00
sS'properties'
p12
(lp13
(S'TLearner'
p14
S'learnerForDiscrete'
p15
g15
S'constructs a classifier for imputation of discrete values'
p16
I0
I0
I00
tp17
a(S'TLearner'
p18
S'learnerForContinuous'
p19
g19
S'constructs a classifier for imputation of continuous values'
p20
I0
I0
I00
tp21
a(S'bool'
p22
S'classIsOuter'
p23
g23
S'tells whether the class is the outer variable in contingencies'
p24
I0
I0
I01
tp25
asbsS'TRuleDataStoppingCriteria_NoPositives'
p26
(i__main__
ClassDefinition
p27
(dp28
g4
I1
sg5
I01
sg6
g26
sg7
S'TRuleDataStoppingCriteria'
p29
sg9
(lp30
sg11
I00
sg12
(lp31
sbsS'TExampleCluster'
p32
(i__main__
ClassDefinition
p33
(dp34
g4
I1
sg5
I01
sg6
g32
sg7
S'TOrange'
p35
sg9
(lp36
sg11
I00
sg12
(lp37
(S'TExampleCluster'
p38
S'left'
p39
g39
S"'left' cluster"
p40
I0
I0
I00
tp41
a(S'TExampleCluster'
p42
S'right'
p43
g43
S"'right' cluster"
p44
I0
I0
I00
tp45
a(S'float'
p46
S'distance'
p47
g47
S'distance between the two clusters (not defined for leaves)'
p48
I0
I0
I01
tp49
a(S'TExample'
p50
S'centroid'
p51
g51
S"cluster's centroid (always defined for leaves)"
p52
I0
I0
I00
tp53
asbsS'TClassifierByLookupTableN'
p54
(i__main__
ClassDefinition
p55
(dp56
g4
I1
sg5
I01
sg6
g54
sg7
S'TClassifierByLookupTable'
p57
sg9
(lp58
sg11
I00
sg12
(lp59
(S'TVarList'
p60
S'variables'
p61
g61
S'attributes'
p62
I01
I0
I00
tp63
a(S'TIntList'
p64
S'noOfValues'
p65
g65
S'number of values for each attribute'
p66
I01
I0
I00
tp67
a(S'TEFMDataDescription'
p68
S'dataDescription'
p69
g69
S'data description'
p70
I0
I0
I00
tp71
a(S'TValueList'
p72
S'lookupTable'
p73
g73
S'a list of class values, one for each attribute value'
p74
I01
I0
I00
tp75
a(S'TDistributionList'
p76
S'distributions'
p77
g77
S'a list of class distributions, one for each attribute value'
p78
I01
I0
I00
tp79
a(S'TVariable'
p80
S'classVar'
p81
g81
S'class variable'
p82
I0
I0
I00
tp83
a(S'bool'
p84
S'computesProbabilities'
p85
g85
S'set if classifier computes class probabilities (if not, it assigns 1.0 to the predicted)'
p86
I0
I0
I01
tp87
asbsS'TLearner_Python'
p88
(i__main__
ClassDefinition
p89
(dp90
g4
I1
sg5
I01
sg6
g88
sg7
S'TLearner'
p91
sg9
(lp92
sg11
I00
sg12
(lp93
(S'int'
p94
S'needs'
p95
g95
S'the kind of data that learner needs'
p96
I01
I0
I01
tp97
asbsS'TConditionalProbabilityEstimator_FromDistribution'
p98
(i__main__
ClassDefinition
p99
(dp100
g4
I1
sg5
I01
sg6
g98
sg7
S'TConditionalProbabilityEstimator'
p101
sg9
(lp102
sg11
I00
sg12
(lp103
(S'TContingency'
p104
S'probabilities'
p105
g105
S'Contingency that stores conditional probabilities'
p106
I0
I0
I00
tp107
a(S'bool'
p108
S'supportsDiscrete'
p109
g109
S'can estimate probabilities of discrete attributes'
p110
I01
I0
I01
tp111
a(S'bool'
p112
S'supportsContinuous'
p113
g113
S'can estimate probabilities of continuous attributes'
p114
I01
I0
I01
tp115
asbsS'TAssistantExampleGenerator'
p116
(i__main__
ClassDefinition
p117
(dp118
g4
I1
sg5
I01
sg6
g116
sg7
S'TFileExampleGenerator'
p119
sg9
(lp120
sg11
I00
sg12
(lp121
(S'string'
p122
S'filename'
p123
g123
S'filename'
p124
I0
I0
I01
tp125
a(S'int'
p126
S'startDataPos'
p127
g127
S'starting position of the data in file'
p128
I0
I0
I01
tp129
a(S'int'
p130
S'startDataLine'
p131
g131
S'line in the file where the data starts'
p132
I0
I0
I01
tp133
a(S'TDomain'
p134
S'domain'
p135
g135
S'domain'
p136
I0
I0
I00
tp137
a(S'int'
p138
S'version'
p139
g139
S'unique version identifier'
p140
I01
I0
I01
tp141
asbsS'TImputerConstruct_Python'
p142
(i__main__
ClassDefinition
p143
(dp144
g4
I1
sg5
I01
sg6
g142
sg7
S'TImputerConstructor'
p145
sg9
(lp146
sg11
I00
sg12
(lp147
(S'bool'
p148
S'imputeClass'
p149
g149
S'tells whether to impute the class value (default: true)'
p150
I0
I0
I01
tp151
asbsS'TIMByRowsConstructor'
p152
(i__main__
ClassDefinition
p153
(dp154
g4
I1
sg5
I01
sg6
g152
sg7
S'TOrange'
p155
sg9
(lp156
sg11
I01
sg12
(lp157
sbsS'TSubsetsGenerator_withRestrictions'
p158
(i__main__
ClassDefinition
p159
(dp160
g4
I1
sg5
I01
sg6
g158
sg7
S'TSubsetsGenerator'
p161
sg9
(lp162
sg11
I00
sg12
(lp163
(S'TSubsetsGenerator'
p164
S'subGenerator'
p165
g165
S'subset generator'
p166
I0
I0
I00
tp167
a(S'TVarList'
p168
S'required'
p169
g169
S'set of required attributes'
p170
I0
I0
I00
tp171
a(S'TVarList'
p172
S'forbidden'
p173
g173
S'set of forbidden attributes'
p174
I0
I0
I00
tp175
a(S'TVarListList'
p176
S'forbiddenSubSubsets'
p177
g177
S'set of forbidden subsets (attributes that must not occur together)'
p178
I0
I0
I00
tp179
a(S'TVarList'
p180
S'varList'
p181
g181
S'a set of attributes from which subsets are generated'
p182
I0
I0
I00
tp183
asbsS'TRuleBeamFilter_Python'
p184
(i__main__
ClassDefinition
p185
(dp186
g4
I1
sg5
I01
sg6
g184
sg7
S'TRuleBeamFilter'
p187
sg9
(lp188
sg11
I00
sg12
(lp189
sbsS'TTreeExampleSplitter'
p190
(i__main__
ClassDefinition
p191
(dp192
g4
I1
sg5
I01
sg6
g190
sg7
S'TOrange'
p193
sg9
(lp194
sg11
I01
sg12
(lp195
sbsS'TSVMClassifier'
p196
(i__main__
ClassDefinition
p197
(dp198
g4
I1
sg5
I01
sg6
g196
sg7
S'TClassifier'
p199
sg9
(lp200
sg11
I00
sg12
(lp201
(S'TExampleTable'
p202
S'supportVectors'
p203
g203
S'support vectors'
p204
I0
I0
I00
tp205
a(S'TExampleTable'
p206
S'examples'
p207
g207
S'examples used to train the classifier'
p208
I0
I0
I00
tp209
a(S'TKernelFunc'
p210
S'kernelFunc'
p211
g211
S'custom kernel function'
p212
I0
I0
I00
tp213
ag83
ag87
asbsS'TFilteredGenerator'
p214
(i__main__
ClassDefinition
p215
(dp216
g4
I1
sg5
I01
sg6
g214
sg7
S'TAdapterGenerator'
p217
sg9
(lp218
sg11
I00
sg12
(lp219
(S'TFilter'
p220
S'filter'
p221
g221
S'decides which examples are skipped'
p222
I0
I0
I00
tp223
ag137
ag141
asbsS'TPythonVariable'
p224
(i__main__
ClassDefinition
p225
(dp226
g4
I1
sg5
I01
sg6
g224
sg7
S'TVariable'
p227
sg9
(lp228
sg11
I00
sg12
(lp229
(S'bool'
p230
S'usePickle'
p231
g231
S'tells whether to use pickle for saving to/loading from files'
p232
I0
I0
I01
tp233
a(S'bool'
p234
S'useSomeValue'
p235
g235
S'tells whether the Variable will operate on Value or SomeValue (default)'
p236
I0
I0
I01
tp237
a(S'string'
p238
S'name'
p239
g239
S"variable's name"
p240
I0
I0
I01
tp241
a(S'int'
p242
S'varType'
p243
g243
S'variable type'
p244
I0
I0
I01
tp245
a(S'bool'
p246
S'ordered'
p247
g247
S'variable values are ordered'
p248
I0
I0
I01
tp249
a(S'bool'
p250
S'distributed'
p251
g251
S'variable values are distributions'
p252
I0
I0
I01
tp253
a(S'TRandomGenerator'
p254
S'randomGenerator'
p255
g255
S'random generator for random values (initialized when first needed)'
p256
I0
I0
I00
tp257
a(S'TVariable'
p258
S'sourceVariable'
p259
g259
S'The attribute that this attribute is computed from (when applicable)'
p260
I0
I0
I00
tp261
a(S'TClassifier'
p262
S'getValueFrom'
p263
g263
S'Function to compute the value from values of other variables'
p264
I0
I0
I00
tp265
asbsS'TTreeLearner'
p266
(i__main__
ClassDefinition
p267
(dp268
g4
I1
sg5
I01
sg6
g266
sg7
S'TLearner'
p269
sg9
(lp270
sg11
I00
sg12
(lp271
(S'TTreeSplitConstructor'
p272
S'split'
p273
g273
S'split criterion'
p274
I0
I0
I00
tp275
a(S'TTreeStopCriteria'
p276
S'stop'
p277
g277
S'stop criterion'
p278
I0
I0
I00
tp279
a(S'TComputeDomainContingency'
p280
S'contingencyComputer'
p281
g281
S'computes contingency matrix'
p282
I0
I0
I00
tp283
a(S'TLearner'
p284
S'nodeLearner'
p285
g285
S'node learner'
p286
I0
I0
I00
tp287
a(S'TTreeExampleSplitter'
p288
S'exampleSplitter'
p289
g289
S'splits examples to branches'
p290
I0
I0
I00
tp291
a(S'int'
p292
S'maxDepth'
p293
g293
S'maximal tree depth (0 = root only, -1 = no limit)'
p294
I0
I0
I01
tp295
a(S'bool'
p296
S'storeExamples'
p297
g297
S'if true (default: false), learning examples in nodes are stored'
p298
I0
I0
I01
tp299
a(S'bool'
p300
S'storeDistributions'
p301
g301
S'if true (default), class distributions of learning examples in nodes are stored'
p302
I0
I0
I01
tp303
a(S'bool'
p304
S'storeContingencies'
p305
g305
S'if true (default), contingency matrices for examples are stored'
p306
I0
I0
I01
tp307
a(S'bool'
p308
S'storeNodeClassifier'
p309
g309
S'if true (default), the internal nodes have classifiers; needed for pruning'
p310
I0
I0
I01
tp311
a(S'TTreeDescender'
p312
S'descender'
p313
g313
S'descends down the tree'
p314
I0
I0
I00
tp315
ag97
asbsS'TLearner'
p316
(i__main__
ClassDefinition
p317
(dp318
g4
I1
sg5
I01
sg6
g316
sg7
S'TOrange'
p319
sg9
(lp320
sg11
I00
sg12
(lp321
g97
asbsS'TExamplesDistance_Maximal'
p322
(i__main__
ClassDefinition
p323
(dp324
g4
I1
sg5
I01
sg6
g322
sg7
S'TExamplesDistance_Normalized'
p325
sg9
(lp326
sg11
I00
sg12
(lp327
(S'TAttributedFloatList'
p328
S'normalizers'
p329
g329
S'normalizing factors for attributes'
p330
I0
I0
I00
tp331
a(S'TAttributedFloatList'
p332
S'bases'
p333
g333
S'lowest values for attributes'
p334
I0
I0
I00
tp335
a(S'TAttributedFloatList'
p336
S'averages'
p337
g337
S'average values for continuous attribute values'
p338
I0
I0
I00
tp339
a(S'TAttributedFloatList'
p340
S'variances'
p341
g341
S'variations for continuous attribute values'
p342
I0
I0
I00
tp343
a(S'int'
p344
S'domainVersion'
p345
g345
S'version of domain on which the ranges were computed'
p346
I0
I0
I01
tp347
a(S'bool'
p348
S'normalize'
p349
g349
S'tells whether to normalize distances between attributes'
p350
I0
I0
I01
tp351
a(S'bool'
p352
S'ignoreUnknowns'
p353
g353
S'if true (default: false) unknown values are ignored in computation'
p354
I0
I0
I01
tp355
asbsS'TPreprocessor_discretize'
p356
(i__main__
ClassDefinition
p357
(dp358
g4
I1
sg5
I01
sg6
g356
sg7
S'TPreprocessor'
p359
sg9
(lp360
sg11
I00
sg12
(lp361
(S'TVarList'
p362
S'attributes'
p363
g363
S'attributes to be discretized (all, if not defined or empty)'
p364
I0
I0
I00
tp365
a(S'bool'
p366
S'discretizeClass'
p367
g367
S'also discretize the class attribute (default: false)'
p368
I0
I0
I01
tp369
a(S'TDiscretization'
p370
S'method'
p371
g371
S'discretization method'
p372
I0
I0
I00
tp373
asbsS'TProgressCallback_Python'
p374
(i__main__
ClassDefinition
p375
(dp376
g4
I1
sg5
I01
sg6
g374
sg7
S'TProgressCallback'
p377
sg9
(lp378
sg11
I00
sg12
(lp379
sbsS'TImputeClassifier'
p380
(i__main__
ClassDefinition
p381
(dp382
g4
I1
sg5
I01
sg6
g380
sg7
S'TClassifier'
p383
sg9
(lp384
sg11
I00
sg12
(lp385
(S'TClassifierFromVar'
p386
S'classifierFromVar'
p387
g387
S'ClassifierFromVar that is used to retrieve defined values'
p388
I0
I0
I00
tp389
a(S'TClassifier'
p390
S'imputer'
p391
g391
S'classifier that is used to determine the missing values '
p392
I0
I0
I00
tp393
ag83
ag87
asbsS'TRuleCovererAndRemover'
p394
(i__main__
ClassDefinition
p395
(dp396
g4
I1
sg5
I01
sg6
g394
sg7
S'TOrange'
p397
sg9
(lp398
sg11
I01
sg12
(lp399
sbsS'TPythonValue'
p400
(i__main__
ClassDefinition
p401
(dp402
g4
I1
sg5
I01
sg6
g400
sg7
S'TSomeValue'
p403
sg9
(lp404
sg11
I00
sg12
(lp405
sbsS'TAssociationRulesSparseInducer'
p406
(i__main__
ClassDefinition
p407
(dp408
g4
I1
sg5
I01
sg6
g406
sg7
S'TOrange'
p409
sg9
(lp410
sg11
I00
sg12
(lp411
(S'int'
p412
S'maxItemSets'
p413
g413
S'maximal number of itemsets (increase if you want)'
p414
I0
I0
I01
tp415
a(S'float'
p416
S'confidence'
p417
g417
S'required confidence'
p418
I0
I0
I01
tp419
a(S'float'
p420
S'support'
p421
g421
S'required support'
p422
I0
I0
I01
tp423
asbsS'TFilter_sameExample'
p424
(i__main__
ClassDefinition
p425
(dp426
g4
I1
sg5
I01
sg6
g424
sg7
S'TFilter'
p427
sg9
(lp428
sg11
I00
sg12
(lp429
(S'TExample'
p430
S'example'
p431
g431
S'example with which examples are compared'
p432
I0
I0
I00
tp433
a(S'bool'
p434
S'negate'
p435
g435
S'if true, filter output should be negated.'
p436
I0
I0
I01
tp437
a(S'TDomain'
p438
S'domain'
p439
g439
S'domain to which the examples are converted (if needed)'
p440
I0
I0
I00
tp441
asbsS'TRuleClassifierConstructor'
p442
(i__main__
ClassDefinition
p443
(dp444
g4
I1
sg5
I01
sg6
g442
sg7
S'TOrange'
p445
sg9
(lp446
sg11
I01
sg12
(lp447
sbsS'TKaplanMeier'
p448
(i__main__
ClassDefinition
p449
(dp450
g4
I1
sg5
I01
sg6
g448
sg7
S'TOrange'
p451
sg9
(lp452
sg11
I00
sg12
(lp453
sbsS'TMakeRandomIndicesMultiple'
p454
(i__main__
ClassDefinition
p455
(dp456
g4
I1
sg5
I01
sg6
g454
sg7
S'TMakeRandomIndices'
p457
sg9
(lp458
sg11
I00
sg12
(lp459
(S'int'
p460
S'stratified'
p461
g461
S'requests stratified distributions'
p462
I0
I0
I01
tp463
a(S'int'
p464
S'randseed'
p465
g465
S'a seed for random generator'
p466
I0
I0
I01
tp467
a(S'TRandomGenerator'
p468
S'randomGenerator'
p469
g469
S'a random generator'
p470
I0
I0
I00
tp471
asbsS'TLearnerFD'
p472
(i__main__
ClassDefinition
p473
(dp474
g4
I1
sg5
I01
sg6
g472
sg7
S'TLearner'
p475
sg9
(lp476
sg11
I00
sg12
(lp477
(S'TDomain'
p478
S'domain'
p479
g479
S'domain'
p480
I0
I0
I00
tp481
ag97
asbsS'TFeatureInducer'
p482
(i__main__
ClassDefinition
p483
(dp484
g4
I1
sg5
I01
sg6
g482
sg7
S'TOrange'
p485
sg9
(lp486
sg11
I01
sg12
(lp487
sbsS'TMapIntValue'
p488
(i__main__
ClassDefinition
p489
(dp490
g4
I1
sg5
I01
sg6
g488
sg7
S'TTransformValue'
p491
sg9
(lp492
sg11
I00
sg12
(lp493
(S'TIntList'
p494
S'mapping'
p495
g495
S'a lookup table'
p496
I0
I0
I00
tp497
a(S'TTransformValue'
p498
S'subTransform'
p499
g499
S'transformation executed prior to this'
p500
I0
I0
I00
tp501
asbsS'TDistributionAssessor_Kramer'
p502
(i__main__
ClassDefinition
p503
(dp504
g4
I1
sg5
I01
sg6
g502
sg7
S'TDistributionAssessor'
p505
sg9
(lp506
sg11
I00
sg12
(lp507
sbsS'TTreeExampleSplitter_UnknownsToBranch'
p508
(i__main__
ClassDefinition
p509
(dp510
g4
I1
sg5
I01
sg6
g508
sg7
S'TTreeExampleSplitter'
p511
sg9
(lp512
sg11
I00
sg12
(lp513
sbsS'TMajorityLearner'
p514
(i__main__
ClassDefinition
p515
(dp516
g4
I1
sg5
I01
sg6
g514
sg7
S'TLearner'
p517
sg9
(lp518
sg11
I00
sg12
(lp519
(S'TProbabilityEstimatorConstructor'
p520
S'estimatorConstructor'
p521
g521
S'constructs probability estimator'
p522
I0
I0
I00
tp523
a(S'TDistribution'
p524
S'aprioriDistribution'
p525
g525
S'apriori class distribution'
p526
I0
I0
I00
tp527
ag97
asbsS'TFeatureByIM'
p528
(i__main__
ClassDefinition
p529
(dp530
g4
I1
sg5
I01
sg6
g528
sg7
S'TFeatureInducer'
p531
sg9
(lp532
sg11
I00
sg12
(lp533
(S'TIMConstructor'
p534
S'IMconstructor'
p535
g535
S'incompatibility matrix constructor'
p536
I0
I0
I00
tp537
a(S'TClustersFromIM'
p538
S'clustersFromIM'
p539
g539
S'clustering algorithm'
p540
I0
I0
I00
tp541
a(S'int'
p542
S'completion'
p543
g543
S'decides how to determine the class for points not covered by any cluster'
p544
I0
I0
I01
tp545
asbsS'TMeasureAttributeFromProbabilities'
p546
(i__main__
ClassDefinition
p547
(dp548
g4
I1
sg5
I01
sg6
g546
sg7
S'TMeasureAttribute'
p549
sg9
(lp550
sg11
I01
sg12
(lp551
(S'TProbabilityEstimatorConstructor'
p552
S'estimatorConstructor'
p553
g553
S'probability estimator (none by default)'
p554
I0
I0
I00
tp555
a(S'TConditionalProbabilityEstimatorConstructor'
p556
S'conditionalEstimatorConstructor'
p557
g557
S'conditional probability estimator (none by default)'
p558
I0
I0
I00
tp559
a(S'int'
p560
S'unknownsTreatment'
p561
g561
S'treatment of unknown values'
p562
I0
I0
I01
tp563
a(S'int'
p564
S'needs'
p565
g565
S'describes what kind of data is needed for computation'
p566
I0
I0
I01
tp567
a(S'bool'
p568
S'handlesDiscrete'
p569
g569
S'tells whether the measure can handle discrete attributes'
p570
I01
I0
I01
tp571
a(S'bool'
p572
S'handlesContinuous'
p573
g573
S'tells whether the measure can handle continuous attributes'
p574
I01
I0
I01
tp575
asbsS'TProbabilityEstimatorConstructor_relative'
p576
(i__main__
ClassDefinition
p577
(dp578
g4
I1
sg5
I01
sg6
g576
sg7
S'TProbabilityEstimatorConstructor'
p579
sg9
(lp580
sg11
I00
sg12
(lp581
sbsS'TClassifierByLookupTable3'
p582
(i__main__
ClassDefinition
p583
(dp584
g4
I1
sg5
I01
sg6
g582
sg7
S'TClassifierByLookupTable'
p585
sg9
(lp586
sg11
I00
sg12
(lp587
(S'TVariable'
p588
S'variable1'
p589
g589
S'the first attribute used for classification'
p590
I01
I0
I00
tp591
a(S'TVariable'
p592
S'variable2'
p593
g593
S'the second attribute used for classification'
p594
I01
I0
I00
tp595
a(S'TVariable'
p596
S'variable3'
p597
g597
S'the third attribute used for classification'
p598
I01
I0
I00
tp599
a(S'int'
p600
S'noOfValues1'
p601
g601
S'number of values of the first attribute'
p602
I01
I0
I01
tp603
a(S'int'
p604
S'noOfValues2'
p605
g605
S'number of values of the second attribute'
p606
I01
I0
I01
tp607
a(S'int'
p608
S'noOfValues3'
p609
g609
S'number of values of the third attribute'
p610
I01
I0
I01
tp611
a(S'TEFMDataDescription'
p612
S'dataDescription'
p613
g613
S'data description'
p614
I0
I0
I00
tp615
ag75
ag79
ag83
ag87
asbsS'TImputerConstructor_maximal'
p616
(i__main__
ClassDefinition
p617
(dp618
g4
I1
sg5
I01
sg6
g616
sg7
S'TImputerConstructor'
p619
sg9
(lp620
sg11
I00
sg12
(lp621
g151
asbsS'TRuleBeamRefiner'
p622
(i__main__
ClassDefinition
p623
(dp624
g4
I1
sg5
I01
sg6
g622
sg7
S'TOrange'
p625
sg9
(lp626
sg11
I01
sg12
(lp627
sbsS'TEquiDistDiscretizer'
p628
(i__main__
ClassDefinition
p629
(dp630
g4
I1
sg5
I01
sg6
g628
sg7
S'TDiscretizer'
p631
sg9
(lp632
sg11
I00
sg12
(lp633
(S'int'
p634
S'numberOfIntervals'
p635
g635
S'number of intervals'
p636
I0
I0
I01
tp637
a(S'float'
p638
S'firstCut'
p639
g639
S'the first cut-off point'
p640
I0
I0
I01
tp641
a(S'float'
p642
S'step'
p643
g643
S'step (width of interval)'
p644
I0
I0
I01
tp645
ag501
asbsS'TValueFilter_string'
p646
(i__main__
ClassDefinition
p647
(dp648
g4
I1
sg5
I01
sg6
g646
sg7
S'TValueFilter'
p649
sg9
(lp650
sg11
I00
sg12
(lp651
(S'string'
p652
S'min'
p653
(g653
S'ref'
p654
tp655
S' reference value (lower bound for interval operators)'
p656
I0
I0
I01
tp657
a(S'string'
p658
S'max'
p659
g659
S'upper bound for interval operators'
p660
I0
I0
I01
tp661
a(S'int'
p662
S'oper'
p663
g663
S'operator'
p664
I0
I0
I01
tp665
a(S'bool'
p666
S'caseSensitive'
p667
g667
S'if true (default), the operator is case sensitive'
p668
I0
I0
I01
tp669
a(S'int'
p670
S'position'
p671
g671
S"attribute's position in domain"
p672
I0
I0
I01
tp673
a(S'int'
p674
S'acceptSpecial'
p675
g675
S'tells whether a special value (DK, DC...) is accepted (1), rejected (0) or ignored (-1)'
p676
I0
I0
I01
tp677
asbsS'TFindNearest_BruteForce'
p678
(i__main__
ClassDefinition
p679
(dp680
g4
I1
sg5
I01
sg6
g678
sg7
S'TFindNearest'
p681
sg9
(lp682
sg11
I00
sg12
(lp683
(S'TExamplesDistance'
p684
S'distance'
p685
g685
S'metrics'
p686
I0
I0
I00
tp687
a(S'TExampleGenerator'
p688
S'examples'
p689
g689
S'a list of stored examples'
p690
I0
I0
I00
tp691
a(S'int'
p692
S'weightID'
p693
g693
S'weight to use when counting examples'
p694
I0
I0
I01
tp695
a(S'int'
p696
S'distanceID'
p697
g697
S'id of meta attribute where the distance should be stored (0 = no storing)'
p698
I0
I0
I01
tp699
a(S'bool'
p700
S'includeSame'
p701
g701
S'tells whether to include examples that are same as the reference example'
p702
I0
I0
I01
tp703
asbsS'TRuleBeamInitializer'
p704
(i__main__
ClassDefinition
p705
(dp706
g4
I1
sg5
I01
sg6
g704
sg7
S'TOrange'
p707
sg9
(lp708
sg11
I01
sg12
(lp709
sbsS'TMeasureAttribute_relevance'
p710
(i__main__
ClassDefinition
p711
(dp712
g4
I1
sg5
I01
sg6
g710
sg7
S'TMeasureAttributeFromProbabilities'
p713
sg9
(lp714
sg11
I00
sg12
(lp715
g555
ag559
ag563
ag567
ag571
ag575
asbsS'TFilter_hasSpecial'
p716
(i__main__
ClassDefinition
p717
(dp718
g4
I1
sg5
I01
sg6
g716
sg7
S'TFilter'
p719
sg9
(lp720
sg11
I00
sg12
(lp721
g437
ag441
asbsS'TDiscDistribution'
p722
(i__main__
ClassDefinition
p723
(dp724
g4
I1
sg5
I01
sg6
g722
sg7
S'TDistribution'
p725
sg9
(lp726
sg11
I00
sg12
(lp727
(S'TFloatList'
p728
S'variances'
p729
g729
S'variances'
p730
I0
I0
I00
tp731
a(S'TVariable'
p732
S'variable'
p733
g733
S'attribute descriptor (optional)'
p734
I0
I0
I00
tp735
a(S'float'
p736
S'unknowns'
p737
g737
S'number of unknown values'
p738
I0
I0
I01
tp739
a(S'float'
p740
S'abs'
p741
g741
S'sum of frequencies (not including unknown values!)'
p742
I0
I0
I01
tp743
a(S'float'
p744
S'cases'
p745
g745
S"number of cases; as abs, but doesn't change at *= and normalize()"
p746
I0
I0
I01
tp747
a(S'bool'
p748
S'normalized'
p749
g749
S'distribution is normalized'
p750
I0
I0
I01
tp751
a(S'bool'
p752
S'supportsDiscrete'
p753
g753
S'distribution supports discrete interface'
p754
I01
I0
I01
tp755
a(S'bool'
p756
S'supportsContinuous'
p757
g757
S'distribution supports continuous interface'
p758
I01
I0
I01
tp759
a(S'TRandomGenerator'
p760
S'randomGenerator'
p761
g761
S'random generator; initialized when needed, if not given earlier'
p762
I0
I0
I00
tp763
asbsS'TBayesLearner'
p764
(i__main__
ClassDefinition
p765
(dp766
g4
I1
sg5
I01
sg6
g764
sg7
S'TLearner'
p767
sg9
(lp768
sg11
I00
sg12
(lp769
(S'TProbabilityEstimatorConstructor'
p770
S'estimatorConstructor'
p771
g771
S'constructs a probability estimator for P(C)'
p772
I0
I0
I00
tp773
a(S'TConditionalProbabilityEstimatorConstructor'
p774
S'conditionalEstimatorConstructor'
p775
g775
S'constructs a probability estimator for P(C|A) '
p776
I0
I0
I00
tp777
a(S'TConditionalProbabilityEstimatorConstructor'
p778
S'conditionalEstimatorConstructorContinuous'
p779
g779
S'constructs a probability estimator for P(C|A) for continuous attributes'
p780
I0
I0
I00
tp781
a(S'bool'
p782
S'normalizePredictions'
p783
g783
S'instructs learner to construct a classifier that normalizes probabilities'
p784
I0
I0
I01
tp785
a(S'bool'
p786
S'adjustThreshold'
p787
g787
S'adjust probability thresholds (for binary classes only)'
p788
I0
I0
I01
tp789
ag97
asbsS'TIMByRelief'
p790
(i__main__
ClassDefinition
p791
(dp792
g4
I1
sg5
I01
sg6
g790
sg7
S'TIMConstructor'
p793
sg9
(lp794
sg11
I00
sg12
(lp795
(S'TExamplesDistance_Relief'
p796
S'distance'
p797
g797
S'distance measure'
p798
I0
I0
I00
tp799
a(S'float'
p800
S'k'
p801
g801
S'number of neighbours'
p802
I0
I0
I01
tp803
a(S'float'
p804
S'm'
p805
g805
S'number of reference examples'
p806
I0
I0
I01
tp807
a(S'float'
p808
S'kFromColumns'
p809
g809
S'if positive, number of neighbours is #columns*kFromColumns'
p810
I0
I0
I01
tp811
a(S'bool'
p812
S'ignoreSameExample'
p813
g813
S'does not put reference example into M'
p814
I0
I0
I01
tp815
a(S'bool'
p816
S'convertToBinary'
p817
g817
S'convert to binary class (hit-miss)'
p818
I0
I0
I01
tp819
a(S'bool'
p820
S'correctClassFirst'
p821
g821
S'puts the correct class proportion to the first place'
p822
I0
I0
I01
tp823
a(S'bool'
p824
S'allExamples'
p825
g825
S'uses all examples for reference examples'
p826
I0
I0
I01
tp827
a(S'bool'
p828
S'allSameNeighbours'
p829
g829
S'uses all the examples same to the reference as neighbours'
p830
I0
I0
I01
tp831
a(S'bool'
p832
S'recordRowExamples'
p833
g833
S'enables creation of rowExample list'
p834
I0
I0
I01
tp835
asbsS'TConditionalProbabilityEstimator'
p836
(i__main__
ClassDefinition
p837
(dp838
g4
I1
sg5
I01
sg6
g836
sg7
S'TOrange'
p839
sg9
(lp840
sg11
I01
sg12
(lp841
g111
ag115
asbsS'TColumnAssessor_Laplace'
p842
(i__main__
ClassDefinition
p843
(dp844
g4
I1
sg5
I01
sg6
g842
sg7
S'TColumnAssessor'
p845
sg9
(lp846
sg11
I00
sg12
(lp847
sbsS'TPreprocessor_addGaussianNoise'
p848
(i__main__
ClassDefinition
p849
(dp850
g4
I1
sg5
I01
sg6
g848
sg7
S'TPreprocessor'
p851
sg9
(lp852
sg11
I00
sg12
(lp853
(S'TVariableFloatMap'
p854
S'deviations'
p855
g855
S'deviations individual attribute values'
p856
I0
I0
I00
tp857
a(S'float'
p858
S'defaultDeviation'
p859
g859
S'default deviation'
p860
I0
I0
I01
tp861
a(S'TRandomGenerator'
p862
S'randomGenerator'
p863
g863
S'random number generator'
p864
I0
I0
I00
tp865
asbsS'TRuleStoppingCriteria_NegativeDistribution'
p866
(i__main__
ClassDefinition
p867
(dp868
g4
I1
sg5
I01
sg6
g866
sg7
S'TRuleStoppingCriteria'
p869
sg9
(lp870
sg11
I00
sg12
(lp871
sbsS'TTreeSplitConstructor_ExhaustiveBinary'
p872
(i__main__
ClassDefinition
p873
(dp874
g4
I1
sg5
I01
sg6
g872
sg7
S'TTreeSplitConstructor_Measure'
p875
sg9
(lp876
sg11
I00
sg12
(lp877
(S'TMeasureAttribute'
p878
S'measure'
p879
g879
S'attribute quality measure'
p880
I0
I0
I00
tp881
a(S'float'
p882
S'worstAcceptable'
p883
g883
S'the worst acceptable quality of the attribute'
p884
I0
I0
I01
tp885
a(S'float'
p886
S'minSubset'
p887
g887
S'minimal number of examples in a subset'
p888
I0
I0
I01
tp889
asbsS'TTreeClassifier'
p890
(i__main__
ClassDefinition
p891
(dp892
g4
I1
sg5
I01
sg6
g890
sg7
S'TClassifierFD'
p893
sg9
(lp894
sg11
I00
sg12
(lp895
(S'TTreeNode'
p896
S'tree'
p897
g897
S'decision tree'
p898
I0
I0
I00
tp899
a(S'TTreeDescender'
p900
S'descender'
p901
g901
S'object that descends down the tree'
p902
I0
I0
I00
tp903
a(S'TDomain'
p904
S'domain'
p905
g905
S'domain'
p906
I0
I0
I00
tp907
ag83
ag87
asbsS'TFilter_compatibleExample'
p908
(i__main__
ClassDefinition
p909
(dp910
g4
I1
sg5
I01
sg6
g908
sg7
S'TFilter'
p911
sg9
(lp912
sg11
I00
sg12
(lp913
(S'TExample'
p914
S'example'
p915
g915
S'example with which examples are compared'
p916
I0
I0
I00
tp917
ag437
ag441
asbsS'TRemoveRedundant'
p918
(i__main__
ClassDefinition
p919
(dp920
g4
I1
sg5
I01
sg6
g918
sg7
S'TOrange'
p921
sg9
(lp922
sg11
I01
sg12
(lp923
(S'bool'
p924
S'keepValues'
p925
g925
S'keep an attribute if number values is only smaller, not one'
p926
I0
I0
I01
tp927
asbsS'TSomeValue'
p928
(i__main__
ClassDefinition
p929
(dp930
g4
I1
sg5
I01
sg6
g928
sg7
S'TOrange'
p931
sg9
(lp932
sg11
I01
sg12
(lp933
sbsS'TRuleClassifierConstructor_firstRule'
p934
(i__main__
ClassDefinition
p935
(dp936
g4
I1
sg5
I01
sg6
g934
sg7
S'TRuleClassifierConstructor'
p937
sg9
(lp938
sg11
I00
sg12
(lp939
sbsS'TLinRegLearner'
p940
(i__main__
ClassDefinition
p941
(dp942
g4
I1
sg5
I01
sg6
g940
sg7
S'TLearner'
p943
sg9
(lp944
sg11
I00
sg12
(lp945
(S'int'
p946
S'iterativeSelection'
p947
g947
S'0 all, 1 forward, 2 backward, 3 stepwise'
p948
I0
I0
I01
tp949
a(S'float'
p950
S'Fin'
p951
g951
S'significance limit for an attribute to enter the model'
p952
I0
I0
I01
tp953
a(S'float'
p954
S'Fout'
p955
g955
S'significance limit for the attribute to be removed'
p956
I0
I0
I01
tp957
a(S'int'
p958
S'maxIterations'
p959
g959
S'maximal number of iterations for stepwise'
p960
I0
I0
I01
tp961
a(S'TImputerConstructor'
p962
S'imputerConstructor'
p963
g963
S'if present, it constructs an imputer for unknown values'
p964
I0
I0
I00
tp965
a(S'TDomainContinuizer'
p966
S'continuizer'
p967
g967
S'if present, specifies the way in which discrete attributes are converted to continuous'
p968
I0
I0
I00
tp969
ag97
asbsS'TStopDistributionClustering_noProfit'
p970
(i__main__
ClassDefinition
p971
(dp972
g4
I1
sg5
I01
sg6
g970
sg7
S'TStopDistributionClustering'
p973
sg9
(lp974
sg11
I00
sg12
(lp975
(S'float'
p976
S'minProfitProportion'
p977
g977
S'minimal allowable profit proportion'
p978
I0
I0
I01
tp979
asbsS'TBiModalDiscretization'
p980
(i__main__
ClassDefinition
p981
(dp982
g4
I1
sg5
I01
sg6
g980
sg7
S'TDiscretization'
p983
sg9
(lp984
sg11
I00
sg12
(lp985
(S'bool'
p986
S'splitInTwo'
p987
g987
S'if true (default), flanks are merged into a single interval'
p988
I0
I0
I01
tp989
asbsS'TIntVariable'
p990
(i__main__
ClassDefinition
p991
(dp992
g4
I1
sg5
I01
sg6
g990
sg7
S'TVariable'
p993
sg9
(lp994
sg11
I00
sg12
(lp995
(S'int'
p996
S'startValue'
p997
g997
S'lowest value'
p998
I0
I0
I01
tp999
a(S'int'
p1000
S'endValue'
p1001
g1001
S'highest value'
p1002
I0
I0
I01
tp1003
ag241
ag245
ag249
ag253
ag257
ag261
ag265
asbsS'TColoredIG'
p1004
(i__main__
ClassDefinition
p1005
(dp1006
g4
I1
sg5
I01
sg6
g1004
sg7
S'TGeneralExampleClustering'
p1007
sg9
(lp1008
sg11
I00
sg12
(lp1009
(S'TIG'
p1010
S'ig'
p1011
g1011
S'incompatibility graph'
p1012
I0
I0
I00
tp1013
a(S'TIntList'
p1014
S'colors'
p1015
g1015
S'colors (one element corresponding to each ig node)'
p1016
I0
I0
I00
tp1017
asbsS'TMeasureAttribute'
p1018
(i__main__
ClassDefinition
p1019
(dp1020
g4
I1
sg5
I01
sg6
g1018
sg7
S'TOrange'
p1021
sg9
(lp1022
sg11
I00
sg12
(lp1023
g567
ag571
ag575
asbsS'TRuleEvaluator'
p1024
(i__main__
ClassDefinition
p1025
(dp1026
g4
I1
sg5
I01
sg6
g1024
sg7
S'TOrange'
p1027
sg9
(lp1028
sg11
I01
sg12
(lp1029
sbsS'TStringVariable'
p1030
(i__main__
ClassDefinition
p1031
(dp1032
g4
I1
sg5
I01
sg6
g1030
sg7
S'TVariable'
p1033
sg9
(lp1034
sg11
I00
sg12
(lp1035
g241
ag245
ag249
ag253
ag257
ag261
ag265
asbsS'TAssessIMQuality'
p1036
(i__main__
ClassDefinition
p1037
(dp1038
g4
I1
sg5
I01
sg6
g1036
sg7
S'TOrange'
p1039
sg9
(lp1040
sg11
I00
sg12
(lp1041
(S'TColumnAssessor'
p1042
S'columnAssessor'
p1043
g1043
S'column quality assessor'
p1044
I0
I0
I00
tp1045
asbsS'TGraphAsTree'
p1046
(i__main__
ClassDefinition
p1047
(dp1048
g4
I1
sg5
I01
sg6
g1046
sg7
S'TGraph'
p1049
sg9
(lp1050
sg11
I00
sg12
(lp1051
(S'int'
p1052
S'nVertices'
p1053
g1053
S'the number of vertices'
p1054
I01
I0
I01
tp1055
a(S'int'
p1056
S'nEdgeTypes'
p1057
g1057
S'the number of edge types'
p1058
I01
I0
I01
tp1059
a(S'bool'
p1060
S'directed'
p1061
g1061
S'directed'
p1062
I01
I0
I01
tp1063
asbsS'TTreeExampleSplitter_IgnoreUnknowns'
p1064
(i__main__
ClassDefinition
p1065
(dp1066
g4
I1
sg5
I01
sg6
g1064
sg7
S'TTreeExampleSplitter'
p1067
sg9
(lp1068
sg11
I00
sg12
(lp1069
sbsS'TProbabilityEstimator_FromDistribution'
p1070
(i__main__
ClassDefinition
p1071
(dp1072
g4
I1
sg5
I01
sg6
g1070
sg7
S'TProbabilityEstimator'
p1073
sg9
(lp1074
sg11
I00
sg12
(lp1075
(S'TDistribution'
p1076
S'probabilities'
p1077
g1077
S'probabilities'
p1078
I0
I0
I00
tp1079
a(S'bool'
p1080
S'supportsDiscrete'
p1081
g1081
S'can estimate probabilities of discrete attributes'
p1082
I01
I0
I01
tp1083
a(S'bool'
p1084
S'supportsContinuous'
p1085
g1085
S'can estimate probabilities of continuous attributes'
p1086
I01
I0
I01
tp1087
asbsS'TTreeDescender_UnknownMergeAsBranchSizes'
p1088
(i__main__
ClassDefinition
p1089
(dp1090
g4
I1
sg5
I01
sg6
g1088
sg7
S'TTreeDescender'
p1091
sg9
(lp1092
sg11
I0
sg12
(lp1093
sbsS'TExamplesDistance'
p1094
(i__main__
ClassDefinition
p1095
(dp1096
g4
I1
sg5
I01
sg6
g1094
sg7
S'TOrange'
p1097
sg9
(lp1098
sg11
I01
sg12
(lp1099
sbsS'TFileExampleGenerator'
p1100
(i__main__
ClassDefinition
p1101
(dp1102
g4
I1
sg5
I01
sg6
g1100
sg7
S'TExampleGenerator'
p1103
sg9
(lp1104
sg11
I01
sg12
(lp1105
g125
ag129
ag133
ag137
ag141
asbsS'TMeasureAttribute_gainRatio'
p1106
(i__main__
ClassDefinition
p1107
(dp1108
g4
I1
sg5
I01
sg6
g1106
sg7
S'TMeasureAttributeFromProbabilities'
p1109
sg9
(lp1110
sg11
I00
sg12
(lp1111
g555
ag559
ag563
ag567
ag571
ag575
asbsS'TRandomForestLearner'
p1112
(i__main__
ClassDefinition
p1113
(dp1114
S'extended'
p1115
I1
sS'imported'
p1116
I0
sS'name'
p1117
g1112
sS'parent'
p1118
S'TLearner'
p1119
sS'abstract'
p1120
I00
sS'components'
p1121
(lp1122
sS'properties'
p1123
(lp1124
(S'int'
p1125
S'randomSeed'
p1126
g1126
S'seed for the random generator'
p1127
I0
I0
I01
tp1128
ag97
asbsS'TLinRegClassifier'
p1129
(i__main__
ClassDefinition
p1130
(dp1131
g4
I1
sg5
I01
sg6
g1129
sg7
S'TClassifierFD'
p1132
sg9
(lp1133
sg11
I00
sg12
(lp1134
(S'TAttributedFloatList'
p1135
S'coefficients'
p1136
g1136
S'coefficients of regression plane'
p1137
I0
I0
I00
tp1138
a(S'TAttributedFloatList'
p1139
S'coefficients_se'
p1140
g1140
S'standard errors of coefficients'
p1141
I0
I0
I00
tp1142
a(S'float'
p1143
S'N'
p1144
g1144
S'number of examples'
p1145
I0
I0
I01
tp1146
a(S'float'
p1147
S'SStot'
p1148
g1148
S'total sum of squares'
p1149
I0
I0
I01
tp1150
a(S'float'
p1151
S'SSres'
p1152
g1152
S'residual sum of squares'
p1153
I0
I0
I01
tp1154
a(S'float'
p1155
S'SSreg'
p1156
g1156
S'sum of squares due to regression'
p1157
I0
I0
I01
tp1158
a(S'float'
p1159
S'MStot'
p1160
g1160
S'total mean squares'
p1161
I0
I0
I01
tp1162
a(S'float'
p1163
S'MSres'
p1164
g1164
S'residual mean square'
p1165
I0
I0
I01
tp1166
a(S'float'
p1167
S'MSreg'
p1168
g1168
S'mean square regression'
p1169
I0
I0
I01
tp1170
a(S'float'
p1171
S'F'
p1172
g1172
S'F statistics for the model'
p1173
I0
I0
I01
tp1174
a(S'float'
p1175
S'Fprob'
p1176
g1176
S'significance of the model (F)'
p1177
I0
I0
I01
tp1178
a(S'float'
p1179
S'R2'
p1180
g1180
S'determination'
p1181
I0
I0
I01
tp1182
a(S'float'
p1183
S'adjR2'
p1184
g1184
S'adjusted determination'
p1185
I0
I0
I01
tp1186
a(S'TImputer'
p1187
S'imputer'
p1188
g1188
S'if present, it imputes unknown values'
p1189
I0
I0
I00
tp1190
a(S'float'
p1191
S'threshold'
p1192
g1192
S'classification threshold (for discrete classes)'
p1193
I0
I0
I01
tp1194
ag907
ag83
ag87
asbsS'TContingencyClassAttr'
p1195
(i__main__
ClassDefinition
p1196
(dp1197
g4
I1
sg5
I01
sg6
g1195
sg7
S'TContingencyClass'
p1198
sg9
(lp1199
sg11
I00
sg12
(lp1200
(S'TVariable'
p1201
S'outerVariable'
p1202
g1202
S'outer attribute'
p1203
I0
I0
I00
tp1204
a(S'TVariable'
p1205
S'innerVariable'
p1206
(g1206
S'variable'
p1207
tp1208
S' inner attribute'
p1209
I0
I0
I00
tp1210
a(S'int'
p1211
S'varType'
p1212
g1212
S'outer attribute type'
p1213
I01
I0
I01
tp1214
a(S'TDistribution'
p1215
S'outerDistribution'
p1216
g1216
S'distribution of values of outer attributes'
p1217
I0
I0
I00
tp1218
a(S'TDistribution'
p1219
S'innerDistribution'
p1220
g1220
S'distribution of values of inner attributes'
p1221
I0
I0
I00
tp1222
asbsS'TMissValuesGenerator'
p1223
(i__main__
ClassDefinition
p1224
(dp1225
g4
I1
sg5
I01
sg6
g1223
sg7
S'TChangeExampleGenerator'
p1226
sg9
(lp1227
sg11
I00
sg12
(lp1228
(S'TIntFloatList'
p1229
S'replaceProbabilities'
p1230
g1230
S"probabilities for replacing attributes' values"
p1231
I0
I0
I00
tp1232
a(S'TRandomGenerator'
p1233
S'randomGenerator'
p1234
g1234
S'random generator'
p1235
I0
I0
I00
tp1236
ag137
ag141
asbsS'TLogRegClassifier'
p1237
(i__main__
ClassDefinition
p1238
(dp1239
g4
I1
sg5
I01
sg6
g1237
sg7
S'TClassifierFD'
p1240
sg9
(lp1241
sg11
I00
sg12
(lp1242
(S'TDomain'
p1243
S'continuizedDomain'
p1244
g1244
S'if absent, there is no continuous attributes in original domain'
p1245
I0
I0
I00
tp1246
a(S'TEFMDataDescription'
p1247
S'dataDescription'
p1248
g1248
S'Data needed for classification in presence of undefined values'
p1249
I0
I0
I00
tp1250
a(S'TAttributedFloatList'
p1251
S'beta'
p1252
g1252
S'estimated beta coefficients for logistic regression'
p1253
I0
I0
I00
tp1254
a(S'TAttributedFloatList'
p1255
S'beta_se'
p1256
g1256
S'estimated standard errors for beta coefficients'
p1257
I0
I0
I00
tp1258
a(S'TAttributedFloatList'
p1259
S'wald_Z'
p1260
g1260
S'Wald Z statstic for beta coefficients'
p1261
I0
I0
I00
tp1262
a(S'TAttributedFloatList'
p1263
S'P'
p1264
g1264
S'estimated significances for beta coefficients'
p1265
I0
I0
I00
tp1266
a(S'float'
p1267
S'likelihood'
p1268
g1268
S"Likelihood: The likelihood function is the function which specifies the probability of the sample observed on the basis of a known model, as a function of the model's parameters. "
p1269
I0
I0
I01
tp1270
a(S'int'
p1271
S'fit_status'
p1272
g1272
S"Tells how the model fitting ended - either regularly (LogRegFitter.OK), or it was interrupted due to one of beta coefficients escaping towards infinity (LogRegFitter.Infinity) or since the values didn't converge (LogRegFitter.Divergence)."
p1273
I0
I0
I01
tp1274
a(S'TImputer'
p1275
S'imputer'
p1276
g1276
S'if present, it imputes unknown values'
p1277
I0
I0
I00
tp1278
ag907
ag83
ag87
asbsS'TEquiDistDiscretization'
p1279
(i__main__
ClassDefinition
p1280
(dp1281
g4
I1
sg5
I01
sg6
g1279
sg7
S'TDiscretization'
p1282
sg9
(lp1283
sg11
I00
sg12
(lp1284
(S'int'
p1285
S'numberOfIntervals'
p1286
g1286
S'number of intervals'
p1287
I0
I0
I01
tp1288
asbsS'TPreprocessor_select'
p1289
(i__main__
ClassDefinition
p1290
(dp1291
g4
I1
sg5
I01
sg6
g1289
sg7
S'TPreprocessor'
p1292
sg9
(lp1293
sg11
I00
sg12
(lp1294
(S'TVarList'
p1295
S'attributes'
p1296
g1296
S'tells which attributes to select'
p1297
I0
I0
I00
tp1298
asbsS'TBasicAttrStat'
p1299
(i__main__
ClassDefinition
p1300
(dp1301
g4
I1
sg5
I01
sg6
g1299
sg7
S'TOrange'
p1302
sg9
(lp1303
sg11
I00
sg12
(lp1304
(S'float'
p1305
S'sum'
p1306
g1306
S'sum of values'
p1307
I01
I0
I01
tp1308
a(S'float'
p1309
S'sum2'
p1310
g1310
S'sum of squares of values'
p1311
I01
I0
I01
tp1312
a(S'float'
p1313
S'n'
p1314
g1314
S'number of examples for which the attribute is defined'
p1315
I01
I0
I01
tp1316
a(S'float'
p1317
S'min'
p1318
g1318
S'the lowest value of the attribute'
p1319
I0
I0
I01
tp1320
a(S'float'
p1321
S'max'
p1322
g1322
S'the highest value of the attribute'
p1323
I0
I0
I01
tp1324
a(S'float'
p1325
S'avg'
p1326
g1326
S'the average value of the attribute'
p1327
I0
I0
I01
tp1328
a(S'float'
p1329
S'dev'
p1330
g1330
S'the deviation of the value of the attribute'
p1331
I0
I0
I01
tp1332
a(S'TVariable'
p1333
S'variable'
p1334
g1334
S'the attribute to which the data applies'
p1335
I0
I0
I00
tp1336
a(S'bool'
p1337
S'holdRecomputation'
p1338
g1338
S'temporarily disables recomputation of avg and dev while adding values'
p1339
I0
I0
I01
tp1340
asbsS'TFilter_disjunction'
p1341
(i__main__
ClassDefinition
p1342
(dp1343
g4
I1
sg5
I01
sg6
g1341
sg7
S'TFilter'
p1344
sg9
(lp1345
sg11
I00
sg12
(lp1346
(S'TFilterList'
p1347
S'filters'
p1348
g1348
S'a list of filters;'
p1349
I0
I0
I00
tp1350
ag437
ag441
asbsS'TMeasureAttribute_gini'
p1351
(i__main__
ClassDefinition
p1352
(dp1353
g4
I1
sg5
I01
sg6
g1351
sg7
S'TMeasureAttributeFromProbabilities'
p1354
sg9
(lp1355
sg11
I00
sg12
(lp1356
g555
ag559
ag563
ag567
ag571
ag575
asbsS'TAttributedFloatList'
p1357
(i__main__
ClassDefinition
p1358
(dp1359
g4
I1
sg5
I01
sg6
g1357
sg7
S'TOrange'
p1360
sg9
(lp1361
sg11
I00
sg12
(lp1362
(S'TVarList'
p1363
S'attributes'
p1364
g1364
S'list of attributes (for indexing)'
p1365
I0
I0
I00
tp1366
asbsS'TIMByRowsByRelief'
p1367
(i__main__
ClassDefinition
p1368
(dp1369
g4
I1
sg5
I01
sg6
g1367
sg7
S'TIMByRowsConstructor'
p1370
sg9
(lp1371
sg11
I00
sg12
(lp1372
(S'float'
p1373
g801
g801
S'number of neighbours'
p1374
I0
I0
I01
tp1375
a(S'float'
p1376
g805
g805
S'number of reference examples'
p1377
I0
I0
I01
tp1378
a(S'float'
p1379
S'kFromColumns'
p1380
g1380
S'if positive, number of neighbours is #columns*kFromColumns'
p1381
I0
I0
I01
tp1382
a(S'bool'
p1383
S'ignoreSameExample'
p1384
g1384
S'does not put reference example into M'
p1385
I0
I0
I01
tp1386
a(S'bool'
p1387
S'convertToBinary'
p1388
g1388
S'convert to binary class (hit-miss)'
p1389
I0
I0
I01
tp1390
a(S'bool'
p1391
S'correctClassFirst'
p1392
g1392
S'puts the correct class proportion to the first place'
p1393
I0
I0
I01
tp1394
a(S'bool'
p1395
S'allExamples'
p1396
g1396
S'uses all examples for reference examples'
p1397
I0
I0
I01
tp1398
a(S'bool'
p1399
S'allSameNeighbours'
p1400
g1400
S'uses all the examples same to the reference as neighbours'
p1401
I0
I0
I01
tp1402
asbsS'TFindNearestConstructor'
p1403
(i__main__
ClassDefinition
p1404
(dp1405
g4
I1
sg5
I01
sg6
g1403
sg7
S'TOrange'
p1406
sg9
(lp1407
sg11
I01
sg12
(lp1408
(S'TExamplesDistanceConstructor'
p1409
S'distanceConstructor'
p1410
g1410
S'metrics'
p1411
I0
I0
I00
tp1412
a(S'bool'
p1413
S'includeSame'
p1414
g1414
S'tells whether to include examples that are same as the reference example'
p1415
I0
I0
I01
tp1416
asbsS'TRuleClassifier_firstRule'
p1417
(i__main__
ClassDefinition
p1418
(dp1419
g4
I1
sg5
I01
sg6
g1417
sg7
S'TRuleClassifier'
p1420
sg9
(lp1421
sg11
I00
sg12
(lp1422
(S'TDistribution'
p1423
S'prior'
p1424
g1424
S'prior distribution'
p1425
I0
I0
I00
tp1426
a(S'TRuleList'
p1427
S'rules'
p1428
g1428
S''
p1429
I0
I0
I00
tp1430
a(S'TExampleTable'
p1431
S'examples'
p1432
g1432
g1429
I0
I0
I00
tp1433
ag83
ag87
asbsS'TColumnAssessor'
p1434
(i__main__
ClassDefinition
p1435
(dp1436
g4
I1
sg5
I01
sg6
g1434
sg7
S'TOrange'
p1437
sg9
(lp1438
sg11
I01
sg12
(lp1439
sbsS'TComputeDomainContingency_Preprocessor'
p1440
(i__main__
ClassDefinition
p1441
(dp1442
g4
I1
sg5
I01
sg6
g1440
sg7
S'TComputeDomainContingency'
p1443
sg9
(lp1444
sg11
I00
sg12
(lp1445
(S'TPreprocessor'
p1446
S'preprocessor'
p1447
g1447
S'preprocesses the exmaples (see the manual for restrictions!)'
p1448
I0
I0
I00
tp1449
a(S'bool'
p1450
S'resultInOriginalDomain'
p1451
g1451
S'tells whether the resulting DomainContingency should consist of original attributes'
p1452
I0
I0
I01
tp1453
ag25
asbsS'TMeasureAttribute_MSE'
p1454
(i__main__
ClassDefinition
p1455
(dp1456
g4
I1
sg5
I01
sg6
g1454
sg7
S'TMeasureAttribute'
p1457
sg9
(lp1458
sg11
I00
sg12
(lp1459
(S'float'
p1460
g805
g805
S'm for m-estimate'
p1461
I0
I0
I01
tp1462
a(S'int'
p1463
S'unknownsTreatment'
p1464
g1464
S'treatment of unknown values'
p1465
I0
I0
I01
tp1466
ag567
ag571
ag575
asbsS'TIntervalDiscretizer'
p1467
(i__main__
ClassDefinition
p1468
(dp1469
g4
I1
sg5
I01
sg6
g1467
sg7
S'TDiscretizer'
p1470
sg9
(lp1471
sg11
I00
sg12
(lp1472
(S'TFloatList'
p1473
S'points'
p1474
g1474
S'cut-off points'
p1475
I0
I0
I00
tp1476
ag501
asbsS'TImputer_asValue'
p1477
(i__main__
ClassDefinition
p1478
(dp1479
g4
I1
sg5
I01
sg6
g1477
sg7
S'TImputer'
p1480
sg9
(lp1481
sg11
I00
sg12
(lp1482
(S'TDomain'
p1483
S'domain'
p1484
g1484
S'domain to which the values are converted'
p1485
I0
I0
I00
tp1486
a(S'TExample'
p1487
S'defaults'
p1488
g1488
S'values to impute instead of missing ones - for continuous attributes only!'
p1489
I0
I0
I00
tp1490
asbsS'TDomainContinuizer'
p1491
(i__main__
ClassDefinition
p1492
(dp1493
g4
I1
sg5
I01
sg6
g1491
sg7
S'TOrange'
p1494
sg9
(lp1495
sg11
I00
sg12
(lp1496
(S'bool'
p1497
S'zeroBased'
p1498
g1498
S'if true (default) it gives values 0.0 and 1.0; else -1.0 and 1.0, 0.0 for undefined'
p1499
I0
I0
I01
tp1500
a(S'int'
p1501
S'continuousTreatment'
p1502
g1502
S'0-leave as they are, 1-divide by span, 1-normalize'
p1503
I0
I0
I01
tp1504
a(S'int'
p1505
S'multinomialTreatment'
p1506
g1506
S'0-lowest value, 1-most frequent (or baseValue), 2-n binary, 3-ignore, 4-error, 5-convert as ordinal, 6-ordinal,normalized'
p1507
I0
I0
I01
tp1508
a(S'int'
p1509
S'classTreatment'
p1510
g1510
S'3-leave as is unless target is given, 4-error if not continuous nor binary nor target given, 5-convert as ordinal (unless target given)'
p1511
I0
I0
I01
tp1512
asbsS'TNormalizeContinuous'
p1513
(i__main__
ClassDefinition
p1514
(dp1515
g4
I1
sg5
I01
sg6
g1513
sg7
S'TTransformValue'
p1516
sg9
(lp1517
sg11
I00
sg12
(lp1518
(S'float'
p1519
S'average'
p1520
g1520
S'the average value'
p1521
I0
I0
I01
tp1522
a(S'float'
p1523
S'span'
p1524
g1524
S'the value span'
p1525
I0
I0
I01
tp1526
ag501
asbsS'TPNN'
p1527
(i__main__
ClassDefinition
p1528
(dp1529
g4
I1
sg5
I01
sg6
g1527
sg7
S'TClassifierFD'
p1530
sg9
(lp1531
sg11
I00
sg12
(lp1532
(S'int'
p1533
S'dimensions'
p1534
g1534
S'the number of dimensions'
p1535
I01
I0
I01
tp1536
a(S'TFloatList'
p1537
S'offsets'
p1538
g1538
S'offsets to subtract from the attribute values'
p1539
I0
I0
I00
tp1540
a(S'TFloatList'
p1541
S'normalizers'
p1542
g1542
S'number to divide the values by'
p1543
I0
I0
I00
tp1544
a(S'TFloatList'
p1545
S'averages'
p1546
g1546
S'numbers to use instead of the missing'
p1547
I0
I0
I00
tp1548
a(S'bool'
p1549
S'normalizeExamples'
p1550
g1550
S'if true, attribute values are divided to sum up to 1'
p1551
I0
I0
I01
tp1552
a(S'int'
p1553
S'nExamples'
p1554
g1554
S'the number of examples'
p1555
I01
I0
I01
tp1556
a(S'int'
p1557
S'law'
p1558
g1558
S'law'
p1559
I0
I0
I01
tp1560
ag907
ag83
ag87
asbsS'TBiModalDiscretizer'
p1561
(i__main__
ClassDefinition
p1562
(dp1563
g4
I1
sg5
I01
sg6
g1561
sg7
S'TDiscretizer'
p1564
sg9
(lp1565
sg11
I00
sg12
(lp1566
(S'float'
p1567
S'low'
p1568
g1568
S'low threshold'
p1569
I0
I0
I01
tp1570
a(S'float'
p1571
S'high'
p1572
g1572
S'high threshold'
p1573
I0
I0
I01
tp1574
ag501
asbsS'TExamplesDistanceConstructor_Euclidean'
p1575
(i__main__
ClassDefinition
p1576
(dp1577
g4
I1
sg5
I01
sg6
g1575
sg7
S'TExamplesDistanceConstructor_Normalized'
p1578
sg9
(lp1579
sg11
I00
sg12
(lp1580
(S'bool'
p1581
S'normalize'
p1582
g1582
S'tells whether to normalize distances between attributes'
p1583
I0
I0
I01
tp1584
a(S'bool'
p1585
S'ignoreUnknowns'
p1586
g1586
S'if true (default: false) unknown values are ignored in computation'
p1587
I0
I0
I01
tp1588
a(S'bool'
p1589
S'ignoreClass'
p1590
g1590
S'if true (default), class value is ignored when computing distances'
p1591
I0
I0
I01
tp1592
asbsS'TContingencyAttrAttr'
p1593
(i__main__
ClassDefinition
p1594
(dp1595
g4
I1
sg5
I01
sg6
g1593
sg7
S'TContingency'
p1596
sg9
(lp1597
sg11
I00
sg12
(lp1598
g1204
ag1210
ag1214
ag1218
ag1222
asbsS'TRuleBeamRefiner_Selector'
p1599
(i__main__
ClassDefinition
p1600
(dp1601
g4
I1
sg5
I01
sg6
g1599
sg7
S'TRuleBeamRefiner'
p1602
sg9
(lp1603
sg11
I00
sg12
(lp1604
(S'TDiscretization'
p1605
S'discretization'
p1606
g1606
S'discretization for continuous attributes'
p1607
I0
I0
I00
tp1608
asbsS'TProbabilityEstimatorConstructor_Laplace'
p1609
(i__main__
ClassDefinition
p1610
(dp1611
g4
I1
sg5
I01
sg6
g1609
sg7
S'TProbabilityEstimatorConstructor'
p1612
sg9
(lp1613
sg11
I00
sg12
(lp1614
(S'float'
p1615
S'l'
p1616
g1616
S'number of examples added to each class (default: 1)'
p1617
I0
I0
I01
tp1618
a(S'bool'
p1619
S'renormalize'
p1620
g1620
S'computes the estimate on the original (not the normalized) distribution'
p1621
I0
I0
I01
tp1622
asbsS'TClassifierForLinearWeight'
p1623
(i__main__
ClassDefinition
p1624
(dp1625
g4
I1
sg5
I01
sg6
g1623
sg7
S'TClassifier'
p1626
sg9
(lp1627
sg11
I00
sg12
(lp1628
(S'int'
p1629
S'whichID'
p1630
g1630
S'Id of meta variable for time'
p1631
I0
I0
I01
tp1632
a(S'TVariable'
p1633
S'outcomeVar'
p1634
g1634
S'outcome variable'
p1635
I0
I0
I00
tp1636
a(S'int'
p1637
S'failIndex'
p1638
g1638
S"index of 'fail' value"
p1639
I0
I0
I01
tp1640
a(S'float'
p1641
S'maxTime'
p1642
g1642
S'maximal time'
p1643
I0
I0
I01
tp1644
ag83
ag87
asbsS'TExamplesDistance_Relief'
p1645
(i__main__
ClassDefinition
p1646
(dp1647
g4
I1
sg5
I01
sg6
g1645
sg7
S'TExamplesDistance'
p1648
sg9
(lp1649
sg11
I00
sg12
(lp1650
(S'TDomainDistributions'
p1651
S'distributions'
p1652
g1652
S"distributions of attributes' values"
p1653
I0
I0
I00
tp1654
a(S'TAttributedFloatList'
p1655
S'averages'
p1656
g1656
S'average values of attributes'
p1657
I0
I0
I00
tp1658
a(S'TAttributedFloatList'
p1659
S'normalizations'
p1660
g1660
S"ranges of attributes' values"
p1661
I0
I0
I00
tp1662
a(S'TAttributedFloatList'
p1663
S'bothSpecial'
p1664
g1664
S'distance if both values of both attributes are undefined'
p1665
I0
I0
I00
tp1666
asbsS'TExamplesDistance_Manhattan'
p1667
(i__main__
ClassDefinition
p1668
(dp1669
g4
I1
sg5
I01
sg6
g1667
sg7
S'TExamplesDistance_Normalized'
p1670
sg9
(lp1671
sg11
I00
sg12
(lp1672
g331
ag335
ag339
ag343
ag347
ag351
ag355
asbsS'TExamplesDistanceConstructor_Manhattan'
p1673
(i__main__
ClassDefinition
p1674
(dp1675
g4
I1
sg5
I01
sg6
g1673
sg7
S'TExamplesDistanceConstructor_Normalized'
p1676
sg9
(lp1677
sg11
I00
sg12
(lp1678
g1584
ag1588
ag1592
asbsS'TTreeDescender'
p1679
(i__main__
ClassDefinition
p1680
(dp1681
g4
I1
sg5
I01
sg6
g1679
sg7
S'TOrange'
p1682
sg9
(lp1683
sg11
I01
sg12
(lp1684
sbsS'TColumnAssessor_Measure'
p1685
(i__main__
ClassDefinition
p1686
(dp1687
g4
I1
sg5
I01
sg6
g1685
sg7
S'TColumnAssessor'
p1688
sg9
(lp1689
sg11
I00
sg12
(lp1690
(S'TMeasureAttribute'
p1691
S'measure'
p1692
g1692
S'attribute quality measure'
p1693
I0
I0
I00
tp1694
asbsS'TIMBlurer'
p1695
(i__main__
ClassDefinition
p1696
(dp1697
g4
I1
sg5
I01
sg6
g1695
sg7
S'TIMByRowsPreprocessor'
p1698
sg9
(lp1699
sg11
I00
sg12
(lp1700
(S'float'
p1701
S'weight'
p1702
g1702
S'weight of neighbours'
p1703
I0
I0
I01
tp1704
a(S'float'
p1705
S'origWeight'
p1706
g1706
S'weight of original row'
p1707
I0
I0
I01
tp1708
a(S'TFloatList'
p1709
S'attrWeights'
p1710
g1710
S'weights by individual (different) attributes'
p1711
I0
I0
I00
tp1712
a(S'bool'
p1713
S'adjustOrigWeight'
p1714
g1714
S'uses 1-weight(s) for weight of original row'
p1715
I0
I0
I01
tp1716
a(S'bool'
p1717
S'onlyEmpty'
p1718
g1718
S'blurs only empty cells'
p1719
I0
I0
I01
tp1720
asbsS'TStopIMClusteringByAssessor_noBigChange'
p1721
(i__main__
ClassDefinition
p1722
(dp1723
g4
I1
sg5
I01
sg6
g1721
sg7
S'TStopIMClusteringByAssessor'
p1724
sg9
(lp1725
sg11
I00
sg12
(lp1726
sbsS'TDiscretizedDomain'
p1727
(i__main__
ClassDefinition
p1728
(dp1729
g4
I1
sg5
I01
sg6
g1727
sg7
S'TDomain'
p1730
sg9
(lp1731
sg11
I00
sg12
(lp1732
(S'TDiscretization'
p1733
S'defaultDiscretization'
p1734
g1734
S'default discretization'
p1735
I0
I0
I00
tp1736
a(S'int'
p1737
S'defaultInt'
p1738
g1738
S'default number of intervals'
p1739
I0
I0
I01
tp1740
a(S'int'
p1741
S'weight'
p1742
g1742
S'id of attribute with weight'
p1743
I0
I0
I01
tp1744
a(S'TVariable'
p1745
S'classVar'
p1746
g1746
S'class variable'
p1747
I01
I0
I00
tp1748
a(S'TVarList'
p1749
S'attributes'
p1750
g1750
S'list of attributes, excluding the class'
p1751
I01
I0
I00
tp1752
a(S'TVarList'
p1753
S'variables'
p1754
g1754
S'list of attributes, including the class at the end of the list'
p1755
I01
I0
I00
tp1756
a(S'int'
p1757
S'version'
p1758
g1758
S"unique version identifier; it's changed each time a domain is changed"
p1759
I01
I0
I01
tp1760
asbsS'TC45Learner'
p1761
(i__main__
ClassDefinition
p1762
(dp1763
g4
I1
sg5
I01
sg6
g1761
sg7
S'TLearner'
p1764
sg9
(lp1765
sg11
I00
sg12
(lp1766
(S'bool'
p1767
S'gainRatio'
p1768
(g1768
S'g'
p1769
tp1770
S' use gain ratio (instead of information gain)'
p1771
I0
I0
I01
tp1772
a(S'bool'
p1773
S'subset'
p1774
(g1774
S's'
p1775
tp1776
S' use subsetting'
p1777
I0
I0
I01
tp1778
a(S'bool'
p1779
S'batch'
p1780
(g1780
S'b'
p1781
tp1782
S' batch'
p1783
I0
I0
I01
tp1784
a(S'bool'
p1785
S'probThresh'
p1786
(g1786
S'p'
p1787
tp1788
S' probability threshold'
p1789
I0
I0
I01
tp1790
a(S'int'
p1791
S'minObjs'
p1792
(g1792
g805
tp1793
S' minimal number of objects (examples) in leaves'
p1794
I0
I0
I01
tp1795
a(S'int'
p1796
S'window'
p1797
(g1797
S'w'
p1798
tp1799
S' window'
p1800
I0
I0
I01
tp1801
a(S'int'
p1802
S'increment'
p1803
(g1803
S'i'
p1804
tp1805
S' increment'
p1806
I0
I0
I01
tp1807
a(S'float'
p1808
S'cf'
p1809
(g1809
S'c'
p1810
tp1811
S' cf'
p1812
I0
I0
I01
tp1813
a(S'int'
p1814
S'trials'
p1815
(g1815
S't'
p1816
tp1817
S' trials'
p1818
I0
I0
I01
tp1819
a(S'bool'
p1820
S'prune'
p1821
g1821
S'return pruned tree'
p1822
I0
I0
I01
tp1823
a(S'bool'
p1824
S'convertToOrange'
p1825
g1825
S'return TreeClassifier instead of C45TreeClassifier'
p1826
I0
I0
I01
tp1827
a(S'bool'
p1828
S'storeExamples'
p1829
g1829
S'stores examples when (if) converting to TreeClassifier'
p1830
I0
I0
I01
tp1831
a(S'bool'
p1832
S'storeContingencies'
p1833
g1833
S'stores contingencies when (if) converting to TreeClassifier'
p1834
I0
I0
I01
tp1835
ag97
asbsS'TAttributedBoolList'
p1836
(i__main__
ClassDefinition
p1837
(dp1838
g4
I1
sg5
I01
sg6
g1836
sg7
g1360
sg9
(lp1839
sg11
I00
sg12
(lp1840
(S'TVarList'
p1841
S'attributes'
p1842
g1842
S'list of attributes (for indexing)'
p1843
I0
I0
I00
tp1844
asbsS'TRuleStoppingCriteria'
p1845
(i__main__
ClassDefinition
p1846
(dp1847
g4
I1
sg5
I01
sg6
g1845
sg7
S'TOrange'
p1848
sg9
(lp1849
sg11
I01
sg12
(lp1850
sbsS'TPreprocessor_dropMissingClasses'
p1851
(i__main__
ClassDefinition
p1852
(dp1853
g4
I1
sg5
I01
sg6
g1851
sg7
S'TPreprocessor'
p1854
sg9
(lp1855
sg11
I00
sg12
(lp1856
sbsS'TkNNClassifier'
p1857
(i__main__
ClassDefinition
p1858
(dp1859
g4
I1
sg5
I01
sg6
g1857
sg7
S'TClassifierFD'
p1860
sg9
(lp1861
sg11
I00
sg12
(lp1862
(S'TFindNearest'
p1863
S'findNearest'
p1864
g1864
g1429
I0
I0
I00
tp1865
a(S'float'
p1866
g801
g801
S'number of neighbours'
p1867
I0
I0
I01
tp1868
a(S'bool'
p1869
S'rankWeight'
p1870
g1870
S'enable weighting by ranks'
p1871
I0
I0
I01
tp1872
a(S'int'
p1873
S'weightID'
p1874
g1874
S'id of meta-attribute with weight'
p1875
I0
I0
I01
tp1876
ag907
ag83
ag87
asbsS'TMeasureAttribute_info'
p1877
(i__main__
ClassDefinition
p1878
(dp1879
g4
I1
sg5
I01
sg6
g1877
sg7
S'TMeasureAttributeFromProbabilities'
p1880
sg9
(lp1881
sg11
I00
sg12
(lp1882
g555
ag559
ag563
ag567
ag571
ag575
asbsS'TRuleBeamCandidateSelector_TakeAll'
p1883
(i__main__
ClassDefinition
p1884
(dp1885
g4
I1
sg5
I01
sg6
g1883
sg7
S'TRuleBeamCandidateSelector'
p1886
sg9
(lp1887
sg11
I00
sg12
(lp1888
sbsS'TExamplesDistanceConstructor_Relief'
p1889
(i__main__
ClassDefinition
p1890
(dp1891
g4
I1
sg5
I01
sg6
g1889
sg7
S'TExamplesDistanceConstructor'
p1892
sg9
(lp1893
sg11
I00
sg12
(lp1894
g1592
asbsS'TOrange'
p1895
(i__main__
ClassDefinition
p1896
(dp1897
g4
I1
sg5
I01
sg6
g1895
sg7
Nsg9
(lp1898
sg11
I00
sg12
(lp1899
sbsS'TRuleValidator'
p1900
(i__main__
ClassDefinition
p1901
(dp1902
g4
I1
sg5
I01
sg6
g1900
sg7
S'TOrange'
p1903
sg9
(lp1904
sg11
I01
sg12
(lp1905
sbsS'TColorIG'
p1906
(i__main__
ClassDefinition
p1907
(dp1908
g4
I1
sg5
I01
sg6
g1906
sg7
S'TOrange'
p1909
sg9
(lp1910
sg11
I01
sg12
(lp1911
sbsS'TRuleValidator_Python'
p1912
(i__main__
ClassDefinition
p1913
(dp1914
g4
I1
sg5
I01
sg6
g1912
sg7
S'TRuleValidator'
p1915
sg9
(lp1916
sg11
I00
sg12
(lp1917
sbsS'TIMByRowsBySorting'
p1918
(i__main__
ClassDefinition
p1919
(dp1920
g4
I1
sg5
I01
sg6
g1918
sg7
S'TIMByRowsConstructor'
p1921
sg9
(lp1922
sg11
I00
sg12
(lp1923
sbsS'TAssociationLearner'
p1924
(i__main__
ClassDefinition
p1925
(dp1926
g4
I1
sg5
I01
sg6
g1924
sg7
S'TLearner'
p1927
sg9
(lp1928
sg11
I00
sg12
(lp1929
(S'float'
p1930
S'confidence'
p1931
g1931
S'required confidence'
p1932
I0
I0
I01
tp1933
a(S'float'
p1934
S'support'
p1935
g1935
S'required support'
p1936
I0
I0
I01
tp1937
a(S'int'
p1938
S'voteWeight'
p1939
g1939
S'vote weight (s=support, c=confidence, p=product)'
p1940
I0
I0
I01
tp1941
a(S'int'
p1942
S'maxItemSets'
p1943
g1943
S'maximal number of itemsets (increase if you want)'
p1944
I0
I0
I01
tp1945
ag97
asbsS'TRuleBeamInitializer_Python'
p1946
(i__main__
ClassDefinition
p1947
(dp1948
g4
I1
sg5
I01
sg6
g1946
sg7
S'TRuleBeamInitializer'
p1949
sg9
(lp1950
sg11
I00
sg12
(lp1951
sbsS'TDistributionAssessor'
p1952
(i__main__
ClassDefinition
p1953
(dp1954
g4
I1
sg5
I01
sg6
g1952
sg7
S'TOrange'
p1955
sg9
(lp1956
sg11
I01
sg12
(lp1957
sbsS'TRuleCovererAndRemover_Python'
p1958
(i__main__
ClassDefinition
p1959
(dp1960
g4
I1
sg5
I01
sg6
g1958
sg7
S'TRuleCovererAndRemover'
p1961
sg9
(lp1962
sg11
I00
sg12
(lp1963
sbsS'TMeasureAttribute_gainRatioA'
p1964
(i__main__
ClassDefinition
p1965
(dp1966
g4
I1
sg5
I01
sg6
g1964
sg7
S'TMeasureAttribute_gainRatio'
p1967
sg9
(lp1968
sg11
I00
sg12
(lp1969
g555
ag559
ag563
ag567
ag571
ag575
asbsS'TConditionalProbabilityEstimatorConstructor_ByRows'
p1970
(i__main__
ClassDefinition
p1971
(dp1972
g4
I1
sg5
I01
sg6
g1970
sg7
S'TConditionalProbabilityEstimatorConstructor'
p1973
sg9
(lp1974
sg11
I00
sg12
(lp1975
(S'TProbabilityEstimatorConstructor'
p1976
S'estimatorConstructor'
p1977
g1977
S'ProbabilityEstimator to be used '
p1978
I0
I0
I00
tp1979
asbsS'TCartesianClassifier'
p1980
(i__main__
ClassDefinition
p1981
(dp1982
g4
I1
sg5
I01
sg6
g1980
sg7
S'TClassifierFD'
p1983
sg9
(lp1984
sg11
I00
sg12
(lp1985
g907
ag83
ag87
asbsS'TTreeSplitConstructor'
p1986
(i__main__
ClassDefinition
p1987
(dp1988
g4
I1
sg5
I01
sg6
g1986
sg7
S'TOrange'
p1989
sg9
(lp1990
sg11
I01
sg12
(lp1991
g889
asbsS'TTreeDescender_UnknownToBranch'
p1992
(i__main__
ClassDefinition
p1993
(dp1994
g4
I1
sg5
I01
sg6
g1992
sg7
g1091
sg9
(lp1995
sg11
I0
sg12
(lp1996
sbsS'TSubsetsGenerator_constSize'
p1997
(i__main__
ClassDefinition
p1998
(dp1999
g4
I1
sg5
I01
sg6
g1997
sg7
S'TSubsetsGenerator'
p2000
sg9
(lp2001
sg11
I00
sg12
(lp2002
(S'int'
p2003
S'B'
p2004
g2004
S'subset size'
p2005
I0
I0
I01
tp2006
ag183
asbsS'TColorIG_MCF'
p2007
(i__main__
ClassDefinition
p2008
(dp2009
g4
I1
sg5
I01
sg6
g2007
sg7
S'TColorIG'
p2010
sg9
(lp2011
sg11
I00
sg12
(lp2012
sbsS'TTreeSplitConstructor_Attribute'
p2013
(i__main__
ClassDefinition
p2014
(dp2015
g4
I1
sg5
I01
sg6
g2013
sg7
S'TTreeSplitConstructor_Measure'
p2016
sg9
(lp2017
sg11
I00
sg12
(lp2018
g881
ag885
ag889
asbsS'TRemoveRedundantByInduction'
p2019
(i__main__
ClassDefinition
p2020
(dp2021
g4
I1
sg5
I01
sg6
g2019
sg7
S'TRemoveRedundant'
p2022
sg9
(lp2023
sg11
I00
sg12
(lp2024
(S'TFeatureInducer'
p2025
S'featureReducer'
p2026
g2026
S'feature construction algorithm'
p2027
I0
I0
I00
tp2028
a(S'TMeasureAttribute'
p2029
S'measure'
p2030
g2030
S'measure for initial ordering of attributes'
p2031
I0
I0
I00
tp2032
a(S'TDiscretization'
p2033
S'discretization'
p2034
g2034
S'discretization method'
p2035
I0
I0
I00
tp2036
ag927
asbsS'TFilter_conjunction'
p2037
(i__main__
ClassDefinition
p2038
(dp2039
g4
I1
sg5
I01
sg6
g2037
sg7
S'TFilter'
p2040
sg9
(lp2041
sg11
I00
sg12
(lp2042
(S'TFilterList'
p2043
S'filters'
p2044
g2044
S'a list of filters;'
p2045
I0
I0
I00
tp2046
ag437
ag441
asbsS'TExampleForMissing'
p2047
(i__main__
ClassDefinition
p2048
(dp2049
g4
I1
sg5
I01
sg6
g2047
sg7
S'TExample'
p2050
sg9
(lp2051
sg11
I00
sg12
(lp2052
(S'TEFMDataDescription'
p2053
S'dataDescription'
p2054
g2054
S'data description'
p2055
I0
I0
I00
tp2056
a(S'TDomain'
p2057
S'domain'
p2058
g2058
S"Example's domain"
p2059
I01
I0
I00
tp2060
asbsS'TRuleBeamFilter'
p2061
(i__main__
ClassDefinition
p2062
(dp2063
g4
I1
sg5
I01
sg6
g2061
sg7
S'TOrange'
p2064
sg9
(lp2065
sg11
I01
sg12
(lp2066
sbsS'TBayesClassifier'
p2067
(i__main__
ClassDefinition
p2068
(dp2069
g4
I1
sg5
I01
sg6
g2067
sg7
S'TClassifierFD'
p2070
sg9
(lp2071
sg11
I00
sg12
(lp2072
(S'TDistribution'
p2073
S'distribution'
p2074
g2074
S'class distributions (P(C))'
p2075
I0
I0
I00
tp2076
a(S'TDomainContingency'
p2077
S'conditionalDistributions'
p2078
g2078
S'conditional distributions, P(C|A)'
p2079
I0
I0
I00
tp2080
a(S'TProbabilityEstimator'
p2081
S'estimator'
p2082
g2082
S'a probability estimator for P(C)'
p2083
I0
I0
I00
tp2084
a(S'TConditionalProbabilityEstimatorList'
p2085
S'conditionalEstimators'
p2086
g2086
S'a probability estimator for P(C|A)'
p2087
I0
I0
I00
tp2088
a(S'bool'
p2089
S'normalizePredictions'
p2090
g2090
S'if true, classifier will normalize predictions'
p2091
I0
I0
I01
tp2092
a(S'float'
p2093
S'threshold'
p2094
g2094
S'threshold probability for class 1 (for binary classes only)'
p2095
I0
I0
I01
tp2096
ag907
ag83
ag87
asbsS'TGraph'
p2097
(i__main__
ClassDefinition
p2098
(dp2099
g4
I1
sg5
I01
sg6
g2097
sg7
S'TOrange'
p2100
sg9
(lp2101
sg11
I01
sg12
(lp2102
g1055
ag1059
ag1063
asbsS'TPreprocessor_addClassWeight'
p2103
(i__main__
ClassDefinition
p2104
(dp2105
g4
I1
sg5
I01
sg6
g2103
sg7
S'TPreprocessor'
p2106
sg9
(lp2107
sg11
I00
sg12
(lp2108
(S'TFloatList'
p2109
S'classWeights'
p2110
g2110
S'weights of examples of particular classes'
p2111
I0
I0
I00
tp2112
a(S'bool'
p2113
S'equalize'
p2114
g2114
S'reweight examples to equalize class proportions'
p2115
I0
I0
I01
tp2116
a(S'TRandomGenerator'
p2117
S'randomGenerator'
p2118
g2118
S'random number generator'
p2119
I0
I0
I00
tp2120
asbsS'TStopIMClusteringByAssessor'
p2121
(i__main__
ClassDefinition
p2122
(dp2123
g4
I1
sg5
I01
sg6
g2121
sg7
S'TOrange'
p2124
sg9
(lp2125
sg11
I01
sg12
(lp2126
sbsS'TValueFilter_continuous'
p2127
(i__main__
ClassDefinition
p2128
(dp2129
g4
I1
sg5
I01
sg6
g2127
sg7
S'TValueFilter'
p2130
sg9
(lp2131
sg11
I00
sg12
(lp2132
(S'float'
p2133
S'min'
p2134
(g2134
S'ref'
p2135
tp2136
S' reference value (lower bound for interval operators)'
p2137
I0
I0
I01
tp2138
a(S'float'
p2139
S'max'
p2140
g2140
S'upper bound for interval operators'
p2141
I0
I0
I01
tp2142
a(S'bool'
p2143
S'outside'
p2144
g2144
S'obsolete: if true, the filter accepts the values outside the interval, not inside'
p2145
I0
I0
I01
tp2146
a(S'int'
p2147
S'oper'
p2148
g2148
S'operator'
p2149
I0
I0
I01
tp2150
ag673
ag677
asbsS'TAssociationRule'
p2151
(i__main__
ClassDefinition
p2152
(dp2153
g4
I1
sg5
I01
sg6
g2151
sg7
S'TOrange'
p2154
sg9
(lp2155
sg11
I00
sg12
(lp2156
(S'TExample'
p2157
S'left'
p2158
g2158
S'left side of the rule'
p2159
I0
I0
I00
tp2160
a(S'TExample'
p2161
S'right'
p2162
g2162
S'right side of the rule'
p2163
I0
I0
I00
tp2164
a(S'float'
p2165
S'support'
p2166
g2166
S'support for the rule'
p2167
I0
I0
I01
tp2168
a(S'float'
p2169
S'confidence'
p2170
g2170
S'confidence of the rule'
p2171
I0
I0
I01
tp2172
a(S'float'
p2173
S'coverage'
p2174
g2174
S"rule's coverage"
p2175
I0
I0
I01
tp2176
a(S'float'
p2177
S'strength'
p2178
g2178
S"rule's strength"
p2179
I0
I0
I01
tp2180
a(S'float'
p2181
S'lift'
p2182
g2182
S"rule's lift"
p2183
I0
I0
I01
tp2184
a(S'float'
p2185
S'leverage'
p2186
g2186
S"rule's leverage"
p2187
I0
I0
I01
tp2188
a(S'float'
p2189
S'nAppliesLeft'
p2190
g2190
S"number of examples covered by the rule's left side "
p2191
I0
I0
I01
tp2192
a(S'float'
p2193
S'nAppliesRight'
p2194
g2194
S"number of examples covered by the rule's right side "
p2195
I0
I0
I01
tp2196
a(S'float'
p2197
S'nAppliesBoth'
p2198
g2198
S'number of examples covered by the rule'
p2199
I0
I0
I01
tp2200
a(S'float'
p2201
S'nExamples'
p2202
g2202
S'number of learning examples'
p2203
I0
I0
I01
tp2204
a(S'int'
p2205
S'nLeft'
p2206
g2206
S"number of items on the rule's left side"
p2207
I0
I0
I01
tp2208
a(S'int'
p2209
S'nRight'
p2210
g2210
S"number of items on the rule's right side"
p2211
I0
I0
I01
tp2212
asbsS'TValueFilter'
p2213
(i__main__
ClassDefinition
p2214
(dp2215
g4
I1
sg5
I01
sg6
g2213
sg7
S'TOrange'
p2216
sg9
(lp2217
sg11
I01
sg12
(lp2218
g673
ag677
asbsS'TClustersFromDistributions'
p2219
(i__main__
ClassDefinition
p2220
(dp2221
g4
I1
sg5
I01
sg6
g2219
sg7
S'TOrange'
p2222
sg9
(lp2223
sg11
I01
sg12
(lp2224
sbsS'TVariable'
p2225
(i__main__
ClassDefinition
p2226
(dp2227
g4
I1
sg5
I01
sg6
g2225
sg7
S'TOrange'
p2228
sg9
(lp2229
sg11
I01
sg12
(lp2230
g241
ag245
ag249
ag253
ag257
ag261
ag265
asbsS'TNoiseValuesGenerator'
p2231
(i__main__
ClassDefinition
p2232
(dp2233
g4
I1
sg5
I01
sg6
g2231
sg7
S'TChangeExampleGenerator'
p2234
sg9
(lp2235
sg11
I00
sg12
(lp2236
(S'TIntFloatList'
p2237
S'replaceProbabilities'
p2238
g2238
S"probabilities for replacing attributes' values"
p2239
I0
I0
I00
tp2240
a(S'TRandomGenerator'
p2241
S'randomGenerator'
p2242
g2242
S'random generator'
p2243
I0
I0
I00
tp2244
ag137
ag141
asbsS'TFilter_sameValue'
p2245
(i__main__
ClassDefinition
p2246
(dp2247
g4
I1
sg5
I01
sg6
g2245
sg7
S'TFilter'
p2248
sg9
(lp2249
sg11
I00
sg12
(lp2250
(S'int'
p2251
S'position'
p2252
g2252
S'position of the observed attribute'
p2253
I0
I0
I01
tp2254
a(S'TValue'
p2255
S'value'
p2256
g2256
S'value that the selected examples should have'
p2257
I0
I0
I01
tp2258
ag437
ag441
asbsS'TEquiNDiscretization'
p2259
(i__main__
ClassDefinition
p2260
(dp2261
g4
I1
sg5
I01
sg6
g2259
sg7
S'TDiscretization'
p2262
sg9
(lp2263
sg11
I00
sg12
(lp2264
(S'int'
p2265
S'numberOfIntervals'
p2266
g2266
S'number of intervals'
p2267
I0
I0
I01
tp2268
a(S'bool'
p2269
S'recursiveDivision'
p2270
g2270
S'find cut-off points by recursive division (default = true)'
p2271
I0
I0
I01
tp2272
asbsS'TImputerConstructor_average'
p2273
(i__main__
ClassDefinition
p2274
(dp2275
g4
I1
sg5
I01
sg6
g2273
sg7
S'TImputerConstructor'
p2276
sg9
(lp2277
sg11
I00
sg12
(lp2278
g151
asbsS'TDomainBasicAttrStat'
p2279
(i__main__
ClassDefinition
p2280
(dp2281
g4
I1
sg5
I01
sg6
g2279
sg7
g1360
sg9
(lp2282
sg11
I00
sg12
(lp2283
sbsS'TStopDistributionClustering'
p2284
(i__main__
ClassDefinition
p2285
(dp2286
g4
I1
sg5
I01
sg6
g2284
sg7
S'TOrange'
p2287
sg9
(lp2288
sg11
I01
sg12
(lp2289
sbsS'TImputerConstructor_random'
p2290
(i__main__
ClassDefinition
p2291
(dp2292
g4
I1
sg5
I01
sg6
g2290
sg7
S'TImputerConstructor'
p2293
sg9
(lp2294
sg11
I00
sg12
(lp2295
(S'bool'
p2296
S'deterministic'
p2297
g2297
S"tells whether to initialize random by example's CRC (default: false)"
p2298
I0
I0
I01
tp2299
ag151
asbsS'TCostWrapperClassifier'
p2300
(i__main__
ClassDefinition
p2301
(dp2302
g4
I1
sg5
I01
sg6
g2300
sg7
S'TClassifier'
p2303
sg9
(lp2304
sg11
I00
sg12
(lp2305
(S'TClassifier'
p2306
S'classifier'
p2307
g2307
S'basic classifier'
p2308
I0
I0
I00
tp2309
a(S'TCostMatrix'
p2310
S'costMatrix'
p2311
g2311
S'cost matrix'
p2312
I0
I0
I00
tp2313
ag83
ag87
asbsS'TPreprocessor_ignore'
p2314
(i__main__
ClassDefinition
p2315
(dp2316
g4
I1
sg5
I01
sg6
g2314
sg7
S'TPreprocessor'
p2317
sg9
(lp2318
sg11
I00
sg12
(lp2319
(S'TVarList'
p2320
S'attributes'
p2321
g2321
S'tells which attributes to remove'
p2322
I0
I0
I00
tp2323
asbsS'TC45TreeNode'
p2324
(i__main__
ClassDefinition
p2325
(dp2326
g4
I1
sg5
I01
sg6
g2324
sg7
S'TOrange'
p2327
sg9
(lp2328
sg11
I00
sg12
(lp2329
(S'int'
p2330
S'nodeType'
p2331
g2331
S'0 = leaf,  1 = branch,  2 = cut,  3 = subset'
p2332
I0
I0
I01
tp2333
a(S'TValue'
p2334
S'leaf'
p2335
g2335
S'most frequent class at this node'
p2336
I0
I0
I01
tp2337
a(S'float'
p2338
S'items'
p2339
g2339
S'no of items at this node'
p2340
I0
I0
I01
tp2341
a(S'TDiscDistribution'
p2342
S'classDist'
p2343
g2343
S'class distribution of items'
p2344
I0
I0
I00
tp2345
a(S'TVariable'
p2346
S'tested'
p2347
g2347
S'attribute referenced in test'
p2348
I0
I0
I00
tp2349
a(S'float'
p2350
S'cut'
p2351
g2351
S'threshold for continuous attribute'
p2352
I0
I0
I01
tp2353
a(S'float'
p2354
S'lower'
p2355
g2355
S'lower limit of soft threshold'
p2356
I0
I0
I01
tp2357
a(S'float'
p2358
S'upper'
p2359
g2359
S'upper limit of soft threshold'
p2360
I0
I0
I01
tp2361
a(S'TIntList'
p2362
S'mapping'
p2363
g2363
S'mapping for discrete value'
p2364
I0
I0
I00
tp2365
a(S'TC45TreeNodeList'
p2366
S'branch'
p2367
g2367
S'branch[x] = (sub)tree for outcome x */'
p2368
I0
I0
I00
tp2369
asbsS'TMeasureAttribute_Python'
p2370
(i__main__
ClassDefinition
p2371
(dp2372
g4
I1
sg5
I01
sg6
g2370
sg7
S'TMeasureAttribute'
p2373
sg9
(lp2374
sg11
I00
sg12
(lp2375
g567
ag571
ag575
asbsS'TDistributionAssessor_Measure'
p2376
(i__main__
ClassDefinition
p2377
(dp2378
g4
I1
sg5
I01
sg6
g2376
sg7
S'TDistributionAssessor'
p2379
sg9
(lp2380
sg11
I00
sg12
(lp2381
(S'TMeasureAttribute'
p2382
S'measure'
p2383
g2383
S'attribute quality measure'
p2384
I0
I0
I00
tp2385
asbsS'TDistributionAssessor_m'
p2386
(i__main__
ClassDefinition
p2387
(dp2388
g4
I1
sg5
I01
sg6
g2386
sg7
S'TDistributionAssessor'
p2389
sg9
(lp2390
sg11
I00
sg12
(lp2391
(S'float'
p2392
g805
g805
S'm for m-estimate'
p2393
I0
I0
I01
tp2394
asbsS'TClassifierRandomGenerator'
p2395
(i__main__
ClassDefinition
p2396
(dp2397
g4
I1
sg5
I01
sg6
g2395
sg7
S'TExampleGenerator'
p2398
sg9
(lp2399
sg11
I00
sg12
(lp2400
(S'TClassifier'
p2401
S'classify'
p2402
g2402
S'classifier'
p2403
I0
I0
I00
tp2404
a(S'int'
p2405
S'noOfEx'
p2406
g2406
S'number of examples'
p2407
I0
I0
I01
tp2408
ag137
ag141
asbsS'TExamplesDistance_Hamiltonian'
p2409
(i__main__
ClassDefinition
p2410
(dp2411
g4
I1
sg5
I01
sg6
g2409
sg7
S'TExamplesDistance'
p2412
sg9
(lp2413
sg11
I00
sg12
(lp2414
(S'bool'
p2415
S'ignoreClass'
p2416
g2416
S'if true (default), class value is ignored when computing distances'
p2417
I0
I0
I01
tp2418
a(S'bool'
p2419
S'ignoreUnknowns'
p2420
g2420
S'if true (default: false) unknown values are ignored in computation'
p2421
I0
I0
I01
tp2422
asbsS'TThresholdDiscretizer'
p2423
(i__main__
ClassDefinition
p2424
(dp2425
g4
I1
sg5
I01
sg6
g2423
sg7
S'TDiscretizer'
p2426
sg9
(lp2427
sg11
I00
sg12
(lp2428
(S'float'
p2429
S'threshold'
p2430
g2430
S'threshold'
p2431
I0
I0
I01
tp2432
ag501
asbsS'TExampleTable'
p2433
(i__main__
ClassDefinition
p2434
(dp2435
g4
I1
sg5
I01
sg6
g2433
sg7
S'TExampleGenerator'
p2436
sg9
(lp2437
sg11
I00
sg12
(lp2438
(S'TRandomGenerator'
p2439
S'randomGenerator'
p2440
g2440
S'random generator used by randomExample'
p2441
I0
I0
I00
tp2442
a(S'TExampleGenerator'
p2443
S'lock'
p2444
g2444
S'the real owner of examples'
p2445
I01
I0
I00
tp2446
a(S'bool'
p2447
S'ownsExamples'
p2448
g2448
S'if false, examples in this table are references to examples in another table'
p2449
I01
I0
I01
tp2450
ag137
ag141
asbsS'TTreeSplitConstructor_Threshold'
p2451
(i__main__
ClassDefinition
p2452
(dp2453
g4
I1
sg5
I01
sg6
g2451
sg7
S'TTreeSplitConstructor_Measure'
p2454
sg9
(lp2455
sg11
I00
sg12
(lp2456
g881
ag885
ag889
asbsS'TStopDistributionClustering_n'
p2457
(i__main__
ClassDefinition
p2458
(dp2459
g4
I1
sg5
I01
sg6
g2457
sg7
S'TStopDistributionClustering'
p2460
sg9
(lp2461
sg11
I00
sg12
(lp2462
(S'int'
p2463
g1314
g1314
S'number of clusters'
p2464
I0
I0
I01
tp2465
asbsS'TLWRLearner'
p2466
(i__main__
ClassDefinition
p2467
(dp2468
g4
I1
sg5
I01
sg6
g2466
sg7
S'TLearner'
p2469
sg9
(lp2470
sg11
I00
sg12
(lp2471
(S'TExamplesDistanceConstructor'
p2472
S'distanceConstructor'
p2473
g2473
S'constructor for object that will find the nearest neighbours'
p2474
I0
I0
I00
tp2475
a(S'TLinRegLearner'
p2476
S'linRegLearner'
p2477
g2477
S'learner that performs local linear regression'
p2478
I0
I0
I00
tp2479
a(S'float'
p2480
g801
g801
S'number of neighbours'
p2481
I0
I0
I01
tp2482
a(S'bool'
p2483
S'rankWeight'
p2484
g2484
S'use ranks instead of distances'
p2485
I0
I0
I01
tp2486
ag97
asbsS'TTreeExampleSplitter_UnknownsAsSelector'
p2487
(i__main__
ClassDefinition
p2488
(dp2489
g4
I1
sg5
I01
sg6
g2487
sg7
S'TTreeExampleSplitter'
p2490
sg9
(lp2491
sg11
I00
sg12
(lp2492
sbsS'TClassifier_Python'
p2493
(i__main__
ClassDefinition
p2494
(dp2495
g4
I1
sg5
I01
sg6
g2493
sg7
S'TClassifier'
p2496
sg9
(lp2497
sg11
I00
sg12
(lp2498
g83
ag87
asbsS'TFilter_isDefined'
p2499
(i__main__
ClassDefinition
p2500
(dp2501
g4
I1
sg5
I01
sg6
g2499
sg7
S'TFilter'
p2502
sg9
(lp2503
sg11
I00
sg12
(lp2504
(S'TAttributedBoolList'
p2505
S'check'
p2506
g2506
S'tells which attributes to check; checks all if the list is empty'
p2507
I01
I0
I00
tp2508
ag437
ag441
asbsS'TRemoveRedundantByQuality'
p2509
(i__main__
ClassDefinition
p2510
(dp2511
g4
I1
sg5
I01
sg6
g2509
sg7
S'TRemoveRedundant'
p2512
sg9
(lp2513
sg11
I00
sg12
(lp2514
(S'bool'
p2515
S'remeasure'
p2516
g2516
S'reapply the measure after removal'
p2517
I0
I0
I01
tp2518
a(S'float'
p2519
S'minQuality'
p2520
g2520
S'minimal acceptable quality'
p2521
I0
I0
I01
tp2522
a(S'int'
p2523
S'removeBut'
p2524
g2524
S'the desired number of attributes'
p2525
I0
I0
I01
tp2526
a(S'TMeasureAttribute'
p2527
S'measure'
p2528
g2528
S'attribute quality measure'
p2529
I0
I0
I00
tp2530
ag927
asbsS'TGraphAsList'
p2531
(i__main__
ClassDefinition
p2532
(dp2533
g4
I1
sg5
I01
sg6
g2531
sg7
S'TGraph'
p2534
sg9
(lp2535
sg11
I00
sg12
(lp2536
g1055
ag1059
ag1063
asbsS'TProbabilityEstimatorConstructor_m'
p2537
(i__main__
ClassDefinition
p2538
(dp2539
g4
I1
sg5
I01
sg6
g2537
sg7
S'TProbabilityEstimatorConstructor'
p2540
sg9
(lp2541
sg11
I00
sg12
(lp2542
(S'float'
p2543
g805
g805
S'parameter m for m-estimation'
p2544
I0
I0
I01
tp2545
a(S'bool'
p2546
S'renormalize'
p2547
g2547
S'computes the estimate on the original (not the normalized) distribution'
p2548
I0
I0
I01
tp2549
asbsS'TDistanceMap'
p2550
(i__main__
ClassDefinition
p2551
(dp2552
g4
I1
sg5
I01
sg6
g2550
sg7
S'TOrange'
p2553
sg9
(lp2554
sg11
I00
sg12
(lp2555
(S'int'
p2556
S'dim'
p2557
g2557
S'bitmap dimension (in cells)'
p2558
I01
I0
I01
tp2559
a(S'int'
p2560
S'matrixType'
p2561
g2561
S'0 lower, 1 upper, 2 symmetric'
p2562
I0
I0
I01
tp2563
a(S'TIntList'
p2564
S'elementIndices'
p2565
g2565
S'indices to elements (one for row + one at the end)'
p2566
I01
I0
I00
tp2567
asbsS'TDistanceMapConstructor'
p2568
(i__main__
ClassDefinition
p2569
(dp2570
g4
I1
sg5
I01
sg6
g2568
sg7
S'TOrange'
p2571
sg9
(lp2572
sg11
I00
sg12
(lp2573
(S'TSymMatrix'
p2574
S'distanceMatrix'
p2575
g2575
S'distance matrix'
p2576
I0
I0
I00
tp2577
a(S'TIntList'
p2578
S'order'
p2579
g2579
S'order of elements'
p2580
I0
I0
I00
tp2581
asbsS'TTransformValue'
p2582
(i__main__
ClassDefinition
p2583
(dp2584
g4
I1
sg5
I01
sg6
g2582
sg7
S'TOrange'
p2585
sg9
(lp2586
sg11
I01
sg12
(lp2587
g501
asbsS'TComputeDomainContingency_DomainTransformation'
p2588
(i__main__
ClassDefinition
p2589
(dp2590
g4
I1
sg5
I01
sg6
g2588
sg7
S'TComputeDomainContingency'
p2591
sg9
(lp2592
sg11
I00
sg12
(lp2593
(S'TDomainTransformerConstructor'
p2594
S'domainTransformerConstructor'
p2595
g2595
S'constructs a domain in which each attribute corresponds one of originals'
p2596
I0
I0
I00
tp2597
a(S'bool'
p2598
S'resultInOriginalDomain'
p2599
g2599
S'tells whether the resulting DomainContingency should consist of original attributes'
p2600
I0
I0
I01
tp2601
ag25
asbsS'TStopDistributionClustering_noBigChange'
p2602
(i__main__
ClassDefinition
p2603
(dp2604
g4
I1
sg5
I01
sg6
g2602
sg7
S'TStopDistributionClustering'
p2605
sg9
(lp2606
sg11
I00
sg12
(lp2607
sbsS'TTreePruner'
p2608
(i__main__
ClassDefinition
p2609
(dp2610
g4
I1
sg5
I01
sg6
g2608
sg7
S'TOrange'
p2611
sg9
(lp2612
sg11
I01
sg12
(lp2613
sbsS'TImputer_Python'
p2614
(i__main__
ClassDefinition
p2615
(dp2616
g4
I1
sg5
I01
sg6
g2614
sg7
S'TImputer'
p2617
sg9
(lp2618
sg11
I00
sg12
(lp2619
sbsS'TRuleLearner'
p2620
(i__main__
ClassDefinition
p2621
(dp2622
g4
I1
sg5
I01
sg6
g2620
sg7
S'TLearner'
p2623
sg9
(lp2624
sg11
I00
sg12
(lp2625
(S'TRuleDataStoppingCriteria'
p2626
S'dataStopping'
p2627
g2627
g1429
I0
I0
I00
tp2628
a(S'TRuleStoppingCriteria'
p2629
S'ruleStopping'
p2630
g2630
g1429
I0
I0
I00
tp2631
a(S'TRuleCovererAndRemover'
p2632
S'coverAndRemove'
p2633
g2633
g1429
I0
I0
I00
tp2634
a(S'TRuleFinder'
p2635
S'ruleFinder'
p2636
g2636
g1429
I0
I0
I00
tp2637
a(S'TRuleClassifierConstructor'
p2638
S'classifierConstructor'
p2639
g2639
S'classifier'
p2640
I0
I0
I00
tp2641
a(S'TProgressCallback'
p2642
S'progressCallback'
p2643
g2643
S'progress callback function'
p2644
I0
I0
I00
tp2645
a(S'bool'
p2646
S'storeExamples'
p2647
g2647
g1429
I0
I0
I01
tp2648
a(S'int'
p2649
S'targetClass'
p2650
g2650
g1429
I0
I0
I01
tp2651
a(S'TRuleList'
p2652
S'baseRules'
p2653
g2653
g1429
I0
I0
I00
tp2654
ag97
asbsS'TOrdinal2Continuous'
p2655
(i__main__
ClassDefinition
p2656
(dp2657
g4
I1
sg5
I01
sg6
g2655
sg7
S'TTransformValue'
p2658
sg9
(lp2659
sg11
I00
sg12
(lp2660
(S'float'
p2661
S'factor'
p2662
g2662
S'number of values'
p2663
I0
I0
I01
tp2664
ag501
asbsS'TTreeSplitConstructor_Combined'
p2665
(i__main__
ClassDefinition
p2666
(dp2667
g4
I1
sg5
I01
sg6
g2665
sg7
S'TTreeSplitConstructor'
p2668
sg9
(lp2669
sg11
I00
sg12
(lp2670
(S'TTreeSplitConstructor'
p2671
S'discreteSplitConstructor'
p2672
g2672
S'split constructor for discrete attributes'
p2673
I0
I0
I00
tp2674
a(S'TTreeSplitConstructor'
p2675
S'continuousSplitConstructor'
p2676
g2676
S'split constructor for continuous attributes'
p2677
I0
I0
I00
tp2678
ag889
asbsS'TTransformValue_Python'
p2679
(i__main__
ClassDefinition
p2680
(dp2681
g4
I1
sg5
I01
sg6
g2679
sg7
S'TTransformValue'
p2682
sg9
(lp2683
sg11
I00
sg12
(lp2684
g501
asbsS'TRuleStoppingCriteria_Python'
p2685
(i__main__
ClassDefinition
p2686
(dp2687
g4
I1
sg5
I01
sg6
g2685
sg7
S'TRuleStoppingCriteria'
p2688
sg9
(lp2689
sg11
I00
sg12
(lp2690
sbsS'TRuleEvaluator_Python'
p2691
(i__main__
ClassDefinition
p2692
(dp2693
g4
I1
sg5
I01
sg6
g2691
sg7
S'TRuleEvaluator'
p2694
sg9
(lp2695
sg11
I00
sg12
(lp2696
sbsS'TIGBySorting'
p2697
(i__main__
ClassDefinition
p2698
(dp2699
g4
I1
sg5
I01
sg6
g2697
sg7
S'TIGConstructor'
p2700
sg9
(lp2701
sg11
I00
sg12
(lp2702
sbsS'TConditionalProbabilityEstimator_ByRows'
p2703
(i__main__
ClassDefinition
p2704
(dp2705
g4
I1
sg5
I01
sg6
g2703
sg7
S'TConditionalProbabilityEstimator'
p2706
sg9
(lp2707
sg11
I00
sg12
(lp2708
(S'TProbabilityEstimatorList'
p2709
S'estimatorList'
p2710
g2710
S'A list of probability estimators'
p2711
I0
I0
I00
tp2712
ag111
ag115
asbsS'TProgressCallback'
p2713
(i__main__
ClassDefinition
p2714
(dp2715
g4
I1
sg5
I01
sg6
g2713
sg7
S'TOrange'
p2716
sg9
(lp2717
sg11
I01
sg12
(lp2718
sbsS'THierarchicalClustering'
p2719
(i__main__
ClassDefinition
p2720
(dp2721
g4
I1
sg5
I01
sg6
g2719
sg7
S'TOrange'
p2722
sg9
(lp2723
sg11
I00
sg12
(lp2724
(S'int'
p2725
S'linkage'
p2726
g2726
S'linkage'
p2727
I0
I0
I01
tp2728
a(S'bool'
p2729
S'overwriteMatrix'
p2730
g2730
S'if true (default is false) it will use (and destroy) the distance matrix given as argument'
p2731
I0
I0
I01
tp2732
a(S'TProgressCallback'
p2733
S'progressCallback'
p2734
g2734
S'progress callback function'
p2735
I0
I0
I00
tp2736
asbsS'TRuleBeamInitializer_Default'
p2737
(i__main__
ClassDefinition
p2738
(dp2739
g4
I1
sg5
I01
sg6
g2737
sg7
S'TRuleBeamInitializer'
p2740
sg9
(lp2741
sg11
I00
sg12
(lp2742
sbsS'TClassifierFromVar'
p2743
(i__main__
ClassDefinition
p2744
(dp2745
g4
I1
sg5
I01
sg6
g2743
sg7
S'TClassifier'
p2746
sg9
(lp2747
sg11
I00
sg12
(lp2748
(S'TVariable'
p2749
S'whichVar'
p2750
(g2750
S'variable'
p2751
tp2752
S' variable'
p2753
I0
I0
I00
tp2754
a(S'TTransformValue'
p2755
S'transformer'
p2756
g2756
S'transformer'
p2757
I0
I0
I00
tp2758
a(S'TDistribution'
p2759
S'distributionForUnknown'
p2760
g2760
S'distribution for unknown value'
p2761
I0
I0
I00
tp2762
a(S'bool'
p2763
S'transformUnknowns'
p2764
g2764
S'if false (default), unknowns stay unknown or are changed into distribution if given'
p2765
I0
I0
I01
tp2766
ag83
ag87
asbsS'TIM'
p2767
(i__main__
ClassDefinition
p2768
(dp2769
g4
I1
sg5
I01
sg6
g2767
sg7
S'TOrange'
p2770
sg9
(lp2771
sg11
I00
sg12
(lp2772
(S'int'
p2773
S'varType'
p2774
g2774
S'class variable type'
p2775
I0
I0
I01
tp2776
a(S'TExampleTable'
p2777
S'rowExamples'
p2778
g2778
S'examples with free attributes for each row'
p2779
I0
I0
I00
tp2780
asbsS'TClassifier'
p2781
(i__main__
ClassDefinition
p2782
(dp2783
g4
I1
sg5
I01
sg6
g2781
sg7
S'TOrange'
p2784
sg9
(lp2785
sg11
I00
sg12
(lp2786
g83
ag87
asbsS'TTreeSplitConstructor_Python'
p2787
(i__main__
ClassDefinition
p2788
(dp2789
g4
I1
sg5
I01
sg6
g2787
sg7
S'TTreeSplitConstructor'
p2790
sg9
(lp2791
sg11
I00
sg12
(lp2792
g889
asbsS'TIG'
p2793
(i__main__
ClassDefinition
p2794
(dp2795
g4
I1
sg5
I01
sg6
g2793
sg7
S'TOrange'
p2796
sg9
(lp2797
sg11
I00
sg12
(lp2798
sbsS'TMeasureAttribute_relief'
p2799
(i__main__
ClassDefinition
p2800
(dp2801
g4
I1
sg5
I01
sg6
g2799
sg7
S'TMeasureAttribute'
p2802
sg9
(lp2803
S'prevGenerator'
p2804
aS'prevDomain'
p2805
asg11
I00
sg12
(lp2806
(S'float'
p2807
g801
g801
S'number of neighbours'
p2808
I0
I0
I01
tp2809
a(S'float'
p2810
g805
g805
S'number of reference examples'
p2811
I0
I0
I01
tp2812
ag567
ag571
ag575
asbsS'TTreeExampleSplitter_Python'
p2813
(i__main__
ClassDefinition
p2814
(dp2815
g4
I1
sg5
I01
sg6
g2813
sg7
S'TTreeExampleSplitter'
p2816
sg9
(lp2817
sg11
I00
sg12
(lp2818
sbsS'TKernelFunc_Python'
p2819
(i__main__
ClassDefinition
p2820
(dp2821
g4
I1
sg5
I01
sg6
g2819
sg7
S'TKernelFunc'
p2822
sg9
(lp2823
sg11
I00
sg12
(lp2824
sbsS'TAdapterGenerator'
p2825
(i__main__
ClassDefinition
p2826
(dp2827
g4
I1
sg5
I01
sg6
g2825
sg7
S'TExampleGenerator'
p2828
sg9
(lp2829
sg11
I00
sg12
(lp2830
g137
ag141
asbsS'TIMFromExamples'
p2831
(i__main__
ClassDefinition
p2832
(dp2833
g4
I1
sg5
I01
sg6
g2831
sg7
S'TOrange'
p2834
sg9
(lp2835
sg11
I01
sg12
(lp2836
sbsS'TFilter_random'
p2837
(i__main__
ClassDefinition
p2838
(dp2839
g4
I1
sg5
I01
sg6
g2837
sg7
S'TFilter'
p2840
sg9
(lp2841
sg11
I00
sg12
(lp2842
(S'float'
p2843
S'prob'
p2844
g2844
S'probability of selecting an example'
p2845
I0
I0
I01
tp2846
a(S'TRandomGenerator'
p2847
S'randomGenerator'
p2848
g2848
S'random generator'
p2849
I0
I0
I00
tp2850
ag437
ag441
asbsS'TC45ExampleGenerator'
p2851
(i__main__
ClassDefinition
p2852
(dp2853
g4
I1
sg5
I01
sg6
g2851
sg7
S'TFileExampleGenerator'
p2854
sg9
(lp2855
sg11
I00
sg12
(lp2856
(S'TBoolList'
p2857
S'skip'
p2858
g2858
S'a boolean list, one element per attribute, denoting which attributes to skip'
p2859
I0
I0
I00
tp2860
ag125
ag129
ag133
ag137
ag141
asbsS'TExamplesDistanceConstructor_Hamiltonian'
p2861
(i__main__
ClassDefinition
p2862
(dp2863
g4
I1
sg5
I01
sg6
g2861
sg7
S'TExamplesDistanceConstructor'
p2864
sg9
(lp2865
sg11
I00
sg12
(lp2866
(S'bool'
p2867
S'ignoreClass'
p2868
g2868
S'if true (default), class value is ignored when computing distances'
p2869
I0
I0
I01
tp2870
a(S'bool'
p2871
S'ignoreUnknowns'
p2872
g2872
S'if true (default: false) unknown values are ignored in computation'
p2873
I0
I0
I01
tp2874
ag1592
asbsS'TProbabilityEstimatorConstructor_loess'
p2875
(i__main__
ClassDefinition
p2876
(dp2877
g4
I1
sg5
I01
sg6
g2875
sg7
S'TProbabilityEstimatorConstructor'
p2878
sg9
(lp2879
sg11
I00
sg12
(lp2880
(S'float'
p2881
S'windowProportion'
p2882
g2882
S'The proportion of points in a window for LR'
p2883
I0
I0
I01
tp2884
a(S'int'
p2885
S'nPoints'
p2886
g2886
S'The number of points on curve (negative means the given number of points is inserted in each interval)'
p2887
I0
I0
I01
tp2888
a(S'int'
p2889
S'distributionMethod'
p2890
g2890
S"Meaning of the 'nPoints'"
p2891
I0
I0
I01
tp2892
asbsS'TLogRegFitter'
p2893
(i__main__
ClassDefinition
p2894
(dp2895
g4
I1
sg5
I01
sg6
g2893
sg7
S'TOrange'
p2896
sg9
(lp2897
sg11
I01
sg12
(lp2898
sbsS'TMakeRandomIndicesCV'
p2899
(i__main__
ClassDefinition
p2900
(dp2901
g4
I1
sg5
I01
sg6
g2899
sg7
S'TMakeRandomIndices'
p2902
sg9
(lp2903
sg11
I00
sg12
(lp2904
(S'int'
p2905
S'folds'
p2906
g2906
S'number of folds'
p2907
I0
I0
I01
tp2908
ag463
ag467
ag471
asbsS'TPreprocessor_removeDuplicates'
p2909
(i__main__
ClassDefinition
p2910
(dp2911
g4
I1
sg5
I01
sg6
g2909
sg7
S'TPreprocessor'
p2912
sg9
(lp2913
sg11
I00
sg12
(lp2914
sbsS'TTreeExampleSplitter_UnknownsAsBranchSizes'
p2915
(i__main__
ClassDefinition
p2916
(dp2917
g4
I1
sg5
I01
sg6
g2915
sg7
S'TTreeExampleSplitter'
p2918
sg9
(lp2919
sg11
I00
sg12
(lp2920
sbsS'TExamplesDistanceConstructor_Normalized'
p2921
(i__main__
ClassDefinition
p2922
(dp2923
g4
I1
sg5
I01
sg6
g2921
sg7
S'TExamplesDistanceConstructor'
p2924
sg9
(lp2925
sg11
I01
sg12
(lp2926
g1584
ag1588
ag1592
asbsS'TCostWrapperLearner'
p2927
(i__main__
ClassDefinition
p2928
(dp2929
g4
I1
sg5
I01
sg6
g2927
sg7
S'TLearner'
p2930
sg9
(lp2931
sg11
I00
sg12
(lp2932
(S'TLearner'
p2933
S'basicLearner'
p2934
g2934
S'basic learner'
p2935
I0
I0
I00
tp2936
a(S'TCostMatrix'
p2937
S'costMatrix'
p2938
g2938
S'cost matrix'
p2939
I0
I0
I00
tp2940
ag97
asbsS'TFindNearest'
p2941
(i__main__
ClassDefinition
p2942
(dp2943
g4
I1
sg5
I01
sg6
g2941
sg7
S'TOrange'
p2944
sg9
(lp2945
sg11
I01
sg12
(lp2946
g699
ag703
asbsS'TLogRegFitter_Cholesky'
p2947
(i__main__
ClassDefinition
p2948
(dp2949
g4
I1
sg5
I01
sg6
g2947
sg7
S'TLogRegFitter'
p2950
sg9
(lp2951
sg11
I00
sg12
(lp2952
sbsS'TDistributionAssessor_Laplace'
p2953
(i__main__
ClassDefinition
p2954
(dp2955
g4
I1
sg5
I01
sg6
g2953
sg7
S'TDistributionAssessor'
p2956
sg9
(lp2957
sg11
I00
sg12
(lp2958
sbsS'TColumnAssessor_Relief'
p2959
(i__main__
ClassDefinition
p2960
(dp2961
g4
I1
sg5
I01
sg6
g2959
sg7
S'TColumnAssessor'
p2962
sg9
(lp2963
sg11
I00
sg12
(lp2964
sbsS'TClassifierByLookupTable'
p2965
(i__main__
ClassDefinition
p2966
(dp2967
g4
I1
sg5
I01
sg6
g2965
sg7
S'TClassifier'
p2968
sg9
(lp2969
sg11
I01
sg12
(lp2970
g75
ag79
ag83
ag87
asbsS'TRuleBeamFinder'
p2971
(i__main__
ClassDefinition
p2972
(dp2973
g4
I1
sg5
I01
sg6
g2971
sg7
S'TRuleFinder'
p2974
sg9
(lp2975
sg11
I00
sg12
(lp2976
(S'TRuleBeamInitializer'
p2977
S'initializer'
p2978
g2978
g1429
I0
I0
I00
tp2979
a(S'TRuleBeamRefiner'
p2980
S'refiner'
p2981
g2981
g1429
I0
I0
I00
tp2982
a(S'TRuleBeamCandidateSelector'
p2983
S'candidateSelector'
p2984
g2984
g1429
I0
I0
I00
tp2985
a(S'TRuleBeamFilter'
p2986
S'ruleFilter'
p2987
g2987
g1429
I0
I0
I00
tp2988
a(S'TRuleValidator'
p2989
S'ruleStoppingValidator'
p2990
g2990
g1429
I0
I0
I00
tp2991
a(S'TRuleValidator'
p2992
S'validator'
p2993
g2993
g1429
I0
I0
I00
tp2994
a(S'TRuleEvaluator'
p2995
S'evaluator'
p2996
g2996
g1429
I0
I0
I00
tp2997
asbsS'TFilter'
p2998
(i__main__
ClassDefinition
p2999
(dp3000
g4
I1
sg5
I01
sg6
g2998
sg7
S'TOrange'
p3001
sg9
(lp3002
sg11
I01
sg12
(lp3003
g437
ag441
asbsS'TC45Classifier'
p3004
(i__main__
ClassDefinition
p3005
(dp3006
g4
I1
sg5
I01
sg6
g3004
sg7
S'TClassifierFD'
p3007
sg9
(lp3008
sg11
I00
sg12
(lp3009
(S'TC45TreeNode'
p3010
S'tree'
p3011
g3011
S'tree'
p3012
I0
I0
I00
tp3013
ag907
ag83
ag87
asbsS'TMeasureAttribute_cost'
p3014
(i__main__
ClassDefinition
p3015
(dp3016
g4
I1
sg5
I01
sg6
g3014
sg7
S'TMeasureAttributeFromProbabilities'
p3017
sg9
(lp3018
sg11
I00
sg12
(lp3019
(S'TCostMatrix'
p3020
S'cost'
p3021
g3021
S'cost matrix'
p3022
I0
I0
I00
tp3023
ag555
ag559
ag563
ag567
ag571
ag575
asbsS'TImputerConstructor_minimal'
p3024
(i__main__
ClassDefinition
p3025
(dp3026
g4
I1
sg5
I01
sg6
g3024
sg7
S'TImputerConstructor'
p3027
sg9
(lp3028
sg11
I00
sg12
(lp3029
g151
asbsS'TClustersFromIM'
p3030
(i__main__
ClassDefinition
p3031
(dp3032
g4
I1
sg5
I01
sg6
g3030
sg7
S'TOrange'
p3033
sg9
(lp3034
sg11
I01
sg12
(lp3035
sbsS'TFilter_values'
p3036
(i__main__
ClassDefinition
p3037
(dp3038
g4
I1
sg5
I01
sg6
g3036
sg7
S'TFilter'
p3039
sg9
(lp3040
sg11
I00
sg12
(lp3041
(S'TValueFilterList'
p3042
S'conditions'
p3043
g3043
S'a list of filters'
p3044
I0
I0
I00
tp3045
a(S'bool'
p3046
S'conjunction'
p3047
g3047
S'if true, filter computes conjunction, otherwise disjunction'
p3048
I0
I0
I01
tp3049
ag437
ag441
asbsS'TClassifierForKMWeight'
p3050
(i__main__
ClassDefinition
p3051
(dp3052
g4
I1
sg5
I01
sg6
g3050
sg7
S'TClassifier'
p3053
sg9
(lp3054
sg11
I00
sg12
(lp3055
(S'int'
p3056
S'whichID'
p3057
g3057
S'Id of meta variable for time'
p3058
I0
I0
I01
tp3059
a(S'TVariable'
p3060
S'outcomeVar'
p3061
g3061
S'outcome variable'
p3062
I0
I0
I00
tp3063
a(S'int'
p3064
S'failIndex'
p3065
g3065
S"index of 'fail' value"
p3066
I0
I0
I01
tp3067
a(S'TKaplanMeier'
p3068
S'kaplanMeier'
p3069
g3069
S'Kaplan-Meier curve'
p3070
I0
I0
I00
tp3071
ag83
ag87
asbsS'TSymMatrix'
p3072
(i__main__
ClassDefinition
p3073
(dp3074
g4
I1
sg5
I01
sg6
g3072
sg7
S'TOrange'
p3075
sg9
(lp3076
sg11
I00
sg12
(lp3077
(S'int'
p3078
S'dim'
p3079
g3079
S'matrix dimension'
p3080
I01
I0
I01
tp3081
a(S'int'
p3082
S'matrixType'
p3083
g3083
S'0 lower, 1 upper, 2 symmetric, 3 lower_filled, 4 upper_filled'
p3084
I0
I0
I01
tp3085
asbsS'TSVMLearner'
p3086
(i__main__
ClassDefinition
p3087
(dp3088
g4
I1
sg5
I01
sg6
g3086
sg7
S'TLearner'
p3089
sg9
(lp3090
sg11
I00
sg12
(lp3091
(S'int'
p3092
S'svm_type'
p3093
g3093
S'SVM type (C_SVC=0, NU_SVC, ONE_CLASS, EPSILON_SVR=3, NU_SVR=4)'
p3094
I0
I0
I01
tp3095
a(S'int'
p3096
S'kernel_type'
p3097
g3097
S'kernel type (LINEAR=0, POLY, RBF, SIGMOID, CUSTOM=4)'
p3098
I0
I0
I01
tp3099
a(S'float'
p3100
S'degree'
p3101
g3101
S'polynomial kernel degree'
p3102
I0
I0
I01
tp3103
a(S'float'
p3104
S'gamma'
p3105
g3105
S'poly/rbf/sigm parameter'
p3106
I0
I0
I01
tp3107
a(S'float'
p3108
S'coef0'
p3109
g3109
S'poly/sigm parameter'
p3110
I0
I0
I01
tp3111
a(S'float'
p3112
S'cache_size'
p3113
g3113
S'cache size in MB'
p3114
I0
I0
I01
tp3115
a(S'float'
p3116
S'eps'
p3117
g3117
S'stopping criteria'
p3118
I0
I0
I01
tp3119
a(S'float'
p3120
S'C'
p3121
g3121
S'for C_SVC and C_SVR'
p3122
I0
I0
I01
tp3123
a(S'float'
p3124
S'nu'
p3125
g3125
S'for NU_SVC and ONE_CLASS'
p3126
I0
I0
I01
tp3127
a(S'float'
p3128
g1787
g1787
S'for C_SVR'
p3129
I0
I0
I01
tp3130
a(S'int'
p3131
S'shrinking'
p3132
g3132
S'shrinking'
p3133
I0
I0
I01
tp3134
a(S'int'
p3135
S'probability'
p3136
g3136
S'probability'
p3137
I0
I0
I01
tp3138
a(S'TKernelFunc'
p3139
S'kernelFunc'
p3140
g3140
S'custom kernel function'
p3141
I0
I0
I00
tp3142
ag97
asbsS'TImputerConstructor_defaults'
p3143
(i__main__
ClassDefinition
p3144
(dp3145
g4
I1
sg5
I01
sg6
g3143
sg7
S'TImputerConstructor'
p3146
sg9
(lp3147
sg11
I00
sg12
(lp3148
(S'TExample'
p3149
S'defaults'
p3150
g3150
S'default values to be imputed instead missing ones'
p3151
I0
I0
I00
tp3152
ag151
asbsS'TConditionalProbabilityEstimatorConstructor'
p3153
(i__main__
ClassDefinition
p3154
(dp3155
g4
I1
sg5
I01
sg6
g3153
sg7
S'TOrange'
p3156
sg9
(lp3157
sg11
I01
sg12
(lp3158
sbsS'TPreprocessor_takeMissingClasses'
p3159
(i__main__
ClassDefinition
p3160
(dp3161
g4
I1
sg5
I01
sg6
g3159
sg7
S'TPreprocessor'
p3162
sg9
(lp3163
sg11
I00
sg12
(lp3164
sbsS'TClustersFromIMByAssessor'
p3165
(i__main__
ClassDefinition
p3166
(dp3167
g4
I1
sg5
I01
sg6
g3165
sg7
S'TClustersFromIM'
p3168
sg9
(lp3169
sg11
I00
sg12
(lp3170
(S'TColumnAssessor'
p3171
S'columnAssessor'
p3172
g3172
S'column quality assessor'
p3173
I0
I0
I00
tp3174
a(S'TStopIMClusteringByAssessor'
p3175
S'stopCriterion'
p3176
g3176
S'stop criterion'
p3177
I0
I0
I00
tp3178
asbsS'TRuleValidator_LRS'
p3179
(i__main__
ClassDefinition
p3180
(dp3181
g4
I1
sg5
I01
sg6
g3179
sg7
S'TRuleValidator'
p3182
sg9
(lp3183
sg11
I00
sg12
(lp3184
(S'float'
p3185
S'alpha'
p3186
g3186
g1429
I0
I0
I01
tp3187
a(S'float'
p3188
S'min_coverage'
p3189
g3189
g1429
I0
I0
I01
tp3190
a(S'float'
p3191
S'max_rule_complexity'
p3192
g3192
g1429
I0
I0
I01
tp3193
a(S'float'
p3194
S'min_quality'
p3195
g3195
g1429
I0
I0
I01
tp3196
asbsS'TLogRegFitter_Python'
p3197
(i__main__
ClassDefinition
p3198
(dp3199
g4
I1
sg5
I01
sg6
g3197
sg7
S'TLogRegFitter'
p3200
sg9
(lp3201
sg11
I00
sg12
(lp3202
sbsS'TMakeRandomIndices2'
p3203
(i__main__
ClassDefinition
p3204
(dp3205
g4
I1
sg5
I01
sg6
g3203
sg7
S'TMakeRandomIndices'
p3206
sg9
(lp3207
sg11
I00
sg12
(lp3208
(S'float'
p3209
S'p0'
p3210
g3210
S"a proportion or a number of 0's"
p3211
I0
I0
I01
tp3212
ag463
ag467
ag471
asbsS'TValueList'
p3213
(i__main__
ClassDefinition
p3214
(dp3215
g4
I1
sg5
I01
sg6
g3213
sg7
g1360
sg9
(lp3216
sg11
I00
sg12
(lp3217
(S'TVariable'
p3218
S'variable'
p3219
g3219
S'the variable to which the list applies'
p3220
I0
I0
I00
tp3221
asbsS'TTreeExampleSplitter_UnknownsToCommon'
p3222
(i__main__
ClassDefinition
p3223
(dp3224
g4
I1
sg5
I01
sg6
g3222
sg7
S'TTreeExampleSplitter'
p3225
sg9
(lp3226
sg11
I00
sg12
(lp3227
sbsS'TContDistribution'
p3228
(i__main__
ClassDefinition
p3229
(dp3230
g4
I1
sg5
I01
sg6
g3228
sg7
S'TDistribution'
p3231
sg9
(lp3232
sg11
I00
sg12
(lp3233
(S'TFloatList'
p3234
S'variances'
p3235
g3235
S'variances'
p3236
I0
I0
I00
tp3237
a(S'float'
p3238
S'sum'
p3239
g3239
S'weighted sum of elements (i.e. N*average)'
p3240
I01
I0
I01
tp3241
a(S'float'
p3242
S'sum2'
p3243
g3243
S'weighted sum of squares of elements'
p3244
I01
I0
I01
tp3245
ag735
ag739
ag743
ag747
ag751
ag755
ag759
ag763
asbsS'TTreeDescender_UnknownMergeAsSelector'
p3246
(i__main__
ClassDefinition
p3247
(dp3248
g4
I1
sg5
I01
sg6
g3246
sg7
g1091
sg9
(lp3249
sg11
I0
sg12
(lp3250
sbsS'TContingencyAttrClass'
p3251
(i__main__
ClassDefinition
p3252
(dp3253
g4
I1
sg5
I01
sg6
g3251
sg7
S'TContingencyClass'
p3254
sg9
(lp3255
sg11
I00
sg12
(lp3256
g1204
ag1210
ag1214
ag1218
ag1222
asbsS'TDomainTransformerConstructor'
p3257
(i__main__
ClassDefinition
p3258
(dp3259
g4
I1
sg5
I01
sg6
g3257
sg7
S'TOrange'
p3260
sg9
(lp3261
sg11
I01
sg12
(lp3262
(S'bool'
p3263
S'preservesOrder'
p3264
g3264
S'a flag, telling that original attributes have corresponding attribute in the same order'
p3265
I01
I0
I01
tp3266
a(S'bool'
p3267
S'preservesAttributes'
p3268
g3268
S'a flag, telling whether each original has a corresponding new attribute'
p3269
I01
I0
I01
tp3270
asbsS'TPythonValueSpecial'
p3271
(i__main__
ClassDefinition
p3272
(dp3273
g4
I1
sg5
I01
sg6
g3271
sg7
S'TOrange'
p3274
sg9
(lp3275
sg11
I00
sg12
(lp3276
(S'int'
p3277
S'valueType'
p3278
g3278
S'value type'
p3279
I0
I0
I01
tp3280
asbsS'TIGConstructor'
p3281
(i__main__
ClassDefinition
p3282
(dp3283
g4
I1
sg5
I01
sg6
g3281
sg7
S'TOrange'
p3284
sg9
(lp3285
sg11
I01
sg12
(lp3286
sbsS'TProbabilityEstimatorConstructor'
p3287
(i__main__
ClassDefinition
p3288
(dp3289
g4
I1
sg5
I01
sg6
g3287
sg7
S'TOrange'
p3290
sg9
(lp3291
sg11
I01
sg12
(lp3292
sbsS'TFloatVariable'
p3293
(i__main__
ClassDefinition
p3294
(dp3295
g4
I1
sg5
I01
sg6
g3293
sg7
S'TVariable'
p3296
sg9
(lp3297
sg11
I00
sg12
(lp3298
(S'float'
p3299
S'startValue'
p3300
g3300
S'lowest value'
p3301
I0
I0
I01
tp3302
a(S'float'
p3303
S'endValue'
p3304
g3304
S'highest value'
p3305
I0
I0
I01
tp3306
a(S'float'
p3307
S'stepValue'
p3308
g3308
S'step'
p3309
I0
I0
I01
tp3310
a(S'int'
p3311
S'numberOfDecimals'
p3312
g3312
S'number of digits after decimal point'
p3313
I0
I0
I01
tp3314
a(S'bool'
p3315
S'scientificFormat'
p3316
g3316
S'use scientific format in output'
p3317
I0
I0
I01
tp3318
a(S'int'
p3319
S'adjustDecimals'
p3320
g3320
S"adjust number of decimals according to the values converted (0 - no, 1 - yes, 2 - yes, but haven't seen any yet)"
p3321
I0
I0
I01
tp3322
ag241
ag245
ag249
ag253
ag257
ag261
ag265
asbsS'TImputer_random'
p3323
(i__main__
ClassDefinition
p3324
(dp3325
g4
I1
sg5
I01
sg6
g3323
sg7
S'TImputer'
p3326
sg9
(lp3327
sg11
I00
sg12
(lp3328
(S'bool'
p3329
S'imputeClass'
p3330
g3330
S'Tells whether to impute the class values, too (default: true)'
p3331
I0
I0
I01
tp3332
a(S'bool'
p3333
S'deterministic'
p3334
g3334
S"tells whether to initialize random by example's CRC (default: false)"
p3335
I0
I0
I01
tp3336
asbsS'TProbabilityEstimatorConstructor_kernel'
p3337
(i__main__
ClassDefinition
p3338
(dp3339
g4
I1
sg5
I01
sg6
g3337
sg7
S'TProbabilityEstimatorConstructor'
p3340
sg9
(lp3341
sg11
I00
sg12
(lp3342
(S'float'
p3343
S'minImpact'
p3344
g3344
S'Minimal impact the point must have to be counted'
p3345
I0
I0
I01
tp3346
a(S'float'
p3347
S'smoothing'
p3348
g3348
S'Smoothing factor'
p3349
I0
I0
I01
tp3350
a(S'int'
p3351
S'nPoints'
p3352
g3352
S'Number of points for curve (negative means the given number of points is inserted in each interval)'
p3353
I0
I0
I01
tp3354
asbsS'TRuleCovererAndRemover_Default'
p3355
(i__main__
ClassDefinition
p3356
(dp3357
g4
I1
sg5
I01
sg6
g3355
sg7
S'TRuleCovererAndRemover'
p3358
sg9
(lp3359
sg11
I00
sg12
(lp3360
sbsS'TP2NN'
p3361
(i__main__
ClassDefinition
p3362
(dp3363
g4
I1
sg5
I01
sg6
g3361
sg7
S'TPNN'
p3364
sg9
(lp3365
sg11
I00
sg12
(lp3366
g1536
ag1540
ag1544
ag1548
ag1552
ag1556
ag1560
ag907
ag83
ag87
asbsS'TFilter_Python'
p3367
(i__main__
ClassDefinition
p3368
(dp3369
g4
I1
sg5
I01
sg6
g3367
sg7
S'TFilter'
p3370
sg9
(lp3371
sg11
I00
sg12
(lp3372
g437
ag441
asbsS'TExamplesDistanceConstructor_Maximal'
p3373
(i__main__
ClassDefinition
p3374
(dp3375
g4
I1
sg5
I01
sg6
g3373
sg7
S'TExamplesDistanceConstructor_Normalized'
p3376
sg9
(lp3377
sg11
I00
sg12
(lp3378
g1584
ag1588
ag1592
asbsS'TExamplesDistanceConstructor_Python'
p3379
(i__main__
ClassDefinition
p3380
(dp3381
g4
I1
sg5
I01
sg6
g3379
sg7
S'TExamplesDistanceConstructor'
p3382
sg9
(lp3383
sg11
I00
sg12
(lp3384
g1592
asbsS'TTreeDescender_Python'
p3385
(i__main__
ClassDefinition
p3386
(dp3387
g4
I1
sg5
I01
sg6
g3385
sg7
S'TTreeDescender'
p3388
sg9
(lp3389
sg11
I00
sg12
(lp3390
sbsS'TSubsetsGenerator_constant'
p3391
(i__main__
ClassDefinition
p3392
(dp3393
g4
I1
sg5
I01
sg6
g3391
sg7
S'TSubsetsGenerator'
p3394
sg9
(lp3395
sg11
I00
sg12
(lp3396
(S'TVarList'
p3397
S'constant'
p3398
g3398
S'a subset that is returned (once!)'
p3399
I0
I0
I00
tp3400
ag183
asbsS'TGaussianNoiseGenerator'
p3401
(i__main__
ClassDefinition
p3402
(dp3403
g4
I1
sg5
I01
sg6
g3401
sg7
S'TChangeExampleGenerator'
p3404
sg9
(lp3405
sg11
I00
sg12
(lp3406
(S'TIntFloatList'
p3407
S'deviations'
p3408
g3408
S"deviations for attributes' values"
p3409
I0
I0
I00
tp3410
a(S'TRandomGenerator'
p3411
S'randomGenerator'
p3412
g3412
S'random generator'
p3413
I0
I0
I00
tp3414
ag137
ag141
asbsS'TClustersFromDistributionsByAssessor'
p3415
(i__main__
ClassDefinition
p3416
(dp3417
g4
I1
sg5
I01
sg6
g3415
sg7
S'TClustersFromDistributions'
p3418
sg9
(lp3419
sg11
I00
sg12
(lp3420
(S'TDistributionAssessor'
p3421
S'distributionAssessor'
p3422
g3422
S'column quality assessor'
p3423
I0
I0
I00
tp3424
a(S'TStopDistributionClustering'
p3425
S'stopCriterion'
p3426
g3426
S'stop criterion'
p3427
I0
I0
I00
tp3428
a(S'float'
p3429
S'minProfitProportion'
p3430
g3430
S'minimal merge profit'
p3431
I0
I0
I01
tp3432
asbsS'TDefaultClassifier'
p3433
(i__main__
ClassDefinition
p3434
(dp3435
g4
I1
sg5
I01
sg6
g3433
sg7
S'TClassifier'
p3436
sg9
(lp3437
sg11
I00
sg12
(lp3438
(S'TValue'
p3439
S'defaultVal'
p3440
g3440
S'default prediction'
p3441
I0
I0
I01
tp3442
a(S'TDistribution'
p3443
S'defaultDistribution'
p3444
g3444
S'default distribution'
p3445
I0
I0
I00
tp3446
ag83
ag87
asbsS'TColumnAssessor_Kramer'
p3447
(i__main__
ClassDefinition
p3448
(dp3449
g4
I1
sg5
I01
sg6
g3447
sg7
S'TColumnAssessor'
p3450
sg9
(lp3451
sg11
I00
sg12
(lp3452
sbsS'TDiscretization'
p3453
(i__main__
ClassDefinition
p3454
(dp3455
g4
I1
sg5
I01
sg6
g3453
sg7
S'TOrange'
p3456
sg9
(lp3457
sg11
I01
sg12
(lp3458
sbsS'TTreeSplitConstructor_Measure'
p3459
(i__main__
ClassDefinition
p3460
(dp3461
g4
I1
sg5
I01
sg6
g3459
sg7
S'TTreeSplitConstructor'
p3462
sg9
(lp3463
sg11
I01
sg12
(lp3464
g881
ag885
ag889
asbsS'TTreeNode'
p3465
(i__main__
ClassDefinition
p3466
(dp3467
g4
I1
sg5
I01
sg6
g3465
sg7
S'TOrange'
p3468
sg9
(lp3469
sg11
I00
sg12
(lp3470
(S'TClassifier'
p3471
S'nodeClassifier'
p3472
g3472
S'classifies an example'
p3473
I0
I0
I00
tp3474
a(S'TDistribution'
p3475
S'distribution'
p3476
g3476
S'distribution of classes in the node'
p3477
I0
I0
I00
tp3478
a(S'TDomainContingency'
p3479
S'contingency'
p3480
g3480
S'domain contingency for examples in the node'
p3481
I0
I0
I00
tp3482
a(S'TExampleGenerator'
p3483
S'examples'
p3484
g3484
S'learning examples (if stored)'
p3485
I0
I0
I00
tp3486
a(S'int'
p3487
S'weightID'
p3488
g3488
S'weightID used to construct this node'
p3489
I0
I0
I01
tp3490
a(S'TClassifier'
p3491
S'branchSelector'
p3492
g3492
S'classifier that select a branch for an example'
p3493
I0
I0
I00
tp3494
a(S'TTreeNodeList'
p3495
S'branches'
p3496
g3496
S'classifiers presenting the branches'
p3497
I0
I0
I00
tp3498
a(S'TStringList'
p3499
S'branchDescriptions'
p3500
g3500
S'descriptions of branches'
p3501
I0
I0
I00
tp3502
a(S'TDiscDistribution'
p3503
S'branchSizes'
p3504
g3504
S'numbers of examples in branches'
p3505
I0
I0
I00
tp3506
asbsS'TTransformValue_IsDefined'
p3507
(i__main__
ClassDefinition
p3508
(dp3509
g4
I1
sg5
I01
sg6
g3507
sg7
S'TTransformValue'
p3510
sg9
(lp3511
sg11
I00
sg12
(lp3512
g501
asbsS'TFilter_hasClassValue'
p3513
(i__main__
ClassDefinition
p3514
(dp3515
g4
I1
sg5
I01
sg6
g3513
sg7
S'TFilter'
p3516
sg9
(lp3517
sg11
I00
sg12
(lp3518
g437
ag441
asbsS'TStopDistributionClustering_binary'
p3519
(i__main__
ClassDefinition
p3520
(dp3521
g4
I1
sg5
I01
sg6
g3519
sg7
S'TStopDistributionClustering'
p3522
sg9
(lp3523
sg11
I00
sg12
(lp3524
sbsS'TIMByRows'
p3525
(i__main__
ClassDefinition
p3526
(dp3527
g4
I1
sg5
I01
sg6
g3525
sg7
S'TOrange'
p3528
sg9
(lp3529
sg11
I00
sg12
(lp3530
(S'int'
p3531
S'varType'
p3532
g3532
S'class variable type'
p3533
I0
I0
I01
tp3534
asbsS'TRuleFinder'
p3535
(i__main__
ClassDefinition
p3536
(dp3537
g4
I1
sg5
I01
sg6
g3535
sg7
S'TOrange'
p3538
sg9
(lp3539
sg11
I01
sg12
(lp3540
g2994
ag2997
asbsS'TClassifierByExampleTable'
p3541
(i__main__
ClassDefinition
p3542
(dp3543
g4
I1
sg5
I01
sg6
g3541
sg7
S'TClassifierFD'
p3544
sg9
(lp3545
sg11
I00
sg12
(lp3546
(S'TExampleTable'
p3547
S'sortedExamples'
p3548
g3548
S'a table of examples'
p3549
I0
I0
I00
tp3550
a(S'bool'
p3551
S'containsUnknowns'
p3552
g3552
S'if true, the table contains unknown values'
p3553
I0
I0
I01
tp3554
a(S'TClassifier'
p3555
S'classifierForUnknown'
p3556
g3556
S'a classifier for unknown cases'
p3557
I0
I0
I00
tp3558
a(S'TEFMDataDescription'
p3559
S'dataDescription'
p3560
g3560
S'data description'
p3561
I0
I0
I00
tp3562
ag907
ag83
ag87
asbsS'TKernelFunc'
p3563
(i__main__
ClassDefinition
p3564
(dp3565
g4
I1
sg5
I01
sg6
g3563
sg7
S'TOrange'
p3566
sg9
(lp3567
sg11
I01
sg12
(lp3568
sbsS'TChangeExampleGenerator'
p3569
(i__main__
ClassDefinition
p3570
(dp3571
g4
I1
sg5
I01
sg6
g3569
sg7
S'TAdapterGenerator'
p3572
sg9
(lp3573
sg11
I01
sg12
(lp3574
g137
ag141
asbsS'TRule'
p3575
(i__main__
ClassDefinition
p3576
(dp3577
g4
I1
sg5
I01
sg6
g3575
sg7
S'TOrange'
p3578
sg9
(lp3579
sg11
I00
sg12
(lp3580
(S'TFilter'
p3581
S'filter'
p3582
g3582
S'stored filter for this rule'
p3583
I0
I0
I00
tp3584
a(S'TClassifier'
p3585
S'classifier'
p3586
g3586
S'classifies an example'
p3587
I0
I0
I00
tp3588
a(S'TLearner'
p3589
S'learner'
p3590
g3590
S'learns a classifier from data'
p3591
I0
I0
I00
tp3592
a(S'TRule'
p3593
S'parentRule'
p3594
g3594
g1429
I0
I0
I00
tp3595
a(S'TDistribution'
p3596
S'classDistribution'
p3597
g3597
S'distribution of classes covered by the rule'
p3598
I0
I0
I00
tp3599
a(S'TExampleTable'
p3600
S'examples'
p3601
g3601
S'covered examples'
p3602
I0
I0
I00
tp3603
a(S'int'
p3604
S'weightID'
p3605
g3605
S'weight for the stored examples'
p3606
I0
I0
I01
tp3607
a(S'float'
p3608
S'quality'
p3609
g3609
S'some measure of rule quality'
p3610
I0
I0
I01
tp3611
a(S'float'
p3612
S'complexity'
p3613
g3613
g1429
I0
I0
I01
tp3614
asbsS'TClassifierByLookupTable2'
p3615
(i__main__
ClassDefinition
p3616
(dp3617
g4
I1
sg5
I01
sg6
g3615
sg7
S'TClassifierByLookupTable'
p3618
sg9
(lp3619
sg11
I00
sg12
(lp3620
(S'TVariable'
p3621
S'variable1'
p3622
g3622
S'the first attribute used for classification'
p3623
I01
I0
I00
tp3624
a(S'TVariable'
p3625
S'variable2'
p3626
g3626
S'the second attribute used for classification'
p3627
I01
I0
I00
tp3628
a(S'int'
p3629
S'noOfValues1'
p3630
g3630
S'number of values of the first attribute'
p3631
I01
I0
I01
tp3632
a(S'int'
p3633
S'noOfValues2'
p3634
g3634
S'number of values of the second attribute'
p3635
I01
I0
I01
tp3636
a(S'TEFMDataDescription'
p3637
S'dataDescription'
p3638
g3638
S'data description'
p3639
I0
I0
I00
tp3640
ag75
ag79
ag83
ag87
asbsS'TPreprocessor_addClassNoise'
p3641
(i__main__
ClassDefinition
p3642
(dp3643
g4
I1
sg5
I01
sg6
g3641
sg7
S'TPreprocessor'
p3644
sg9
(lp3645
sg11
I00
sg12
(lp3646
(S'float'
p3647
S'proportion'
p3648
g3648
S'proportion of changed class values'
p3649
I0
I0
I01
tp3650
a(S'TRandomGenerator'
p3651
S'randomGenerator'
p3652
g3652
S'random number generator'
p3653
I0
I0
I00
tp3654
asbsS'TExampleGenerator'
p3655
(i__main__
ClassDefinition
p3656
(dp3657
g4
I1
sg5
I01
sg6
g3655
sg7
S'TOrange'
p3658
sg9
(lp3659
sg11
I01
sg12
(lp3660
g137
ag141
asbsS'TClassifierByLookupTable1'
p3661
(i__main__
ClassDefinition
p3662
(dp3663
g4
I1
sg5
I01
sg6
g3661
sg7
S'TClassifierByLookupTable'
p3664
sg9
(lp3665
sg11
I00
sg12
(lp3666
(S'TVariable'
p3667
S'variable1'
p3668
(g3668
S'variable'
p3669
tp3670
S' attribute used for classification'
p3671
I01
I0
I00
tp3672
ag75
ag79
ag83
ag87
asbsS'TRuleClassifierConstructor_Python'
p3673
(i__main__
ClassDefinition
p3674
(dp3675
g4
I1
sg5
I01
sg6
g3673
sg7
S'TRuleClassifierConstructor'
p3676
sg9
(lp3677
sg11
I00
sg12
(lp3678
sbsS'TRemoveRedundantOneValue'
p3679
(i__main__
ClassDefinition
p3680
(dp3681
g4
I1
sg5
I01
sg6
g3679
sg7
S'TRemoveRedundant'
p3682
sg9
(lp3683
sg11
I00
sg12
(lp3684
(S'bool'
p3685
S'onData'
p3686
g3686
S'observe the actual number of value on the data (not on attribute definitions)'
p3687
I0
I0
I01
tp3688
ag927
asbsS'TDistributionAssessor_Relief'
p3689
(i__main__
ClassDefinition
p3690
(dp3691
g4
I1
sg5
I01
sg6
g3689
sg7
S'TDistributionAssessor'
p3692
sg9
(lp3693
sg11
I00
sg12
(lp3694
sbsS'TEnumVariable'
p3695
(i__main__
ClassDefinition
p3696
(dp3697
g4
I1
sg5
I01
sg6
g3695
sg7
S'TVariable'
p3698
sg9
(lp3699
sg11
I00
sg12
(lp3700
(S'TStringList'
p3701
S'values'
p3702
g3702
S"attribute's values"
p3703
I0
I0
I00
tp3704
a(S'int'
p3705
S'baseValue'
p3706
g3706
S'the index of the base value'
p3707
I0
I0
I01
tp3708
ag241
ag245
ag249
ag253
ag257
ag261
ag265
asbsS'TConditionalProbabilityEstimatorConstructor_loess'
p3709
(i__main__
ClassDefinition
p3710
(dp3711
g4
I1
sg5
I01
sg6
g3709
sg7
S'TConditionalProbabilityEstimatorConstructor'
p3712
sg9
(lp3713
sg11
I00
sg12
(lp3714
(S'float'
p3715
S'windowProportion'
p3716
g3716
S'The proportion of points in a window for LR'
p3717
I0
I0
I01
tp3718
a(S'int'
p3719
S'nPoints'
p3720
g3720
S'The number of points on curve'
p3721
I0
I0
I01
tp3722
a(S'int'
p3723
S'distributionMethod'
p3724
g3724
S"Meaning of the 'nPoints'"
p3725
I0
I0
I01
tp3726
asbsS'TPreprocessor_addMissing'
p3727
(i__main__
ClassDefinition
p3728
(dp3729
g4
I1
sg5
I01
sg6
g3727
sg7
S'TPreprocessor'
p3730
sg9
(lp3731
sg11
I00
sg12
(lp3732
(S'TVariableFloatMap'
p3733
S'proportions'
p3734
g3734
S'proportion of removed values for individual values'
p3735
I0
I0
I00
tp3736
a(S'float'
p3737
S'defaultProportion'
p3738
g3738
S'default proportion of removed values (for attributes not specified above)'
p3739
I0
I0
I01
tp3740
a(S'int'
p3741
S'specialType'
p3742
g3742
S'special value type (1=DC, 2=DK)'
p3743
I0
I0
I01
tp3744
a(S'TRandomGenerator'
p3745
S'randomGenerator'
p3746
g3746
S'random number generator'
p3747
I0
I0
I00
tp3748
asbsS'TRuleBeamCandidateSelector'
p3749
(i__main__
ClassDefinition
p3750
(dp3751
g4
I1
sg5
I01
sg6
g3749
sg7
S'TOrange'
p3752
sg9
(lp3753
sg11
I01
sg12
(lp3754
sbsS'TSubsetsGenerator_minMaxSize'
p3755
(i__main__
ClassDefinition
p3756
(dp3757
g4
I1
sg5
I01
sg6
g3755
sg7
S'TSubsetsGenerator'
p3758
sg9
(lp3759
sg11
I00
sg12
(lp3760
(S'int'
p3761
S'min'
p3762
g3762
S'minimal subset size'
p3763
I0
I0
I01
tp3764
a(S'int'
p3765
S'max'
p3766
g3766
S'maximal subset size'
p3767
I0
I0
I01
tp3768
ag183
asbsS'TMakeRandomIndicesN'
p3769
(i__main__
ClassDefinition
p3770
(dp3771
g4
I1
sg5
I01
sg6
g3769
sg7
S'TMakeRandomIndices'
p3772
sg9
(lp3773
sg11
I00
sg12
(lp3774
(S'TFloatList'
p3775
g1787
g1787
S'probabilities of indices (last is 1-sum(p))'
p3776
I0
I0
I00
tp3777
ag463
ag467
ag471
asbsS'TTreeExampleSplitter_UnknownsToAll'
p3778
(i__main__
ClassDefinition
p3779
(dp3780
g4
I1
sg5
I01
sg6
g3778
sg7
S'TTreeExampleSplitter'
p3781
sg9
(lp3782
sg11
I00
sg12
(lp3783
sbsS'TValueFilter_stringList'
p3784
(i__main__
ClassDefinition
p3785
(dp3786
g4
I1
sg5
I01
sg6
g3784
sg7
S'TValueFilter'
p3787
sg9
(lp3788
sg11
I00
sg12
(lp3789
(S'TStringList'
p3790
S'values'
p3791
g3791
S'accepted values'
p3792
I0
I0
I00
tp3793
a(S'bool'
p3794
S'caseSensitive'
p3795
g3795
S'if true (default), the comparison is case sensitive'
p3796
I0
I0
I01
tp3797
ag673
ag677
asbsS'TContingencyClass'
p3798
(i__main__
ClassDefinition
p3799
(dp3800
g4
I1
sg5
I01
sg6
g3798
sg7
S'TContingency'
p3801
sg9
(lp3802
sg11
I01
sg12
(lp3803
g1204
ag1210
ag1214
ag1218
ag1222
asbsS'TAssociationClassifier'
p3804
(i__main__
ClassDefinition
p3805
(dp3806
g4
I1
sg5
I01
sg6
g3804
sg7
S'TClassifierFD'
p3807
sg9
(lp3808
sg11
I00
sg12
(lp3809
(S'TAssociationRules'
p3810
S'rules'
p3811
g3811
S'association rules'
p3812
I0
I0
I00
tp3813
a(S'int'
p3814
S'voteWeight'
p3815
g3815
S'vote weight (s=support, c=confidence, p=product)'
p3816
I0
I0
I01
tp3817
ag907
ag83
ag87
asbsS'TDomainDistributions'
p3818
(i__main__
ClassDefinition
p3819
(dp3820
g4
I1
sg5
I01
sg6
g3818
sg7
g1360
sg9
(lp3821
sg11
I00
sg12
(lp3822
sbsS'TDomain'
p3823
(i__main__
ClassDefinition
p3824
(dp3825
g4
I1
sg5
I01
sg6
g3823
sg7
S'TOrange'
p3826
sg9
(lp3827
sg11
I00
sg12
(lp3828
g1748
ag1752
ag1756
ag1760
asbsS'TTreePruner_SameMajority'
p3829
(i__main__
ClassDefinition
p3830
(dp3831
g4
I1
sg5
I01
sg6
g3829
sg7
S'TTreePruner'
p3832
sg9
(lp3833
sg11
I00
sg12
(lp3834
sbsS'TExampleDistConstructor'
p3835
(i__main__
ClassDefinition
p3836
(dp3837
g4
I1
sg5
I01
sg6
g3835
sg7
S'TOrange'
p3838
sg9
(lp3839
sg11
I01
sg12
(lp3840
sbsS'TIMByIMByRows'
p3841
(i__main__
ClassDefinition
p3842
(dp3843
g4
I1
sg5
I01
sg6
g3841
sg7
S'TIMConstructor'
p3844
sg9
(lp3845
sg11
I00
sg12
(lp3846
g835
asbsS'TDiscrete2Continuous'
p3847
(i__main__
ClassDefinition
p3848
(dp3849
g4
I1
sg5
I01
sg6
g3847
sg7
S'TTransformValue'
p3850
sg9
(lp3851
sg11
I00
sg12
(lp3852
(S'int'
p3853
S'value'
p3854
g3854
S'target value'
p3855
I0
I0
I01
tp3856
a(S'bool'
p3857
S'invert'
p3858
g3858
S'give 1.0 to values not equal to the target'
p3859
I0
I0
I01
tp3860
a(S'bool'
p3861
S'zeroBased'
p3862
g3862
S'if true (default) it gives values 0.0 and 1.0; else -1.0 and 1.0, 0.0 for undefined'
p3863
I0
I0
I01
tp3864
ag501
asbsS'TDomainDiscretization'
p3865
(i__main__
ClassDefinition
p3866
(dp3867
g4
I1
sg5
I01
sg6
g3865
sg7
S'TOrange'
p3868
sg9
(lp3869
sg11
I00
sg12
(lp3870
(S'TDiscretization'
p3871
S'discretization'
p3872
g3872
S'discretization'
p3873
I0
I0
I00
tp3874
asbsS'TColumnAssessor_m'
p3875
(i__main__
ClassDefinition
p3876
(dp3877
g4
I1
sg5
I01
sg6
g3875
sg7
S'TColumnAssessor'
p3878
sg9
(lp3879
sg11
I00
sg12
(lp3880
(S'float'
p3881
g805
g805
S'm for m-estimate'
p3882
I0
I0
I01
tp3883
asbsS'TImputer_defaults'
p3884
(i__main__
ClassDefinition
p3885
(dp3886
g4
I1
sg5
I01
sg6
g3884
sg7
S'TImputer'
p3887
sg9
(lp3888
sg11
I00
sg12
(lp3889
(S'TExample'
p3890
S'defaults'
p3891
g3891
S'values that are to be inserted instead of missing ones'
p3892
I0
I0
I00
tp3893
asbsS'TContingency'
p3894
(i__main__
ClassDefinition
p3895
(dp3896
g4
I1
sg5
I01
sg6
g3894
sg7
S'TOrange'
p3897
sg9
(lp3898
sg11
I00
sg12
(lp3899
g1204
ag1210
ag1214
ag1218
ag1222
asbsS'TStringValue'
p3900
(i__main__
ClassDefinition
p3901
(dp3902
g4
I1
sg5
I01
sg6
g3900
sg7
S'TSomeValue'
p3903
sg9
(lp3904
sg11
I00
sg12
(lp3905
sbsS'TClassifierGenerator'
p3906
(i__main__
ClassDefinition
p3907
(dp3908
g4
I1
sg5
I01
sg6
g3906
sg7
S'TExampleGenerator'
p3909
sg9
(lp3910
sg11
I00
sg12
(lp3911
(S'TClassifier'
p3912
S'classify'
p3913
g3913
S'classifier'
p3914
I0
I0
I00
tp3915
ag137
ag141
asbsS'TRuleDataStoppingCriteria_Python'
p3916
(i__main__
ClassDefinition
p3917
(dp3918
g4
I1
sg5
I01
sg6
g3916
sg7
S'TRuleDataStoppingCriteria'
p3919
sg9
(lp3920
sg11
I00
sg12
(lp3921
sbsS'TTreeDescender_UnknownToCommonSelector'
p3922
(i__main__
ClassDefinition
p3923
(dp3924
g4
I1
sg5
I01
sg6
g3922
sg7
g1091
sg9
(lp3925
sg11
I0
sg12
(lp3926
sbsS'THierarchicalCluster'
p3927
(i__main__
ClassDefinition
p3928
(dp3929
g4
I1
sg5
I01
sg6
g3927
sg7
S'TOrange'
p3930
sg9
(lp3931
sg11
I00
sg12
(lp3932
(S'THierarchicalClusterList'
p3933
S'branches'
p3934
g3934
S'subclusters'
p3935
I0
I0
I00
tp3936
a(S'float'
p3937
S'height'
p3938
g3938
S'height'
p3939
I0
I0
I01
tp3940
a(S'TIntList'
p3941
S'mapping'
p3942
g3942
S'indices to the list of all elements in the clustering'
p3943
I0
I0
I00
tp3944
a(S'int'
p3945
S'first'
p3946
g3946
S"the index into 'elements' to the first element of the cluster"
p3947
I0
I0
I01
tp3948
a(S'int'
p3949
S'last'
p3950
g3950
S"the index into 'elements' to the one after the last element of the cluster"
p3951
I0
I0
I01
tp3952
asbsS'TPreprocessIM'
p3953
(i__main__
ClassDefinition
p3954
(dp3955
g4
I1
sg5
I01
sg6
g3953
sg7
S'TOrange'
p3956
sg9
(lp3957
sg11
I01
sg12
(lp3958
sbsS'TRuleEvaluator_Laplace'
p3959
(i__main__
ClassDefinition
p3960
(dp3961
g4
I1
sg5
I01
sg6
g3959
sg7
S'TRuleEvaluator'
p3962
sg9
(lp3963
sg11
I00
sg12
(lp3964
sbsS'TColumnAssessor_N'
p3965
(i__main__
ClassDefinition
p3966
(dp3967
g4
I1
sg5
I01
sg6
g3965
sg7
S'TColumnAssessor'
p3968
sg9
(lp3969
sg11
I00
sg12
(lp3970
sbsS'TPreprocessor_dropMissing'
p3971
(i__main__
ClassDefinition
p3972
(dp3973
g4
I1
sg5
I01
sg6
g3971
sg7
S'TPreprocessor'
p3974
sg9
(lp3975
sg11
I00
sg12
(lp3976
sbsS'TFeatureByMinComplexity'
p3977
(i__main__
ClassDefinition
p3978
(dp3979
g4
I1
sg5
I01
sg6
g3977
sg7
S'TFeatureInducer'
p3980
sg9
(lp3981
sg11
I00
sg12
(lp3982
(S'TColorIG'
p3983
S'colorIG'
p3984
g3984
S'graph coloring algorithm'
p3985
I0
I0
I00
tp3986
a(S'int'
p3987
S'completion'
p3988
g3988
S'decides how to determine the class for points not covered by any cluster'
p3989
I0
I0
I01
tp3990
asbsS'TExample'
p3991
(i__main__
ClassDefinition
p3992
(dp3993
g4
I1
sg5
I01
sg6
g3991
sg7
S'TOrange'
p3994
sg9
(lp3995
sg11
I00
sg12
(lp3996
g2060
asbsS'TFixedDiscretization'
p3997
(i__main__
ClassDefinition
p3998
(dp3999
g4
I1
sg5
I01
sg6
g3997
sg7
S'TDiscretization'
p4000
sg9
(lp4001
sg11
I00
sg12
(lp4002
(S'TFloatList'
p4003
S'points'
p4004
g4004
S'cut-off points'
p4005
I0
I0
I00
tp4006
asbsS'TDomainContingency'
p4007
(i__main__
ClassDefinition
p4008
(dp4009
g4
I1
sg5
I01
sg6
g4007
sg7
g1360
sg9
(lp4010
sg11
I00
sg12
(lp4011
(S'TDistribution'
p4012
S'classes'
p4013
g4013
S'distribution of class values'
p4014
I01
I0
I00
tp4015
a(S'bool'
p4016
S'classIsOuter'
p4017
g4017
S'tells whether the class is the outer variable'
p4018
I01
I0
I01
tp4019
asbsS'TPreprocessor_addGaussianClassNoise'
p4020
(i__main__
ClassDefinition
p4021
(dp4022
g4
I1
sg5
I01
sg6
g4020
sg7
S'TPreprocessor'
p4023
sg9
(lp4024
sg11
I00
sg12
(lp4025
(S'float'
p4026
S'deviation'
p4027
g4027
S'class deviation'
p4028
I0
I0
I01
tp4029
a(S'TRandomGenerator'
p4030
S'randomGenerator'
p4031
g4031
S'random number generator'
p4032
I0
I0
I00
tp4033
asbsS'TRuleDataStoppingCriteria'
p4034
(i__main__
ClassDefinition
p4035
(dp4036
g4
I1
sg5
I01
sg6
g4034
sg7
S'TOrange'
p4037
sg9
(lp4038
sg11
I01
sg12
(lp4039
sbsS'TPreprocessor_filter'
p4040
(i__main__
ClassDefinition
p4041
(dp4042
g4
I1
sg5
I01
sg6
g4040
sg7
S'TPreprocessor'
p4043
sg9
(lp4044
sg11
I00
sg12
(lp4045
(S'TFilter'
p4046
S'filter'
p4047
g4047
S'filter'
p4048
I0
I0
I00
tp4049
asbsS'TExampleDistBySorting'
p4050
(i__main__
ClassDefinition
p4051
(dp4052
g4
I1
sg5
I01
sg6
g4050
sg7
S'TExampleDistConstructor'
p4053
sg9
(lp4054
sg11
I00
sg12
(lp4055
sbsS'TGraphAsMatrix'
p4056
(i__main__
ClassDefinition
p4057
(dp4058
g4
I1
sg5
I01
sg6
g4056
sg7
S'TGraph'
p4059
sg9
(lp4060
sg11
I00
sg12
(lp4061
g1055
ag1059
ag1063
asbsS'TLWRClassifier'
p4062
(i__main__
ClassDefinition
p4063
(dp4064
g4
I1
sg5
I01
sg6
g4062
sg7
S'TClassifierFD'
p4065
sg9
(lp4066
sg11
I00
sg12
(lp4067
(S'TFindNearest'
p4068
S'findNearest'
p4069
g4069
S'object that find nearest neighbours'
p4070
I0
I0
I00
tp4071
a(S'TLinRegLearner'
p4072
S'linRegLearner'
p4073
g4073
S'learner the performs local linear regression'
p4074
I0
I0
I00
tp4075
a(S'float'
p4076
g801
g801
S'number of neighbours'
p4077
I0
I0
I01
tp4078
a(S'bool'
p4079
S'rankWeight'
p4080
g4080
S'use ranks instead of distances'
p4081
I0
I0
I01
tp4082
a(S'int'
p4083
S'weightID'
p4084
g4084
S"weights of examples stored in 'findNearest'"
p4085
I0
I0
I01
tp4086
ag907
ag83
ag87
asbsS'TValueFilter_discrete'
p4087
(i__main__
ClassDefinition
p4088
(dp4089
g4
I1
sg5
I01
sg6
g4087
sg7
S'TValueFilter'
p4090
sg9
(lp4091
sg11
I00
sg12
(lp4092
(S'TValueList'
p4093
S'values'
p4094
g4094
S'accepted values'
p4095
I0
I0
I00
tp4096
ag673
ag677
asbsS'TComputeDomainContingency'
p4097
(i__main__
ClassDefinition
p4098
(dp4099
g4
I1
sg5
I01
sg6
g4097
sg7
S'TOrange'
p4100
sg9
(lp4101
sg11
I00
sg12
(lp4102
g25
asbsS'TAssociationRulesInducer'
p4103
(i__main__
ClassDefinition
p4104
(dp4105
g4
I1
sg5
I01
sg6
g4103
sg7
S'TOrange'
p4106
sg9
(lp4107
sg11
I00
sg12
(lp4108
(S'int'
p4109
S'maxItemSets'
p4110
g4110
S'maximal number of itemsets (increase if you want)'
p4111
I0
I0
I01
tp4112
a(S'float'
p4113
S'confidence'
p4114
g4114
S'required confidence'
p4115
I0
I0
I01
tp4116
a(S'float'
p4117
S'support'
p4118
g4118
S'required support'
p4119
I0
I0
I01
tp4120
a(S'bool'
p4121
S'classificationRules'
p4122
g4122
S'if true, rules will have the class and only the class attribute on the right-hand side'
p4123
I0
I0
I01
tp4124
asbsS'TTreeStopCriteria'
p4125
(i__main__
ClassDefinition
p4126
(dp4127
g4
I1
sg5
I01
sg6
g4125
sg7
S'TOrange'
p4128
sg9
(lp4129
sg11
I00
sg12
(lp4130
sbsS'TPreprocessor_addMissingClasses'
p4131
(i__main__
ClassDefinition
p4132
(dp4133
g4
I1
sg5
I01
sg6
g4131
sg7
S'TPreprocessor'
p4134
sg9
(lp4135
sg11
I00
sg12
(lp4136
(S'float'
p4137
S'proportion'
p4138
g4138
S'proportion of removed class values'
p4139
I0
I0
I01
tp4140
a(S'int'
p4141
S'specialType'
p4142
g4142
S'special value type (1=DC, 2=DK)'
p4143
I0
I0
I01
tp4144
a(S'TRandomGenerator'
p4145
S'randomGenerator'
p4146
g4146
S'random number generator'
p4147
I0
I0
I00
tp4148
asbsS'TLookupLearner'
p4149
(i__main__
ClassDefinition
p4150
(dp4151
g4
I1
sg5
I01
sg6
g4149
sg7
S'TLearner'
p4152
sg9
(lp4153
sg11
I00
sg12
(lp4154
(S'TLearner'
p4155
S'learnerForUnknown'
p4156
g4156
S'a learner for classifying cases not found in the table'
p4157
I0
I0
I00
tp4158
a(S'bool'
p4159
S'allowFastLookups'
p4160
g4160
S'if true, it constructs LookupClassifiers for <=3 attributes'
p4161
I0
I0
I01
tp4162
a(S'int'
p4163
S'unknownsHandling'
p4164
g4164
S'0 omit examples with unknowns, 1 distribute them, 2 keep them in table'
p4165
I0
I0
I01
tp4166
ag97
asbsS'TBasketExampleGenerator'
p4167
(i__main__
ClassDefinition
p4168
(dp4169
g4
I1
sg5
I01
sg6
g4167
sg7
S'TFileExampleGenerator'
p4170
sg9
(lp4171
sg11
I00
sg12
(lp4172
(S'bool'
p4173
S'dontStore'
p4174
g4174
S'disables items storing'
p4175
I0
I0
I01
tp4176
a(S'bool'
p4177
S'dontCheckStored'
p4178
g4178
S'disables items lookup in the global cache'
p4179
I0
I0
I01
tp4180
a(S'TDomain'
p4181
S'sourceDomain'
p4182
g4182
S'domain with items that can be reused'
p4183
I0
I0
I00
tp4184
ag125
ag129
ag133
ag137
ag141
asbsS'TRuleEvaluator_Entropy'
p4185
(i__main__
ClassDefinition
p4186
(dp4187
g4
I1
sg5
I01
sg6
g4185
sg7
S'TRuleEvaluator'
p4188
sg9
(lp4189
sg11
I00
sg12
(lp4190
sbsS'TDistribution'
p4191
(i__main__
ClassDefinition
p4192
(dp4193
g4
I1
sg5
I01
sg6
g4191
sg7
S'TSomeValue'
p4194
sg9
(lp4195
sg11
I01
sg12
(lp4196
g735
ag739
ag743
ag747
ag751
ag755
ag759
ag763
asbsNNsS'TExamplesDistance_DTW'
p4197
(i__main__
ClassDefinition
p4198
(dp4199
g4
I1
sg5
I01
sg6
g4197
sg7
S'TExamplesDistance_Normalized'
p4200
sg9
(lp4201
sg11
I00
sg12
(lp4202
(S'int'
p4203
S'dtwDistance'
p4204
g4204
S'distance measure between individual attributes (default: square of difference)'
p4205
I0
I0
I01
tp4206
ag331
ag335
ag339
ag343
ag347
ag351
ag355
asbsS'TTreeExampleSplitter_UnknownsToRandom'
p4207
(i__main__
ClassDefinition
p4208
(dp4209
g4
I1
sg5
I01
sg6
g4207
sg7
S'TTreeExampleSplitter'
p4210
sg9
(lp4211
sg11
I00
sg12
(lp4212
sbsS'TTreePruner_m'
p4213
(i__main__
ClassDefinition
p4214
(dp4215
g4
I1
sg5
I01
sg6
g4213
sg7
S'TTreePruner'
p4216
sg9
(lp4217
sg11
I00
sg12
(lp4218
(S'float'
p4219
g805
g805
S'm for m-estimate'
p4220
I0
I0
I01
tp4221
asbsS'TImputer'
p4222
(i__main__
ClassDefinition
p4223
(dp4224
g4
I1
sg5
I01
sg6
g4222
sg7
S'TOrange'
p4225
sg9
(lp4226
sg11
I01
sg12
(lp4227
sbsS'TExamplesDistanceConstructor_DTW'
p4228
(i__main__
ClassDefinition
p4229
(dp4230
g4
I1
sg5
I01
sg6
g4228
sg7
S'TExamplesDistanceConstructor_Normalized'
p4231
sg9
(lp4232
sg11
I00
sg12
(lp4233
(S'int'
p4234
S'dtwDistance'
p4235
g4235
S'distance measure between individual attributes (default: square of difference)'
p4236
I0
I0
I01
tp4237
ag1584
ag1588
ag1592
asbsS'TStopIMClusteringByAssessor_n'
p4238
(i__main__
ClassDefinition
p4239
(dp4240
g4
I1
sg5
I01
sg6
g4238
sg7
S'TStopIMClusteringByAssessor'
p4241
sg9
(lp4242
sg11
I00
sg12
(lp4243
(S'int'
p4244
g1314
g1314
S'number of clusters'
p4245
I0
I0
I01
tp4246
asbsS'TRandomGenerator'
p4247
(i__main__
ClassDefinition
p4248
(dp4249
g4
I1
sg5
I01
sg6
g4247
sg7
S'TOrange'
p4250
sg9
(lp4251
sg11
I00
sg12
(lp4252
(S'int'
p4253
S'initseed'
p4254
g4254
S'initial random seed'
p4255
I0
I0
I01
tp4256
a(S'int'
p4257
S'uses'
p4258
g4258
S'#times a number was returned'
p4259
I0
I0
I01
tp4260
asbsS'TThresholdCA'
p4261
(i__main__
ClassDefinition
p4262
(dp4263
g4
I1
sg5
I01
sg6
g4261
sg7
S'TOrange'
p4264
sg9
(lp4265
sg11
I00
sg12
(lp4266
sbsS'TPreprocessor_imputeByLearner'
p4267
(i__main__
ClassDefinition
p4268
(dp4269
g4
I1
sg5
I01
sg6
g4267
sg7
S'TPreprocessor'
p4270
sg9
(lp4271
sg11
I00
sg12
(lp4272
(S'TLearner'
p4273
S'learner'
p4274
g4274
S'learner used for inducing a model for imputation'
p4275
I0
I0
I00
tp4276
asbsS'TRuleBeamRefiner_Python'
p4277
(i__main__
ClassDefinition
p4278
(dp4279
g4
I1
sg5
I01
sg6
g4277
sg7
S'TRuleBeamRefiner'
p4280
sg9
(lp4281
sg11
I00
sg12
(lp4282
sbsS'TClassifierFromVarFD'
p4283
(i__main__
ClassDefinition
p4284
(dp4285
g4
I1
sg5
I01
sg6
g4283
sg7
S'TClassifierFD'
p4286
sg9
(lp4287
sg11
I00
sg12
(lp4288
(S'int'
p4289
S'position'
p4290
g4290
S'position of the attribute in domain'
p4291
I0
I0
I01
tp4292
a(S'TTransformValue'
p4293
S'transformer'
p4294
g4294
S'transformer'
p4295
I0
I0
I00
tp4296
a(S'TDistribution'
p4297
S'distributionForUnknown'
p4298
g4298
S'distribution for unknown value'
p4299
I0
I0
I00
tp4300
a(S'bool'
p4301
S'transformUnknowns'
p4302
g4302
S'if false (default), unknowns stay unknown or are changed into distribution if given'
p4303
I0
I0
I01
tp4304
ag907
ag83
ag87
asbsS'TImputer_model'
p4305
(i__main__
ClassDefinition
p4306
(dp4307
g4
I1
sg5
I01
sg6
g4305
sg7
S'TImputer'
p4308
sg9
(lp4309
sg11
I00
sg12
(lp4310
(S'TClassifierList'
p4311
S'models'
p4312
g4312
S'classifiers'
p4313
I0
I0
I00
tp4314
asbsS'TLogRegLearner'
p4315
(i__main__
ClassDefinition
p4316
(dp4317
g4
I1
sg5
I01
sg6
g4315
sg7
S'TLearner'
p4318
sg9
(lp4319
sg11
I00
sg12
(lp4320
(S'TLogRegFitter'
p4321
S'fitter'
p4322
g4322
S'fits beta coefficients and calculates beta errors.'
p4323
I0
I0
I00
tp4324
a(S'TImputerConstructor'
p4325
S'imputerConstructor'
p4326
g4326
S'if present, it constructs an imputer for unknown values'
p4327
I0
I0
I00
tp4328
a(S'TDomainContinuizer'
p4329
S'domainContinuizer'
p4330
g4330
S'if present, it constructs continuous domain if needed; if absent, default is used'
p4331
I0
I0
I00
tp4332
ag97
asbsS'TPreprocessor_takeMissing'
p4333
(i__main__
ClassDefinition
p4334
(dp4335
g4
I1
sg5
I01
sg6
g4333
sg7
S'TPreprocessor'
p4336
sg9
(lp4337
sg11
I00
sg12
(lp4338
sbsS'TMeasureAttribute_IM'
p4339
(i__main__
ClassDefinition
p4340
(dp4341
g4
I1
sg5
I01
sg6
g4339
sg7
S'TMeasureAttribute'
p4342
sg9
(lp4343
sg11
I00
sg12
(lp4344
(S'TIMConstructor'
p4345
S'IMconstructor'
p4346
g4346
S'incompatibility matrix constructor'
p4347
I0
I0
I00
tp4348
a(S'TColumnAssessor'
p4349
S'columnAssessor'
p4350
g4350
S'column quality assessor'
p4351
I0
I0
I00
tp4352
ag567
ag571
ag575
asbsS'TFeatureByDistributions'
p4353
(i__main__
ClassDefinition
p4354
(dp4355
g4
I1
sg5
I01
sg6
g4353
sg7
S'TFeatureInducer'
p4356
sg9
(lp4357
sg11
I00
sg12
(lp4358
(S'TClustersFromDistributions'
p4359
S'clustersFromDistributions'
p4360
g4360
S'clustering algorithm'
p4361
I0
I0
I00
tp4362
a(S'int'
p4363
S'completion'
p4364
g4364
S'decides how to determine the class for points not covered by any cluster'
p4365
I0
I0
I01
tp4366
asbsS'TCostMatrix'
p4367
(i__main__
ClassDefinition
p4368
(dp4369
g4
I1
sg5
I01
sg6
g4367
sg7
S'TOrange'
p4370
sg9
(lp4371
sg11
I00
sg12
(lp4372
(S'TVariable'
p4373
S'classVar'
p4374
g4374
S'attribute to which the matrix applies'
p4375
I0
I0
I00
tp4376
asbsS'TStopIMClusteringByAssessor_noProfit'
p4377
(i__main__
ClassDefinition
p4378
(dp4379
g4
I1
sg5
I01
sg6
g4377
sg7
S'TStopIMClusteringByAssessor'
p4380
sg9
(lp4381
sg11
I00
sg12
(lp4382
(S'float'
p4383
S'minProfitProportion'
p4384
g4384
S'minimal allowable profit proportion'
p4385
I0
I0
I01
tp4386
asbsS'TRemoveUnusedValues'
p4387
(i__main__
ClassDefinition
p4388
(dp4389
g4
I1
sg5
I01
sg6
g4387
sg7
S'TOrange'
p4390
sg9
(lp4391
sg11
I00
sg12
(lp4392
(S'bool'
p4393
S'removeOneValued'
p4394
g4394
S'if true (default is false), one valued attributes are also removed'
p4395
I0
I0
I01
tp4396
asbsS'TExamplesDistance_Normalized'
p4397
(i__main__
ClassDefinition
p4398
(dp4399
g4
I1
sg5
I01
sg6
g4397
sg7
S'TExamplesDistance'
p4400
sg9
(lp4401
sg11
I01
sg12
(lp4402
g331
ag335
ag339
ag343
ag347
ag351
ag355
asbsS'TExamplesDistance_Euclidean'
p4403
(i__main__
ClassDefinition
p4404
(dp4405
g4
I1
sg5
I01
sg6
g4403
sg7
S'TExamplesDistance_Normalized'
p4406
sg9
(lp4407
sg11
I00
sg12
(lp4408
(S'TDomainDistributions'
p4409
S'distributions'
p4410
g4410
S'distributions (of discrete attributes only)'
p4411
I0
I0
I00
tp4412
a(S'TAttributedFloatList'
p4413
S'bothSpecialDist'
p4414
g4414
S'distances between discrete attributes if both values are unknown'
p4415
I0
I0
I00
tp4416
ag331
ag335
ag339
ag343
ag347
ag351
ag355
asbsS'TPreprocessor_take'
p4417
(i__main__
ClassDefinition
p4418
(dp4419
g4
I1
sg5
I01
sg6
g4417
sg7
S'TPreprocessor'
p4420
sg9
(lp4421
sg11
I00
sg12
(lp4422
(S'TVariableFilterMap'
p4423
S'values'
p4424
g4424
S'variable-filter pairs'
p4425
I0
I0
I00
tp4426
a(S'bool'
p4427
S'conjunction'
p4428
g4428
S'decides whether to take conjunction or disjunction of values'
p4429
I0
I0
I01
tp4430
asbsS'TIMConstructor'
p4431
(i__main__
ClassDefinition
p4432
(dp4433
g4
I1
sg5
I01
sg6
g4431
sg7
S'TOrange'
p4434
sg9
(lp4435
sg11
I01
sg12
(lp4436
g835
asbsS'TRuleFinder_Python'
p4437
(i__main__
ClassDefinition
p4438
(dp4439
g4
I1
sg5
I01
sg6
g4437
sg7
S'TRuleFinder'
p4440
sg9
(lp4441
sg11
I00
sg12
(lp4442
g2994
ag2997
asbsS'TTabDelimExampleGenerator'
p4443
(i__main__
ClassDefinition
p4444
(dp4445
g4
I1
sg5
I01
sg6
g4443
sg7
S'TFileExampleGenerator'
p4446
sg9
(lp4447
sg11
I00
sg12
(lp4448
(S'TIntList'
p4449
S'attributeTypes'
p4450
g4450
S'types of attributes (-1 normal, 0 skip, <-1 = meta ID)'
p4451
I0
I0
I00
tp4452
a(S'int'
p4453
S'classPos'
p4454
g4454
S'position of the class attribute'
p4455
I0
I0
I01
tp4456
a(S'int'
p4457
S'headerLines'
p4458
g4458
S'number of header lines (3 for .tab, 1 for .txt)'
p4459
I0
I0
I01
tp4460
a(S'bool'
p4461
S'csv'
p4462
g4462
S"also allow ',' as a separator"
p4463
I0
I0
I01
tp4464
ag125
ag129
ag133
ag137
ag141
asbsS'TRandomClassifier'
p4465
(i__main__
ClassDefinition
p4466
(dp4467
g4
I1
sg5
I01
sg6
g4465
sg7
S'TClassifier'
p4468
sg9
(lp4469
sg11
I00
sg12
(lp4470
(S'TDistribution'
p4471
S'probabilities'
p4472
g4472
S'probabilities of predictions'
p4473
I0
I0
I00
tp4474
ag83
ag87
asbsS'TkNNLearner'
p4475
(i__main__
ClassDefinition
p4476
(dp4477
g4
I1
sg5
I01
sg6
g4475
sg7
S'TLearner'
p4478
sg9
(lp4479
sg11
I00
sg12
(lp4480
(S'float'
p4481
g801
g801
S'number of neighbours'
p4482
I0
I0
I01
tp4483
a(S'bool'
p4484
S'rankWeight'
p4485
g4485
S'enable weighting by ranks'
p4486
I0
I0
I01
tp4487
a(S'TExamplesDistanceConstructor'
p4488
S'distanceConstructor'
p4489
g4489
S'metrics'
p4490
I0
I0
I00
tp4491
ag97
asbsS'TTreeDescender_UnknownToNode'
p4492
(i__main__
ClassDefinition
p4493
(dp4494
g4
I1
sg5
I01
sg6
g4492
sg7
g1091
sg9
(lp4495
sg11
I0
sg12
(lp4496
sbsS'TDistributionAssessor_mf'
p4497
(i__main__
ClassDefinition
p4498
(dp4499
g4
I1
sg5
I01
sg6
g4497
sg7
S'TDistributionAssessor'
p4500
sg9
(lp4501
sg11
I00
sg12
(lp4502
(S'float'
p4503
g805
g805
S'm for m-estimate'
p4504
I0
I0
I01
tp4505
asbsS'TExampleClusters'
p4506
(i__main__
ClassDefinition
p4507
(dp4508
g4
I1
sg5
I01
sg6
g4506
sg7
S'TGeneralExampleClustering'
p4509
sg9
(lp4510
sg11
I00
sg12
(lp4511
(S'TExampleCluster'
p4512
S'root'
p4513
g4513
S'root of cluster hierarchy'
p4514
I0
I0
I00
tp4515
a(S'float'
p4516
S'quality'
p4517
g4517
S"'quality' of clustering"
p4518
I0
I0
I01
tp4519
asbsS'TExamplesDistance_Python'
p4520
(i__main__
ClassDefinition
p4521
(dp4522
g4
I1
sg5
I01
sg6
g4520
sg7
S'TExamplesDistance'
p4523
sg9
(lp4524
sg11
I00
sg12
(lp4525
sbsS'TCostLearner'
p4526
(i__main__
ClassDefinition
p4527
(dp4528
g4
I1
sg5
I01
sg6
g4526
sg7
S'TMajorityLearner'
p4529
sg9
(lp4530
sg11
I00
sg12
(lp4531
(S'TCostMatrix'
p4532
S'cost'
p4533
g4533
S'cost matrix'
p4534
I0
I0
I00
tp4535
ag523
ag527
ag97
asbsS'TEFMDataDescription'
p4536
(i__main__
ClassDefinition
p4537
(dp4538
g4
I1
sg5
I01
sg6
g4536
sg7
S'TOrange'
p4539
sg9
(lp4540
sg11
I00
sg12
(lp4541
(S'TDomain'
p4542
S'domain'
p4543
g4543
S'domain'
p4544
I01
I0
I00
tp4545
asbsS'TClassifierFD'
p4546
(i__main__
ClassDefinition
p4547
(dp4548
g4
I1
sg5
I01
sg6
g4546
sg7
S'TClassifier'
p4549
sg9
(lp4550
sg11
I00
sg12
(lp4551
g907
ag83
ag87
asbsS'TPreprocessor_drop'
p4552
(i__main__
ClassDefinition
p4553
(dp4554
g4
I1
sg5
I01
sg6
g4552
sg7
S'TPreprocessor'
p4555
sg9
(lp4556
sg11
I00
sg12
(lp4557
(S'TVariableFilterMap'
p4558
S'values'
p4559
g4559
S'variable-filter pairs'
p4560
I0
I0
I00
tp4561
a(S'bool'
p4562
S'conjunction'
p4563
g4563
S'decides whether to take conjunction or disjunction of values'
p4564
I0
I0
I01
tp4565
asbsS'TTreeDescender_UnknownToCommonBranch'
p4566
(i__main__
ClassDefinition
p4567
(dp4568
g4
I1
sg5
I01
sg6
g4566
sg7
g1091
sg9
(lp4569
sg11
I0
sg12
(lp4570
sbsS'TPreprocessor_addNoise'
p4571
(i__main__
ClassDefinition
p4572
(dp4573
g4
I1
sg5
I01
sg6
g4571
sg7
S'TPreprocessor'
p4574
sg9
(lp4575
sg11
I00
sg12
(lp4576
(S'TVariableFloatMap'
p4577
S'proportions'
p4578
g4578
S'proportion of changed values for individual attributes'
p4579
I0
I0
I00
tp4580
a(S'float'
p4581
S'defaultProportion'
p4582
g4582
S'default proportion of changed values (for attributes not specified above)'
p4583
I0
I0
I01
tp4584
a(S'TRandomGenerator'
p4585
S'randomGenerator'
p4586
g4586
S'random number generator'
p4587
I0
I0
I00
tp4588
asbsS'TStopIMClusteringByAssessor_binary'
p4589
(i__main__
ClassDefinition
p4590
(dp4591
g4
I1
sg5
I01
sg6
g4589
sg7
S'TStopIMClusteringByAssessor'
p4592
sg9
(lp4593
sg11
I00
sg12
(lp4594
sbsS'TColumnAssessor_mf'
p4595
(i__main__
ClassDefinition
p4596
(dp4597
g4
I1
sg5
I01
sg6
g4595
sg7
S'TColumnAssessor'
p4598
sg9
(lp4599
sg11
I00
sg12
(lp4600
(S'float'
p4601
g805
g805
S'm for m-estimate'
p4602
I0
I0
I01
tp4603
asbsS'TExamplesDistanceConstructor'
p4604
(i__main__
ClassDefinition
p4605
(dp4606
g4
I1
sg5
I01
sg6
g4604
sg7
S'TOrange'
p4607
sg9
(lp4608
sg11
I01
sg12
(lp4609
g1592
asbsS'TSubsetsGenerator'
p4610
(i__main__
ClassDefinition
p4611
(dp4612
g4
I1
sg5
I01
sg6
g4610
sg7
S'TOrange'
p4613
sg9
(lp4614
sg11
I01
sg12
(lp4615
g183
asbsS'TPreprocessor_addCensorWeight'
p4616
(i__main__
ClassDefinition
p4617
(dp4618
g4
I1
sg5
I01
sg6
g4616
sg7
S'TPreprocessor'
p4619
sg9
(lp4620
sg11
I00
sg12
(lp4621
(S'TVariable'
p4622
S'outcomeVar'
p4623
g4623
S'outcome variable'
p4624
I0
I0
I00
tp4625
a(S'TVariable'
p4626
S'timeVar'
p4627
g4627
S'time variable'
p4628
I0
I0
I00
tp4629
a(S'TValue'
p4630
S'eventValue'
p4631
g4631
S'event (fail) value'
p4632
I0
I0
I01
tp4633
a(S'int'
p4634
S'method'
p4635
g4635
S'weighting method'
p4636
I0
I0
I01
tp4637
a(S'float'
p4638
S'maxTime'
p4639
g4639
S'maximal time'
p4640
I0
I0
I01
tp4641
a(S'bool'
p4642
S'addComplementary'
p4643
g4643
S'if true (default is false), complementary examples are added for censored examples'
p4644
I0
I0
I01
tp4645
asbsS'TRuleBeamCandidateSelector_Python'
p4646
(i__main__
ClassDefinition
p4647
(dp4648
g4
I1
sg5
I01
sg6
g4646
sg7
S'TRuleBeamCandidateSelector'
p4649
sg9
(lp4650
sg11
I00
sg12
(lp4651
sbsS'TRandomForest'
p4652
(i__main__
ClassDefinition
p4653
(dp4654
g1115
I1
sg1116
I0
sg1117
g4652
sg1118
S'TClassifier'
p4655
sg1120
I00
sg1121
(lp4656
sg1123
(lp4657
(S'TRandomGenerator'
p4658
S'randomGenerator'
p4659
g4659
S'random generator'
p4660
I01
I0
I00
tp4661
ag83
ag87
asbsS'TEntropyDiscretization'
p4662
(i__main__
ClassDefinition
p4663
(dp4664
g4
I1
sg5
I01
sg6
g4662
sg7
S'TDiscretization'
p4665
sg9
(lp4666
sg11
I00
sg12
(lp4667
(S'int'
p4668
S'maxNumberOfIntervals'
p4669
g4669
S'maximal number of intervals; default = 0 (no limits)'
p4670
I0
I0
I01
tp4671
a(S'bool'
p4672
S'forceAttribute'
p4673
g4673
S'minimal number of intervals; default = 0 (no limits)'
p4674
I0
I0
I01
tp4675
asbsS'TIMBySorting'
p4676
(i__main__
ClassDefinition
p4677
(dp4678
g4
I1
sg5
I01
sg6
g4676
sg7
S'TIMConstructor'
p4679
sg9
(lp4680
sg11
I00
sg12
(lp4681
g835
asbsS'TImputerConstructor_asValue'
p4682
(i__main__
ClassDefinition
p4683
(dp4684
g4
I1
sg5
I01
sg6
g4682
sg7
S'TImputerConstructor'
p4685
sg9
(lp4686
sg11
I00
sg12
(lp4687
g151
asbsS'TGaussianDistribution'
p4688
(i__main__
ClassDefinition
p4689
(dp4690
g4
I1
sg5
I01
sg6
g4688
sg7
S'TDistribution'
p4691
sg9
(lp4692
sg11
I00
sg12
(lp4693
(S'float'
p4694
S'mean'
p4695
g4695
S'mu'
p4696
I0
I0
I01
tp4697
a(S'float'
p4698
S'sigma'
p4699
g4699
S'sigma'
p4700
I0
I0
I01
tp4701
ag735
ag739
ag743
ag747
ag751
ag755
ag759
ag763
asbsS'TExampleDistVector'
p4702
(i__main__
ClassDefinition
p4703
(dp4704
g4
I1
sg5
I01
sg6
g4702
sg7
S'TOrange'
p4705
sg9
(lp4706
sg11
I00
sg12
(lp4707
sbsS'TRuleClassifier'
p4708
(i__main__
ClassDefinition
p4709
(dp4710
g4
I1
sg5
I01
sg6
g4708
sg7
S'TClassifier'
p4711
sg9
(lp4712
sg11
I01
sg12
(lp4713
g1430
ag1433
ag83
ag87
asbsS'TRuleBeamFilter_Width'
p4714
(i__main__
ClassDefinition
p4715
(dp4716
g4
I1
sg5
I01
sg6
g4714
sg7
S'TRuleBeamFilter'
p4717
sg9
(lp4718
sg11
I00
sg12
(lp4719
(S'int'
p4720
S'width'
p4721
g4721
g1429
I0
I0
I01
tp4722
asbsS'TProbabilityEstimator'
p4723
(i__main__
ClassDefinition
p4724
(dp4725
g4
I1
sg5
I01
sg6
g4723
sg7
S'TOrange'
p4726
sg9
(lp4727
sg11
I01
sg12
(lp4728
g1083
ag1087
asbsS'TIMClustering'
p4729
(i__main__
ClassDefinition
p4730
(dp4731
g4
I1
sg5
I01
sg6
g4729
sg7
S'TOrange'
p4732
sg9
(lp4733
sg11
I00
sg12
(lp4734
(S'TIM'
p4735
S'im'
p4736
g4736
S'incompatibilty matrix'
p4737
I0
I0
I00
tp4738
a(S'TIntList'
p4739
S'clusters'
p4740
g4740
S'cluster index for each matrix column'
p4741
I0
I0
I00
tp4742
a(S'int'
p4743
S'maxCluster'
p4744
g4744
S'the highest cluster index'
p4745
I0
I0
I01
tp4746
a(S'float'
p4747
S'quality'
p4748
g4748
S'cluster quality'
p4749
I0
I0
I01
tp4750
asbsS'TImputerConstructor_model'
p4751
(i__main__
ClassDefinition
p4752
(dp4753
g4
I1
sg5
I01
sg6
g4751
sg7
S'TImputerConstructor'
p4754
sg9
(lp4755
sg11
I00
sg12
(lp4756
(S'TLearner'
p4757
S'learnerDiscrete'
p4758
g4758
S'learner for discrete attributes'
p4759
I0
I0
I00
tp4760
a(S'TLearner'
p4761
S'learnerContinuous'
p4762
g4762
S'learner for continuous attributes'
p4763
I0
I0
I00
tp4764
a(S'bool'
p4765
S'useClass'
p4766
g4766
S'tells whether to use class value in imputation (default: false)'
p4767
I0
I0
I01
tp4768
ag151
asbsS'TFindNearestConstructor_BruteForce'
p4769
(i__main__
ClassDefinition
p4770
(dp4771
g4
I1
sg5
I01
sg6
g4769
sg7
S'TFindNearestConstructor'
p4772
sg9
(lp4773
sg11
I00
sg12
(lp4774
g1412
ag1416
asbsS'TImputerConstructor'
p4775
(i__main__
ClassDefinition
p4776
(dp4777
g4
I1
sg5
I01
sg6
g4775
sg7
S'TOrange'
p4778
sg9
(lp4779
sg11
I01
sg12
(lp4780
g151
asbsS'TPreprocessor'
p4781
(i__main__
ClassDefinition
p4782
(dp4783
g4
I1
sg5
I01
sg6
g4781
sg7
S'TOrange'
p4784
sg9
(lp4785
sg11
I01
sg12
(lp4786
sbsS'TMakeRandomIndices'
p4787
(i__main__
ClassDefinition
p4788
(dp4789
g4
I1
sg5
I01
sg6
g4787
sg7
S'TOrange'
p4790
sg9
(lp4791
sg11
I00
sg12
(lp4792
g463
ag467
ag471
asbsS'TDiscretizer'
p4793
(i__main__
ClassDefinition
p4794
(dp4795
g4
I1
sg5
I01
sg6
g4793
sg7
S'TTransformValue'
p4796
sg9
(lp4797
sg11
I01
sg12
(lp4798
g501
asbsS'TIMByRowsPreprocessor'
p4799
(i__main__
ClassDefinition
p4800
(dp4801
g4
I1
sg5
I01
sg6
g4799
sg7
S'TOrange'
p4802
sg9
(lp4803
sg11
I01
sg12
(lp4804
sbsS'TTreeStopCriteria_common'
p4805
(i__main__
ClassDefinition
p4806
(dp4807
g4
I1
sg5
I01
sg6
g4805
sg7
S'TTreeStopCriteria'
p4808
sg9
(lp4809
sg11
I00
sg12
(lp4810
(S'float'
p4811
S'maxMajority'
p4812
g4812
S'a maximal proportion of majority class for division to continue'
p4813
I0
I0
I01
tp4814
a(S'float'
p4815
S'minExamples'
p4816
g4816
S'a minimal number of examples for division to continue'
p4817
I0
I0
I01
tp4818
asbsS'TRetisExampleGenerator'
p4819
(i__main__
ClassDefinition
p4820
(dp4821
g4
I1
sg5
I01
sg6
g4819
sg7
S'TFileExampleGenerator'
p4822
sg9
(lp4823
sg11
I00
sg12
(lp4824
g125
ag129
ag133
ag137
ag141
asbsS'TTreeStopCriteria_Python'
p4825
(i__main__
ClassDefinition
p4826
(dp4827
g4
I1
sg5
I01
sg6
g4825
sg7
S'TTreeStopCriteria'
p4828
sg9
(lp4829
sg11
I00
sg12
(lp4830
sbsS'TGeneralExampleClustering'
p4831
(i__main__
ClassDefinition
p4832
(dp4833
g4
I1
sg5
I01
sg6
g4831
sg7
S'TOrange'
p4834
sg9
(lp4835
sg11
I01
sg12
(lp4836
sbsS'TIGByIM'
p4837
(i__main__
ClassDefinition
p4838
(dp4839
g4
I1
sg5
I01
sg6
g4837
sg7
S'TIGConstructor'
p4840
sg9
(lp4841
sg11
I00
sg12
(lp4842
(S'TIMConstructor'
p4843
S'IMconstructor'
p4844
g4844
S'IM constructor'
p4845
I0
I0
I00
tp4846
asbs.