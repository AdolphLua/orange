(dp0
S'TComputeDomainContingency_ImputeWithClassifier'
p1
(i__main__
ClassDefinition
p2
(dp3
S'extended'
p4
I1
sS'imported'
p5
I01
sS'name'
p6
g1
sS'parent'
p7
S'TComputeDomainContingency'
p8
sS'components'
p9
(lp10
sS'abstract'
p11
I00
sS'properties'
p12
(lp13
(S'TLearner'
p14
S'learnerForDiscrete'
p15
g15
S'constructs a classifier for imputation of discrete values'
p16
I0
I0
I00
tp17
a(S'TLearner'
p18
S'learnerForContinuous'
p19
g19
S'constructs a classifier for imputation of continuous values'
p20
I0
I0
I00
tp21
a(S'bool'
p22
S'classIsOuter'
p23
g23
S'tells whether the class is the outer variable in contingencies'
p24
I0
I0
I01
tp25
asbsS'TRuleDataStoppingCriteria_NoPositives'
p26
(i__main__
ClassDefinition
p27
(dp28
g4
I1
sg5
I01
sg6
g26
sg7
S'TRuleDataStoppingCriteria'
p29
sg9
(lp30
sg11
I00
sg12
(lp31
sbsS'TExampleCluster'
p32
(i__main__
ClassDefinition
p33
(dp34
g4
I1
sg5
I01
sg6
g32
sg7
S'TOrange'
p35
sg9
(lp36
sg11
I00
sg12
(lp37
(S'TExampleCluster'
p38
S'left'
p39
g39
S"'left' cluster"
p40
I0
I0
I00
tp41
a(S'TExampleCluster'
p42
S'right'
p43
g43
S"'right' cluster"
p44
I0
I0
I00
tp45
a(S'float'
p46
S'distance'
p47
g47
S'distance between the two clusters (not defined for leaves)'
p48
I0
I0
I01
tp49
a(S'TExample'
p50
S'centroid'
p51
g51
S"cluster's centroid (always defined for leaves)"
p52
I0
I0
I00
tp53
asbsS'TClassifierByLookupTableN'
p54
(i__main__
ClassDefinition
p55
(dp56
g4
I1
sg5
I01
sg6
g54
sg7
S'TClassifierByLookupTable'
p57
sg9
(lp58
sg11
I00
sg12
(lp59
(S'TVarList'
p60
S'variables'
p61
g61
S'attributes'
p62
I01
I0
I00
tp63
a(S'TIntList'
p64
S'noOfValues'
p65
g65
S'number of values for each attribute'
p66
I01
I0
I00
tp67
a(S'TEFMDataDescription'
p68
S'dataDescription'
p69
g69
S'data description'
p70
I0
I0
I00
tp71
a(S'TValueList'
p72
S'lookupTable'
p73
g73
S'a list of class values, one for each attribute value'
p74
I01
I0
I00
tp75
a(S'TDistributionList'
p76
S'distributions'
p77
g77
S'a list of class distributions, one for each attribute value'
p78
I01
I0
I00
tp79
a(S'TVariable'
p80
S'classVar'
p81
g81
S'class variable'
p82
I0
I0
I00
tp83
a(S'bool'
p84
S'computesProbabilities'
p85
g85
S'set if classifier computes class probabilities (if not, it assigns 1.0 to the predicted)'
p86
I0
I0
I01
tp87
asbsS'TLearner_Python'
p88
(i__main__
ClassDefinition
p89
(dp90
g4
I1
sg5
I01
sg6
g88
sg7
S'TLearner'
p91
sg9
(lp92
sg11
I00
sg12
(lp93
(S'int'
p94
S'needs'
p95
g95
S'the kind of data that learner needs'
p96
I01
I0
I01
tp97
asbsS'TConditionalProbabilityEstimator_FromDistribution'
p98
(i__main__
ClassDefinition
p99
(dp100
g4
I1
sg5
I01
sg6
g98
sg7
S'TConditionalProbabilityEstimator'
p101
sg9
(lp102
sg11
I00
sg12
(lp103
(S'TContingency'
p104
S'probabilities'
p105
g105
S'Contingency that stores conditional probabilities'
p106
I0
I0
I00
tp107
a(S'bool'
p108
S'supportsDiscrete'
p109
g109
S'can estimate probabilities of discrete attributes'
p110
I01
I0
I01
tp111
a(S'bool'
p112
S'supportsContinuous'
p113
g113
S'can estimate probabilities of continuous attributes'
p114
I01
I0
I01
tp115
asbsS'TAssistantExampleGenerator'
p116
(i__main__
ClassDefinition
p117
(dp118
g4
I1
sg5
I01
sg6
g116
sg7
S'TFileExampleGenerator'
p119
sg9
(lp120
sg11
I00
sg12
(lp121
(S'string'
p122
S'filename'
p123
g123
S'filename'
p124
I0
I0
I01
tp125
a(S'int'
p126
S'startDataPos'
p127
g127
S'starting position of the data in file'
p128
I0
I0
I01
tp129
a(S'int'
p130
S'startDataLine'
p131
g131
S'line in the file where the data starts'
p132
I0
I0
I01
tp133
a(S'TDomain'
p134
S'domain'
p135
g135
S'domain'
p136
I0
I0
I00
tp137
a(S'int'
p138
S'version'
p139
g139
S'unique version identifier'
p140
I01
I0
I01
tp141
asbsS'TImputerConstruct_Python'
p142
(i__main__
ClassDefinition
p143
(dp144
g4
I1
sg5
I01
sg6
g142
sg7
S'TImputerConstructor'
p145
sg9
(lp146
sg11
I00
sg12
(lp147
(S'bool'
p148
S'imputeClass'
p149
g149
S'tells whether to impute the class value (default: true)'
p150
I0
I0
I01
tp151
asbsS'TIMByRowsConstructor'
p152
(i__main__
ClassDefinition
p153
(dp154
g4
I1
sg5
I01
sg6
g152
sg7
S'TOrange'
p155
sg9
(lp156
sg11
I01
sg12
(lp157
sbsS'TSubsetsGenerator_withRestrictions'
p158
(i__main__
ClassDefinition
p159
(dp160
g4
I1
sg5
I01
sg6
g158
sg7
S'TSubsetsGenerator'
p161
sg9
(lp162
sg11
I00
sg12
(lp163
(S'TSubsetsGenerator'
p164
S'subGenerator'
p165
g165
S'subset generator'
p166
I0
I0
I00
tp167
a(S'TVarList'
p168
S'required'
p169
g169
S'set of required attributes'
p170
I0
I0
I00
tp171
a(S'TVarList'
p172
S'forbidden'
p173
g173
S'set of forbidden attributes'
p174
I0
I0
I00
tp175
a(S'TVarListList'
p176
S'forbiddenSubSubsets'
p177
g177
S'set of forbidden subsets (attributes that must not occur together)'
p178
I0
I0
I00
tp179
a(S'TVarList'
p180
S'varList'
p181
g181
S'a set of attributes from which subsets are generated'
p182
I0
I0
I00
tp183
asbsS'TRuleBeamFilter_Python'
p184
(i__main__
ClassDefinition
p185
(dp186
g4
I1
sg5
I01
sg6
g184
sg7
S'TRuleBeamFilter'
p187
sg9
(lp188
sg11
I00
sg12
(lp189
sbsS'TTreeExampleSplitter'
p190
(i__main__
ClassDefinition
p191
(dp192
g4
I1
sg5
I01
sg6
g190
sg7
S'TOrange'
p193
sg9
(lp194
sg11
I01
sg12
(lp195
sbsS'TSVMClassifier'
p196
(i__main__
ClassDefinition
p197
(dp198
g4
I1
sg5
I01
sg6
g196
sg7
S'TClassifier'
p199
sg9
(lp200
sg11
I00
sg12
(lp201
(S'TExampleTable'
p202
S'supportVectors'
p203
g203
S'support vectors'
p204
I0
I0
I00
tp205
a(S'TExampleTable'
p206
S'examples'
p207
g207
S'examples used to train the classifier'
p208
I0
I0
I00
tp209
ag83
ag87
asbsS'TFilteredGenerator'
p210
(i__main__
ClassDefinition
p211
(dp212
g4
I1
sg5
I01
sg6
g210
sg7
S'TAdapterGenerator'
p213
sg9
(lp214
sg11
I00
sg12
(lp215
(S'TFilter'
p216
S'filter'
p217
g217
S'decides which examples are skipped'
p218
I0
I0
I00
tp219
ag137
ag141
asbsS'TPythonVariable'
p220
(i__main__
ClassDefinition
p221
(dp222
g4
I1
sg5
I01
sg6
g220
sg7
S'TVariable'
p223
sg9
(lp224
sg11
I00
sg12
(lp225
(S'bool'
p226
S'usePickle'
p227
g227
S'tells whether to use pickle for saving to/loading from files'
p228
I0
I0
I01
tp229
a(S'bool'
p230
S'useSomeValue'
p231
g231
S'tells whether the Variable will operate on Value or SomeValue (default)'
p232
I0
I0
I01
tp233
a(S'string'
p234
S'name'
p235
g235
S"variable's name"
p236
I0
I0
I01
tp237
a(S'int'
p238
S'varType'
p239
g239
S'variable type'
p240
I0
I0
I01
tp241
a(S'bool'
p242
S'ordered'
p243
g243
S'variable values are ordered'
p244
I0
I0
I01
tp245
a(S'bool'
p246
S'distributed'
p247
g247
S'variable values are distributions'
p248
I0
I0
I01
tp249
a(S'TRandomGenerator'
p250
S'randomGenerator'
p251
g251
S'random generator for random values (initialized when first needed)'
p252
I0
I0
I00
tp253
a(S'TVariable'
p254
S'sourceVariable'
p255
g255
S'The attribute that this attribute is computed from (when applicable)'
p256
I0
I0
I00
tp257
a(S'TClassifier'
p258
S'getValueFrom'
p259
g259
S'Function to compute the value from values of other variables'
p260
I0
I0
I00
tp261
asbsS'TTreeLearner'
p262
(i__main__
ClassDefinition
p263
(dp264
g4
I1
sg5
I01
sg6
g262
sg7
S'TLearner'
p265
sg9
(lp266
sg11
I00
sg12
(lp267
(S'TTreeSplitConstructor'
p268
S'split'
p269
g269
S'split criterion'
p270
I0
I0
I00
tp271
a(S'TTreeStopCriteria'
p272
S'stop'
p273
g273
S'stop criterion'
p274
I0
I0
I00
tp275
a(S'TComputeDomainContingency'
p276
S'contingencyComputer'
p277
g277
S'computes contingency matrix'
p278
I0
I0
I00
tp279
a(S'TLearner'
p280
S'nodeLearner'
p281
g281
S'node learner'
p282
I0
I0
I00
tp283
a(S'TTreeExampleSplitter'
p284
S'exampleSplitter'
p285
g285
S'splits examples to branches'
p286
I0
I0
I00
tp287
a(S'int'
p288
S'maxDepth'
p289
g289
S'maximal tree depth (0 = root only, -1 = no limit)'
p290
I0
I0
I01
tp291
a(S'bool'
p292
S'storeExamples'
p293
g293
S'if true (default: false), learning examples in nodes are stored'
p294
I0
I0
I01
tp295
a(S'bool'
p296
S'storeDistributions'
p297
g297
S'if true (default), class distributions of learning examples in nodes are stored'
p298
I0
I0
I01
tp299
a(S'bool'
p300
S'storeContingencies'
p301
g301
S'if true (default), contingency matrices for examples are stored'
p302
I0
I0
I01
tp303
a(S'bool'
p304
S'storeNodeClassifier'
p305
g305
S'if true (default), the internal nodes have classifiers; needed for pruning'
p306
I0
I0
I01
tp307
a(S'TTreeDescender'
p308
S'descender'
p309
g309
S'descends down the tree'
p310
I0
I0
I00
tp311
ag97
asbsS'TLearner'
p312
(i__main__
ClassDefinition
p313
(dp314
g4
I1
sg5
I01
sg6
g312
sg7
S'TOrange'
p315
sg9
(lp316
sg11
I00
sg12
(lp317
g97
asbsS'TExamplesDistance_Maximal'
p318
(i__main__
ClassDefinition
p319
(dp320
g4
I1
sg5
I01
sg6
g318
sg7
S'TExamplesDistance_Normalized'
p321
sg9
(lp322
sg11
I00
sg12
(lp323
(S'TAttributedFloatList'
p324
S'normalizers'
p325
g325
S'normalizing factors for attributes'
p326
I0
I0
I00
tp327
a(S'TAttributedFloatList'
p328
S'bases'
p329
g329
S'lowest values for attributes'
p330
I0
I0
I00
tp331
a(S'TAttributedFloatList'
p332
S'averages'
p333
g333
S'average values for continuous attribute values'
p334
I0
I0
I00
tp335
a(S'TAttributedFloatList'
p336
S'variances'
p337
g337
S'variations for continuous attribute values'
p338
I0
I0
I00
tp339
a(S'int'
p340
S'domainVersion'
p341
g341
S'version of domain on which the ranges were computed'
p342
I0
I0
I01
tp343
a(S'bool'
p344
S'normalize'
p345
g345
S'tells whether to normalize distances between attributes'
p346
I0
I0
I01
tp347
a(S'bool'
p348
S'ignoreUnknowns'
p349
g349
S'if true (default: false) unknown values are ignored in computation'
p350
I0
I0
I01
tp351
asbsS'TPreprocessor_discretize'
p352
(i__main__
ClassDefinition
p353
(dp354
g4
I1
sg5
I01
sg6
g352
sg7
S'TPreprocessor'
p355
sg9
(lp356
sg11
I00
sg12
(lp357
(S'TVarList'
p358
S'attributes'
p359
g359
S'attributes to be discretized (all, if not defined or empty)'
p360
I0
I0
I00
tp361
a(S'bool'
p362
S'discretizeClass'
p363
g363
S'also discretize the class attribute (default: false)'
p364
I0
I0
I01
tp365
a(S'TDiscretization'
p366
S'method'
p367
g367
S'discretization method'
p368
I0
I0
I00
tp369
asbsS'TProgressCallback_Python'
p370
(i__main__
ClassDefinition
p371
(dp372
g4
I1
sg5
I01
sg6
g370
sg7
S'TProgressCallback'
p373
sg9
(lp374
sg11
I00
sg12
(lp375
sbsS'TImputeClassifier'
p376
(i__main__
ClassDefinition
p377
(dp378
g4
I1
sg5
I01
sg6
g376
sg7
S'TClassifier'
p379
sg9
(lp380
sg11
I00
sg12
(lp381
(S'TClassifierFromVar'
p382
S'classifierFromVar'
p383
g383
S'ClassifierFromVar that is used to retrieve defined values'
p384
I0
I0
I00
tp385
a(S'TClassifier'
p386
S'imputer'
p387
g387
S'classifier that is used to determine the missing values '
p388
I0
I0
I00
tp389
ag83
ag87
asbsS'TRuleCovererAndRemover'
p390
(i__main__
ClassDefinition
p391
(dp392
g4
I1
sg5
I01
sg6
g390
sg7
S'TOrange'
p393
sg9
(lp394
sg11
I01
sg12
(lp395
sbsS'TPythonValue'
p396
(i__main__
ClassDefinition
p397
(dp398
g4
I1
sg5
I01
sg6
g396
sg7
S'TSomeValue'
p399
sg9
(lp400
sg11
I00
sg12
(lp401
sbsS'TAssociationRulesSparseInducer'
p402
(i__main__
ClassDefinition
p403
(dp404
g4
I1
sg5
I01
sg6
g402
sg7
S'TOrange'
p405
sg9
(lp406
sg11
I00
sg12
(lp407
(S'int'
p408
S'maxItemSets'
p409
g409
S'maximal number of itemsets (increase if you want)'
p410
I0
I0
I01
tp411
a(S'float'
p412
S'confidence'
p413
g413
S'required confidence'
p414
I0
I0
I01
tp415
a(S'float'
p416
S'support'
p417
g417
S'required support'
p418
I0
I0
I01
tp419
asbsS'TFilter_sameExample'
p420
(i__main__
ClassDefinition
p421
(dp422
g4
I1
sg5
I01
sg6
g420
sg7
S'TFilter'
p423
sg9
(lp424
sg11
I00
sg12
(lp425
(S'TExample'
p426
S'example'
p427
g427
S'example with which examples are compared'
p428
I0
I0
I00
tp429
a(S'bool'
p430
S'negate'
p431
g431
S'if true, filter output should be negated.'
p432
I0
I0
I01
tp433
a(S'TDomain'
p434
S'domain'
p435
g435
S'domain to which the examples are converted (if needed)'
p436
I0
I0
I00
tp437
asbsS'TRuleClassifierConstructor'
p438
(i__main__
ClassDefinition
p439
(dp440
g4
I1
sg5
I01
sg6
g438
sg7
S'TOrange'
p441
sg9
(lp442
sg11
I01
sg12
(lp443
sbsS'TKaplanMeier'
p444
(i__main__
ClassDefinition
p445
(dp446
g4
I1
sg5
I01
sg6
g444
sg7
S'TOrange'
p447
sg9
(lp448
sg11
I00
sg12
(lp449
sbsS'TMakeRandomIndicesMultiple'
p450
(i__main__
ClassDefinition
p451
(dp452
g4
I1
sg5
I01
sg6
g450
sg7
S'TMakeRandomIndices'
p453
sg9
(lp454
sg11
I00
sg12
(lp455
(S'int'
p456
S'stratified'
p457
g457
S'requests stratified distributions'
p458
I0
I0
I01
tp459
a(S'int'
p460
S'randseed'
p461
g461
S'a seed for random generator'
p462
I0
I0
I01
tp463
a(S'TRandomGenerator'
p464
S'randomGenerator'
p465
g465
S'a random generator'
p466
I0
I0
I00
tp467
asbsS'TLearnerFD'
p468
(i__main__
ClassDefinition
p469
(dp470
g4
I1
sg5
I01
sg6
g468
sg7
S'TLearner'
p471
sg9
(lp472
sg11
I00
sg12
(lp473
(S'TDomain'
p474
S'domain'
p475
g475
S'domain'
p476
I0
I0
I00
tp477
ag97
asbsS'TFeatureInducer'
p478
(i__main__
ClassDefinition
p479
(dp480
g4
I1
sg5
I01
sg6
g478
sg7
S'TOrange'
p481
sg9
(lp482
sg11
I01
sg12
(lp483
sbsS'TMapIntValue'
p484
(i__main__
ClassDefinition
p485
(dp486
g4
I1
sg5
I01
sg6
g484
sg7
S'TTransformValue'
p487
sg9
(lp488
sg11
I00
sg12
(lp489
(S'TIntList'
p490
S'mapping'
p491
g491
S'a lookup table'
p492
I0
I0
I00
tp493
a(S'TTransformValue'
p494
S'subTransform'
p495
g495
S'transformation executed prior to this'
p496
I0
I0
I00
tp497
asbsS'TDistributionAssessor_Kramer'
p498
(i__main__
ClassDefinition
p499
(dp500
g4
I1
sg5
I01
sg6
g498
sg7
S'TDistributionAssessor'
p501
sg9
(lp502
sg11
I00
sg12
(lp503
sbsS'TTreeExampleSplitter_UnknownsToBranch'
p504
(i__main__
ClassDefinition
p505
(dp506
g4
I1
sg5
I01
sg6
g504
sg7
S'TTreeExampleSplitter'
p507
sg9
(lp508
sg11
I00
sg12
(lp509
sbsS'TMajorityLearner'
p510
(i__main__
ClassDefinition
p511
(dp512
g4
I1
sg5
I01
sg6
g510
sg7
S'TLearner'
p513
sg9
(lp514
sg11
I00
sg12
(lp515
(S'TProbabilityEstimatorConstructor'
p516
S'estimatorConstructor'
p517
g517
S'constructs probability estimator'
p518
I0
I0
I00
tp519
a(S'TDistribution'
p520
S'aprioriDistribution'
p521
g521
S'apriori class distribution'
p522
I0
I0
I00
tp523
ag97
asbsS'TFeatureByIM'
p524
(i__main__
ClassDefinition
p525
(dp526
g4
I1
sg5
I01
sg6
g524
sg7
S'TFeatureInducer'
p527
sg9
(lp528
sg11
I00
sg12
(lp529
(S'TIMConstructor'
p530
S'IMconstructor'
p531
g531
S'incompatibility matrix constructor'
p532
I0
I0
I00
tp533
a(S'TClustersFromIM'
p534
S'clustersFromIM'
p535
g535
S'clustering algorithm'
p536
I0
I0
I00
tp537
a(S'int'
p538
S'completion'
p539
g539
S'decides how to determine the class for points not covered by any cluster'
p540
I0
I0
I01
tp541
asbsS'TMeasureAttributeFromProbabilities'
p542
(i__main__
ClassDefinition
p543
(dp544
g4
I1
sg5
I01
sg6
g542
sg7
S'TMeasureAttribute'
p545
sg9
(lp546
sg11
I01
sg12
(lp547
(S'TProbabilityEstimatorConstructor'
p548
S'estimatorConstructor'
p549
g549
S'probability estimator (none by default)'
p550
I0
I0
I00
tp551
a(S'TConditionalProbabilityEstimatorConstructor'
p552
S'conditionalEstimatorConstructor'
p553
g553
S'conditional probability estimator (none by default)'
p554
I0
I0
I00
tp555
a(S'int'
p556
S'unknownsTreatment'
p557
g557
S'treatment of unknown values'
p558
I0
I0
I01
tp559
a(S'int'
p560
S'needs'
p561
g561
S'describes what kind of data is needed for computation'
p562
I0
I0
I01
tp563
a(S'bool'
p564
S'handlesDiscrete'
p565
g565
S'tells whether the measure can handle discrete attributes'
p566
I01
I0
I01
tp567
a(S'bool'
p568
S'handlesContinuous'
p569
g569
S'tells whether the measure can handle continuous attributes'
p570
I01
I0
I01
tp571
asbsS'TProbabilityEstimatorConstructor_relative'
p572
(i__main__
ClassDefinition
p573
(dp574
g4
I1
sg5
I01
sg6
g572
sg7
S'TProbabilityEstimatorConstructor'
p575
sg9
(lp576
sg11
I00
sg12
(lp577
sbsS'TClassifierByLookupTable3'
p578
(i__main__
ClassDefinition
p579
(dp580
g4
I1
sg5
I01
sg6
g578
sg7
S'TClassifierByLookupTable'
p581
sg9
(lp582
sg11
I00
sg12
(lp583
(S'TVariable'
p584
S'variable1'
p585
g585
S'the first attribute used for classification'
p586
I01
I0
I00
tp587
a(S'TVariable'
p588
S'variable2'
p589
g589
S'the second attribute used for classification'
p590
I01
I0
I00
tp591
a(S'TVariable'
p592
S'variable3'
p593
g593
S'the third attribute used for classification'
p594
I01
I0
I00
tp595
a(S'int'
p596
S'noOfValues1'
p597
g597
S'number of values of the first attribute'
p598
I01
I0
I01
tp599
a(S'int'
p600
S'noOfValues2'
p601
g601
S'number of values of the second attribute'
p602
I01
I0
I01
tp603
a(S'int'
p604
S'noOfValues3'
p605
g605
S'number of values of the third attribute'
p606
I01
I0
I01
tp607
a(S'TEFMDataDescription'
p608
S'dataDescription'
p609
g609
S'data description'
p610
I0
I0
I00
tp611
ag75
ag79
ag83
ag87
asbsS'TImputerConstructor_maximal'
p612
(i__main__
ClassDefinition
p613
(dp614
g4
I1
sg5
I01
sg6
g612
sg7
S'TImputerConstructor'
p615
sg9
(lp616
sg11
I00
sg12
(lp617
g151
asbsS'TRuleBeamRefiner'
p618
(i__main__
ClassDefinition
p619
(dp620
g4
I1
sg5
I01
sg6
g618
sg7
S'TOrange'
p621
sg9
(lp622
sg11
I01
sg12
(lp623
sbsS'TEquiDistDiscretizer'
p624
(i__main__
ClassDefinition
p625
(dp626
g4
I1
sg5
I01
sg6
g624
sg7
S'TDiscretizer'
p627
sg9
(lp628
sg11
I00
sg12
(lp629
(S'int'
p630
S'numberOfIntervals'
p631
g631
S'number of intervals'
p632
I0
I0
I01
tp633
a(S'float'
p634
S'firstCut'
p635
g635
S'the first cut-off point'
p636
I0
I0
I01
tp637
a(S'float'
p638
S'step'
p639
g639
S'step (width of interval)'
p640
I0
I0
I01
tp641
ag497
asbsS'TMyClassifier'
p642
(i__main__
ClassDefinition
p643
(dp644
S'extended'
p645
I1
sS'imported'
p646
I0
sS'name'
p647
g642
sS'parent'
p648
S'TClassifier'
p649
sS'abstract'
p650
I00
sS'components'
p651
(lp652
sS'properties'
p653
(lp654
(S'TRandomGenerator'
p655
S'randomGenerator'
p656
g656
S'random generator'
p657
I01
I0
I00
tp658
ag83
ag87
asbsS'TValueFilter_string'
p659
(i__main__
ClassDefinition
p660
(dp661
g4
I1
sg5
I01
sg6
g659
sg7
S'TValueFilter'
p662
sg9
(lp663
sg11
I00
sg12
(lp664
(S'string'
p665
S'min'
p666
(g666
S'ref'
p667
tp668
S' reference value (lower bound for interval operators)'
p669
I0
I0
I01
tp670
a(S'string'
p671
S'max'
p672
g672
S'upper bound for interval operators'
p673
I0
I0
I01
tp674
a(S'int'
p675
S'oper'
p676
g676
S'operator'
p677
I0
I0
I01
tp678
a(S'bool'
p679
S'caseSensitive'
p680
g680
S'if true (default), the operator is case sensitive'
p681
I0
I0
I01
tp682
a(S'int'
p683
S'position'
p684
g684
S"attribute's position in domain"
p685
I0
I0
I01
tp686
a(S'int'
p687
S'acceptSpecial'
p688
g688
S'tells whether a special value (DK, DC...) is accepted (1), rejected (0) or ignored (-1)'
p689
I0
I0
I01
tp690
asbsS'TFindNearest_BruteForce'
p691
(i__main__
ClassDefinition
p692
(dp693
g4
I1
sg5
I01
sg6
g691
sg7
S'TFindNearest'
p694
sg9
(lp695
sg11
I00
sg12
(lp696
(S'TExamplesDistance'
p697
S'distance'
p698
g698
S'metrics'
p699
I0
I0
I00
tp700
a(S'TExampleGenerator'
p701
S'examples'
p702
g702
S'a list of stored examples'
p703
I0
I0
I00
tp704
a(S'int'
p705
S'weightID'
p706
g706
S'weight to use when counting examples'
p707
I0
I0
I01
tp708
a(S'int'
p709
S'distanceID'
p710
g710
S'id of meta attribute where the distance should be stored (0 = no storing)'
p711
I0
I0
I01
tp712
a(S'bool'
p713
S'includeSame'
p714
g714
S'tells whether to include examples that are same as the reference example'
p715
I0
I0
I01
tp716
asbsS'TRuleBeamInitializer'
p717
(i__main__
ClassDefinition
p718
(dp719
g4
I1
sg5
I01
sg6
g717
sg7
S'TOrange'
p720
sg9
(lp721
sg11
I01
sg12
(lp722
sbsS'TMeasureAttribute_relevance'
p723
(i__main__
ClassDefinition
p724
(dp725
g4
I1
sg5
I01
sg6
g723
sg7
S'TMeasureAttributeFromProbabilities'
p726
sg9
(lp727
sg11
I00
sg12
(lp728
g551
ag555
ag559
ag563
ag567
ag571
asbsS'TFilter_hasSpecial'
p729
(i__main__
ClassDefinition
p730
(dp731
g4
I1
sg5
I01
sg6
g729
sg7
S'TFilter'
p732
sg9
(lp733
sg11
I00
sg12
(lp734
g433
ag437
asbsS'TDiscDistribution'
p735
(i__main__
ClassDefinition
p736
(dp737
g4
I1
sg5
I01
sg6
g735
sg7
S'TDistribution'
p738
sg9
(lp739
sg11
I00
sg12
(lp740
(S'TFloatList'
p741
S'variances'
p742
g742
S'variances'
p743
I0
I0
I00
tp744
a(S'TVariable'
p745
S'variable'
p746
g746
S'attribute descriptor (optional)'
p747
I0
I0
I00
tp748
a(S'float'
p749
S'unknowns'
p750
g750
S'number of unknown values'
p751
I0
I0
I01
tp752
a(S'float'
p753
S'abs'
p754
g754
S'sum of frequencies (not including unknown values!)'
p755
I0
I0
I01
tp756
a(S'float'
p757
S'cases'
p758
g758
S"number of cases; as abs, but doesn't change at *= and normalize()"
p759
I0
I0
I01
tp760
a(S'bool'
p761
S'normalized'
p762
g762
S'distribution is normalized'
p763
I0
I0
I01
tp764
a(S'bool'
p765
S'supportsDiscrete'
p766
g766
S'distribution supports discrete interface'
p767
I01
I0
I01
tp768
a(S'bool'
p769
S'supportsContinuous'
p770
g770
S'distribution supports continuous interface'
p771
I01
I0
I01
tp772
a(S'TRandomGenerator'
p773
S'randomGenerator'
p774
g774
S'random generator; initialized when needed, if not given earlier'
p775
I0
I0
I00
tp776
asbsS'TBayesLearner'
p777
(i__main__
ClassDefinition
p778
(dp779
g4
I1
sg5
I01
sg6
g777
sg7
S'TLearner'
p780
sg9
(lp781
sg11
I00
sg12
(lp782
(S'TProbabilityEstimatorConstructor'
p783
S'estimatorConstructor'
p784
g784
S'constructs a probability estimator for P(C)'
p785
I0
I0
I00
tp786
a(S'TConditionalProbabilityEstimatorConstructor'
p787
S'conditionalEstimatorConstructor'
p788
g788
S'constructs a probability estimator for P(C|A) '
p789
I0
I0
I00
tp790
a(S'TConditionalProbabilityEstimatorConstructor'
p791
S'conditionalEstimatorConstructorContinuous'
p792
g792
S'constructs a probability estimator for P(C|A) for continuous attributes'
p793
I0
I0
I00
tp794
a(S'bool'
p795
S'normalizePredictions'
p796
g796
S'instructs learner to construct a classifier that normalizes probabilities'
p797
I0
I0
I01
tp798
a(S'bool'
p799
S'adjustThreshold'
p800
g800
S'adjust probability thresholds (for binary classes only)'
p801
I0
I0
I01
tp802
ag97
asbsS'TIMByRelief'
p803
(i__main__
ClassDefinition
p804
(dp805
g4
I1
sg5
I01
sg6
g803
sg7
S'TIMConstructor'
p806
sg9
(lp807
sg11
I00
sg12
(lp808
(S'TExamplesDistance_Relief'
p809
S'distance'
p810
g810
S'distance measure'
p811
I0
I0
I00
tp812
a(S'float'
p813
S'k'
p814
g814
S'number of neighbours'
p815
I0
I0
I01
tp816
a(S'float'
p817
S'm'
p818
g818
S'number of reference examples'
p819
I0
I0
I01
tp820
a(S'float'
p821
S'kFromColumns'
p822
g822
S'if positive, number of neighbours is #columns*kFromColumns'
p823
I0
I0
I01
tp824
a(S'bool'
p825
S'ignoreSameExample'
p826
g826
S'does not put reference example into M'
p827
I0
I0
I01
tp828
a(S'bool'
p829
S'convertToBinary'
p830
g830
S'convert to binary class (hit-miss)'
p831
I0
I0
I01
tp832
a(S'bool'
p833
S'correctClassFirst'
p834
g834
S'puts the correct class proportion to the first place'
p835
I0
I0
I01
tp836
a(S'bool'
p837
S'allExamples'
p838
g838
S'uses all examples for reference examples'
p839
I0
I0
I01
tp840
a(S'bool'
p841
S'allSameNeighbours'
p842
g842
S'uses all the examples same to the reference as neighbours'
p843
I0
I0
I01
tp844
a(S'bool'
p845
S'recordRowExamples'
p846
g846
S'enables creation of rowExample list'
p847
I0
I0
I01
tp848
asbsS'TConditionalProbabilityEstimator'
p849
(i__main__
ClassDefinition
p850
(dp851
g4
I1
sg5
I01
sg6
g849
sg7
S'TOrange'
p852
sg9
(lp853
sg11
I01
sg12
(lp854
g111
ag115
asbsS'TColumnAssessor_Laplace'
p855
(i__main__
ClassDefinition
p856
(dp857
g4
I1
sg5
I01
sg6
g855
sg7
S'TColumnAssessor'
p858
sg9
(lp859
sg11
I00
sg12
(lp860
sbsS'TPreprocessor_addGaussianNoise'
p861
(i__main__
ClassDefinition
p862
(dp863
g4
I1
sg5
I01
sg6
g861
sg7
S'TPreprocessor'
p864
sg9
(lp865
sg11
I00
sg12
(lp866
(S'TVariableFloatMap'
p867
S'deviations'
p868
g868
S'deviations individual attribute values'
p869
I0
I0
I00
tp870
a(S'float'
p871
S'defaultDeviation'
p872
g872
S'default deviation'
p873
I0
I0
I01
tp874
a(S'TRandomGenerator'
p875
S'randomGenerator'
p876
g876
S'random number generator'
p877
I0
I0
I00
tp878
asbsS'TRuleStoppingCriteria_NegativeDistribution'
p879
(i__main__
ClassDefinition
p880
(dp881
g4
I1
sg5
I01
sg6
g879
sg7
S'TRuleStoppingCriteria'
p882
sg9
(lp883
sg11
I00
sg12
(lp884
sbsS'TTreeSplitConstructor_ExhaustiveBinary'
p885
(i__main__
ClassDefinition
p886
(dp887
g4
I1
sg5
I01
sg6
g885
sg7
S'TTreeSplitConstructor_Measure'
p888
sg9
(lp889
sg11
I00
sg12
(lp890
(S'TMeasureAttribute'
p891
S'measure'
p892
g892
S'attribute quality measure'
p893
I0
I0
I00
tp894
a(S'float'
p895
S'worstAcceptable'
p896
g896
S'the worst acceptable quality of the attribute'
p897
I0
I0
I01
tp898
a(S'float'
p899
S'minSubset'
p900
g900
S'minimal number of examples in a subset'
p901
I0
I0
I01
tp902
asbsS'TTreeClassifier'
p903
(i__main__
ClassDefinition
p904
(dp905
g4
I1
sg5
I01
sg6
g903
sg7
S'TClassifierFD'
p906
sg9
(lp907
sg11
I00
sg12
(lp908
(S'TTreeNode'
p909
S'tree'
p910
g910
S'decision tree'
p911
I0
I0
I00
tp912
a(S'TTreeDescender'
p913
S'descender'
p914
g914
S'object that descends down the tree'
p915
I0
I0
I00
tp916
a(S'TDomain'
p917
S'domain'
p918
g918
S'domain'
p919
I0
I0
I00
tp920
ag83
ag87
asbsS'TFilter_compatibleExample'
p921
(i__main__
ClassDefinition
p922
(dp923
g4
I1
sg5
I01
sg6
g921
sg7
S'TFilter'
p924
sg9
(lp925
sg11
I00
sg12
(lp926
(S'TExample'
p927
S'example'
p928
g928
S'example with which examples are compared'
p929
I0
I0
I00
tp930
ag433
ag437
asbsS'TRemoveRedundant'
p931
(i__main__
ClassDefinition
p932
(dp933
g4
I1
sg5
I01
sg6
g931
sg7
S'TOrange'
p934
sg9
(lp935
sg11
I01
sg12
(lp936
(S'bool'
p937
S'keepValues'
p938
g938
S'keep an attribute if number values is only smaller, not one'
p939
I0
I0
I01
tp940
asbsS'TSomeValue'
p941
(i__main__
ClassDefinition
p942
(dp943
g4
I1
sg5
I01
sg6
g941
sg7
S'TOrange'
p944
sg9
(lp945
sg11
I01
sg12
(lp946
sbsS'TRuleClassifierConstructor_firstRule'
p947
(i__main__
ClassDefinition
p948
(dp949
g4
I1
sg5
I01
sg6
g947
sg7
S'TRuleClassifierConstructor'
p950
sg9
(lp951
sg11
I00
sg12
(lp952
sbsS'TLinRegLearner'
p953
(i__main__
ClassDefinition
p954
(dp955
g4
I1
sg5
I01
sg6
g953
sg7
S'TLearner'
p956
sg9
(lp957
sg11
I00
sg12
(lp958
(S'int'
p959
S'iterativeSelection'
p960
g960
S'0 all, 1 forward, 2 backward, 3 stepwise'
p961
I0
I0
I01
tp962
a(S'float'
p963
S'Fin'
p964
g964
S'significance limit for an attribute to enter the model'
p965
I0
I0
I01
tp966
a(S'float'
p967
S'Fout'
p968
g968
S'significance limit for the attribute to be removed'
p969
I0
I0
I01
tp970
a(S'int'
p971
S'maxIterations'
p972
g972
S'maximal number of iterations for stepwise'
p973
I0
I0
I01
tp974
a(S'TImputerConstructor'
p975
S'imputerConstructor'
p976
g976
S'if present, it constructs an imputer for unknown values'
p977
I0
I0
I00
tp978
a(S'TDomainContinuizer'
p979
S'continuizer'
p980
g980
S'if present, specifies the way in which discrete attributes are converted to continuous'
p981
I0
I0
I00
tp982
ag97
asbsS'TStopDistributionClustering_noProfit'
p983
(i__main__
ClassDefinition
p984
(dp985
g4
I1
sg5
I01
sg6
g983
sg7
S'TStopDistributionClustering'
p986
sg9
(lp987
sg11
I00
sg12
(lp988
(S'float'
p989
S'minProfitProportion'
p990
g990
S'minimal allowable profit proportion'
p991
I0
I0
I01
tp992
asbsS'TBiModalDiscretization'
p993
(i__main__
ClassDefinition
p994
(dp995
g4
I1
sg5
I01
sg6
g993
sg7
S'TDiscretization'
p996
sg9
(lp997
sg11
I00
sg12
(lp998
(S'bool'
p999
S'splitInTwo'
p1000
g1000
S'if true (default), flanks are merged into a single interval'
p1001
I0
I0
I01
tp1002
asbsS'TIntVariable'
p1003
(i__main__
ClassDefinition
p1004
(dp1005
g4
I1
sg5
I01
sg6
g1003
sg7
S'TVariable'
p1006
sg9
(lp1007
sg11
I00
sg12
(lp1008
(S'int'
p1009
S'startValue'
p1010
g1010
S'lowest value'
p1011
I0
I0
I01
tp1012
a(S'int'
p1013
S'endValue'
p1014
g1014
S'highest value'
p1015
I0
I0
I01
tp1016
ag237
ag241
ag245
ag249
ag253
ag257
ag261
asbsS'TColoredIG'
p1017
(i__main__
ClassDefinition
p1018
(dp1019
g4
I1
sg5
I01
sg6
g1017
sg7
S'TGeneralExampleClustering'
p1020
sg9
(lp1021
sg11
I00
sg12
(lp1022
(S'TIG'
p1023
S'ig'
p1024
g1024
S'incompatibility graph'
p1025
I0
I0
I00
tp1026
a(S'TIntList'
p1027
S'colors'
p1028
g1028
S'colors (one element corresponding to each ig node)'
p1029
I0
I0
I00
tp1030
asbsS'TMeasureAttribute'
p1031
(i__main__
ClassDefinition
p1032
(dp1033
g4
I1
sg5
I01
sg6
g1031
sg7
S'TOrange'
p1034
sg9
(lp1035
sg11
I00
sg12
(lp1036
g563
ag567
ag571
asbsS'TRuleEvaluator'
p1037
(i__main__
ClassDefinition
p1038
(dp1039
g4
I1
sg5
I01
sg6
g1037
sg7
S'TOrange'
p1040
sg9
(lp1041
sg11
I01
sg12
(lp1042
sbsS'TStringVariable'
p1043
(i__main__
ClassDefinition
p1044
(dp1045
g4
I1
sg5
I01
sg6
g1043
sg7
S'TVariable'
p1046
sg9
(lp1047
sg11
I00
sg12
(lp1048
g237
ag241
ag245
ag249
ag253
ag257
ag261
asbsS'TAssessIMQuality'
p1049
(i__main__
ClassDefinition
p1050
(dp1051
g4
I1
sg5
I01
sg6
g1049
sg7
S'TOrange'
p1052
sg9
(lp1053
sg11
I00
sg12
(lp1054
(S'TColumnAssessor'
p1055
S'columnAssessor'
p1056
g1056
S'column quality assessor'
p1057
I0
I0
I00
tp1058
asbsS'TGraphAsTree'
p1059
(i__main__
ClassDefinition
p1060
(dp1061
g4
I1
sg5
I01
sg6
g1059
sg7
S'TGraph'
p1062
sg9
(lp1063
sg11
I00
sg12
(lp1064
(S'int'
p1065
S'nVertices'
p1066
g1066
S'the number of vertices'
p1067
I01
I0
I01
tp1068
a(S'int'
p1069
S'nEdgeTypes'
p1070
g1070
S'the number of edge types'
p1071
I01
I0
I01
tp1072
a(S'bool'
p1073
S'directed'
p1074
g1074
S'directed'
p1075
I01
I0
I01
tp1076
asbsS'TTreeExampleSplitter_IgnoreUnknowns'
p1077
(i__main__
ClassDefinition
p1078
(dp1079
g4
I1
sg5
I01
sg6
g1077
sg7
S'TTreeExampleSplitter'
p1080
sg9
(lp1081
sg11
I00
sg12
(lp1082
sbsS'TProbabilityEstimator_FromDistribution'
p1083
(i__main__
ClassDefinition
p1084
(dp1085
g4
I1
sg5
I01
sg6
g1083
sg7
S'TProbabilityEstimator'
p1086
sg9
(lp1087
sg11
I00
sg12
(lp1088
(S'TDistribution'
p1089
S'probabilities'
p1090
g1090
S'probabilities'
p1091
I0
I0
I00
tp1092
a(S'bool'
p1093
S'supportsDiscrete'
p1094
g1094
S'can estimate probabilities of discrete attributes'
p1095
I01
I0
I01
tp1096
a(S'bool'
p1097
S'supportsContinuous'
p1098
g1098
S'can estimate probabilities of continuous attributes'
p1099
I01
I0
I01
tp1100
asbsS'TTreeDescender_UnknownMergeAsBranchSizes'
p1101
(i__main__
ClassDefinition
p1102
(dp1103
g4
I1
sg5
I01
sg6
g1101
sg7
S'TTreeDescender'
p1104
sg9
(lp1105
sg11
I0
sg12
(lp1106
sbsS'TExamplesDistance'
p1107
(i__main__
ClassDefinition
p1108
(dp1109
g4
I1
sg5
I01
sg6
g1107
sg7
S'TOrange'
p1110
sg9
(lp1111
sg11
I01
sg12
(lp1112
sbsS'TFileExampleGenerator'
p1113
(i__main__
ClassDefinition
p1114
(dp1115
g4
I1
sg5
I01
sg6
g1113
sg7
S'TExampleGenerator'
p1116
sg9
(lp1117
sg11
I01
sg12
(lp1118
g125
ag129
ag133
ag137
ag141
asbsS'TMeasureAttribute_gainRatio'
p1119
(i__main__
ClassDefinition
p1120
(dp1121
g4
I1
sg5
I01
sg6
g1119
sg7
S'TMeasureAttributeFromProbabilities'
p1122
sg9
(lp1123
sg11
I00
sg12
(lp1124
g551
ag555
ag559
ag563
ag567
ag571
asbsS'TLinRegClassifier'
p1125
(i__main__
ClassDefinition
p1126
(dp1127
g4
I1
sg5
I01
sg6
g1125
sg7
S'TClassifierFD'
p1128
sg9
(lp1129
sg11
I00
sg12
(lp1130
(S'TAttributedFloatList'
p1131
S'coefficients'
p1132
g1132
S'coefficients of regression plane'
p1133
I0
I0
I00
tp1134
a(S'TAttributedFloatList'
p1135
S'coefficients_se'
p1136
g1136
S'standard errors of coefficients'
p1137
I0
I0
I00
tp1138
a(S'float'
p1139
S'N'
p1140
g1140
S'number of examples'
p1141
I0
I0
I01
tp1142
a(S'float'
p1143
S'SStot'
p1144
g1144
S'total sum of squares'
p1145
I0
I0
I01
tp1146
a(S'float'
p1147
S'SSres'
p1148
g1148
S'residual sum of squares'
p1149
I0
I0
I01
tp1150
a(S'float'
p1151
S'SSreg'
p1152
g1152
S'sum of squares due to regression'
p1153
I0
I0
I01
tp1154
a(S'float'
p1155
S'MStot'
p1156
g1156
S'total mean squares'
p1157
I0
I0
I01
tp1158
a(S'float'
p1159
S'MSres'
p1160
g1160
S'residual mean square'
p1161
I0
I0
I01
tp1162
a(S'float'
p1163
S'MSreg'
p1164
g1164
S'mean square regression'
p1165
I0
I0
I01
tp1166
a(S'float'
p1167
S'F'
p1168
g1168
S'F statistics for the model'
p1169
I0
I0
I01
tp1170
a(S'float'
p1171
S'Fprob'
p1172
g1172
S'significance of the model (F)'
p1173
I0
I0
I01
tp1174
a(S'float'
p1175
S'R2'
p1176
g1176
S'determination'
p1177
I0
I0
I01
tp1178
a(S'float'
p1179
S'adjR2'
p1180
g1180
S'adjusted determination'
p1181
I0
I0
I01
tp1182
a(S'TImputer'
p1183
S'imputer'
p1184
g1184
S'if present, it imputes unknown values'
p1185
I0
I0
I00
tp1186
a(S'float'
p1187
S'threshold'
p1188
g1188
S'classification threshold (for discrete classes)'
p1189
I0
I0
I01
tp1190
ag920
ag83
ag87
asbsS'TContingencyClassAttr'
p1191
(i__main__
ClassDefinition
p1192
(dp1193
g4
I1
sg5
I01
sg6
g1191
sg7
S'TContingencyClass'
p1194
sg9
(lp1195
sg11
I00
sg12
(lp1196
(S'TVariable'
p1197
S'outerVariable'
p1198
g1198
S'outer attribute'
p1199
I0
I0
I00
tp1200
a(S'TVariable'
p1201
S'innerVariable'
p1202
(g1202
S'variable'
p1203
tp1204
S' inner attribute'
p1205
I0
I0
I00
tp1206
a(S'int'
p1207
S'varType'
p1208
g1208
S'outer attribute type'
p1209
I01
I0
I01
tp1210
a(S'TDistribution'
p1211
S'outerDistribution'
p1212
g1212
S'distribution of values of outer attributes'
p1213
I0
I0
I00
tp1214
a(S'TDistribution'
p1215
S'innerDistribution'
p1216
g1216
S'distribution of values of inner attributes'
p1217
I0
I0
I00
tp1218
asbsS'TMissValuesGenerator'
p1219
(i__main__
ClassDefinition
p1220
(dp1221
g4
I1
sg5
I01
sg6
g1219
sg7
S'TChangeExampleGenerator'
p1222
sg9
(lp1223
sg11
I00
sg12
(lp1224
(S'TIntFloatList'
p1225
S'replaceProbabilities'
p1226
g1226
S"probabilities for replacing attributes' values"
p1227
I0
I0
I00
tp1228
a(S'TRandomGenerator'
p1229
S'randomGenerator'
p1230
g1230
S'random generator'
p1231
I0
I0
I00
tp1232
ag137
ag141
asbsS'TLogRegClassifier'
p1233
(i__main__
ClassDefinition
p1234
(dp1235
g4
I1
sg5
I01
sg6
g1233
sg7
S'TClassifierFD'
p1236
sg9
(lp1237
sg11
I00
sg12
(lp1238
(S'TDomain'
p1239
S'continuizedDomain'
p1240
g1240
S'if absent, there is no continuous attributes in original domain'
p1241
I0
I0
I00
tp1242
a(S'TEFMDataDescription'
p1243
S'dataDescription'
p1244
g1244
S'Data needed for classification in presence of undefined values'
p1245
I0
I0
I00
tp1246
a(S'TAttributedFloatList'
p1247
S'beta'
p1248
g1248
S'estimated beta coefficients for logistic regression'
p1249
I0
I0
I00
tp1250
a(S'TAttributedFloatList'
p1251
S'beta_se'
p1252
g1252
S'estimated standard errors for beta coefficients'
p1253
I0
I0
I00
tp1254
a(S'TAttributedFloatList'
p1255
S'wald_Z'
p1256
g1256
S'Wald Z statstic for beta coefficients'
p1257
I0
I0
I00
tp1258
a(S'TAttributedFloatList'
p1259
S'P'
p1260
g1260
S'estimated significances for beta coefficients'
p1261
I0
I0
I00
tp1262
a(S'float'
p1263
S'likelihood'
p1264
g1264
S"Likelihood: The likelihood function is the function which specifies the probability of the sample observed on the basis of a known model, as a function of the model's parameters. "
p1265
I0
I0
I01
tp1266
a(S'int'
p1267
S'fit_status'
p1268
g1268
S"Tells how the model fitting ended - either regularly (LogRegFitter.OK), or it was interrupted due to one of beta coefficients escaping towards infinity (LogRegFitter.Infinity) or since the values didn't converge (LogRegFitter.Divergence)."
p1269
I0
I0
I01
tp1270
a(S'TImputer'
p1271
S'imputer'
p1272
g1272
S'if present, it imputes unknown values'
p1273
I0
I0
I00
tp1274
ag920
ag83
ag87
asbsS'TEquiDistDiscretization'
p1275
(i__main__
ClassDefinition
p1276
(dp1277
g4
I1
sg5
I01
sg6
g1275
sg7
S'TDiscretization'
p1278
sg9
(lp1279
sg11
I00
sg12
(lp1280
(S'int'
p1281
S'numberOfIntervals'
p1282
g1282
S'number of intervals'
p1283
I0
I0
I01
tp1284
asbsS'TPreprocessor_select'
p1285
(i__main__
ClassDefinition
p1286
(dp1287
g4
I1
sg5
I01
sg6
g1285
sg7
S'TPreprocessor'
p1288
sg9
(lp1289
sg11
I00
sg12
(lp1290
(S'TVarList'
p1291
S'attributes'
p1292
g1292
S'tells which attributes to select'
p1293
I0
I0
I00
tp1294
asbsS'TBasicAttrStat'
p1295
(i__main__
ClassDefinition
p1296
(dp1297
g4
I1
sg5
I01
sg6
g1295
sg7
S'TOrange'
p1298
sg9
(lp1299
sg11
I00
sg12
(lp1300
(S'float'
p1301
S'sum'
p1302
g1302
S'sum of values'
p1303
I01
I0
I01
tp1304
a(S'float'
p1305
S'sum2'
p1306
g1306
S'sum of squares of values'
p1307
I01
I0
I01
tp1308
a(S'float'
p1309
S'n'
p1310
g1310
S'number of examples for which the attribute is defined'
p1311
I01
I0
I01
tp1312
a(S'float'
p1313
S'min'
p1314
g1314
S'the lowest value of the attribute'
p1315
I0
I0
I01
tp1316
a(S'float'
p1317
S'max'
p1318
g1318
S'the highest value of the attribute'
p1319
I0
I0
I01
tp1320
a(S'float'
p1321
S'avg'
p1322
g1322
S'the average value of the attribute'
p1323
I0
I0
I01
tp1324
a(S'float'
p1325
S'dev'
p1326
g1326
S'the deviation of the value of the attribute'
p1327
I0
I0
I01
tp1328
a(S'TVariable'
p1329
S'variable'
p1330
g1330
S'the attribute to which the data applies'
p1331
I0
I0
I00
tp1332
a(S'bool'
p1333
S'holdRecomputation'
p1334
g1334
S'temporarily disables recomputation of avg and dev while adding values'
p1335
I0
I0
I01
tp1336
asbsS'TFilter_disjunction'
p1337
(i__main__
ClassDefinition
p1338
(dp1339
g4
I1
sg5
I01
sg6
g1337
sg7
S'TFilter'
p1340
sg9
(lp1341
sg11
I00
sg12
(lp1342
(S'TFilterList'
p1343
S'filters'
p1344
g1344
S'a list of filters;'
p1345
I0
I0
I00
tp1346
ag433
ag437
asbsS'TMeasureAttribute_gini'
p1347
(i__main__
ClassDefinition
p1348
(dp1349
g4
I1
sg5
I01
sg6
g1347
sg7
S'TMeasureAttributeFromProbabilities'
p1350
sg9
(lp1351
sg11
I00
sg12
(lp1352
g551
ag555
ag559
ag563
ag567
ag571
asbsS'TAttributedFloatList'
p1353
(i__main__
ClassDefinition
p1354
(dp1355
g4
I1
sg5
I01
sg6
g1353
sg7
S'TOrange'
p1356
sg9
(lp1357
sg11
I00
sg12
(lp1358
(S'TVarList'
p1359
S'attributes'
p1360
g1360
S'list of attributes (for indexing)'
p1361
I0
I0
I00
tp1362
asbsS'TIMByRowsByRelief'
p1363
(i__main__
ClassDefinition
p1364
(dp1365
g4
I1
sg5
I01
sg6
g1363
sg7
S'TIMByRowsConstructor'
p1366
sg9
(lp1367
sg11
I00
sg12
(lp1368
(S'float'
p1369
g814
g814
S'number of neighbours'
p1370
I0
I0
I01
tp1371
a(S'float'
p1372
g818
g818
S'number of reference examples'
p1373
I0
I0
I01
tp1374
a(S'float'
p1375
S'kFromColumns'
p1376
g1376
S'if positive, number of neighbours is #columns*kFromColumns'
p1377
I0
I0
I01
tp1378
a(S'bool'
p1379
S'ignoreSameExample'
p1380
g1380
S'does not put reference example into M'
p1381
I0
I0
I01
tp1382
a(S'bool'
p1383
S'convertToBinary'
p1384
g1384
S'convert to binary class (hit-miss)'
p1385
I0
I0
I01
tp1386
a(S'bool'
p1387
S'correctClassFirst'
p1388
g1388
S'puts the correct class proportion to the first place'
p1389
I0
I0
I01
tp1390
a(S'bool'
p1391
S'allExamples'
p1392
g1392
S'uses all examples for reference examples'
p1393
I0
I0
I01
tp1394
a(S'bool'
p1395
S'allSameNeighbours'
p1396
g1396
S'uses all the examples same to the reference as neighbours'
p1397
I0
I0
I01
tp1398
asbsS'TFindNearestConstructor'
p1399
(i__main__
ClassDefinition
p1400
(dp1401
g4
I1
sg5
I01
sg6
g1399
sg7
S'TOrange'
p1402
sg9
(lp1403
sg11
I01
sg12
(lp1404
(S'TExamplesDistanceConstructor'
p1405
S'distanceConstructor'
p1406
g1406
S'metrics'
p1407
I0
I0
I00
tp1408
a(S'bool'
p1409
S'includeSame'
p1410
g1410
S'tells whether to include examples that are same as the reference example'
p1411
I0
I0
I01
tp1412
asbsS'TRuleClassifier_firstRule'
p1413
(i__main__
ClassDefinition
p1414
(dp1415
g4
I1
sg5
I01
sg6
g1413
sg7
S'TRuleClassifier'
p1416
sg9
(lp1417
sg11
I00
sg12
(lp1418
(S'TDistribution'
p1419
S'prior'
p1420
g1420
S'prior distribution'
p1421
I0
I0
I00
tp1422
a(S'TRuleList'
p1423
S'rules'
p1424
g1424
S''
p1425
I0
I0
I00
tp1426
a(S'TExampleTable'
p1427
S'examples'
p1428
g1428
g1425
I0
I0
I00
tp1429
ag83
ag87
asbsS'TColumnAssessor'
p1430
(i__main__
ClassDefinition
p1431
(dp1432
g4
I1
sg5
I01
sg6
g1430
sg7
S'TOrange'
p1433
sg9
(lp1434
sg11
I01
sg12
(lp1435
sbsS'TComputeDomainContingency_Preprocessor'
p1436
(i__main__
ClassDefinition
p1437
(dp1438
g4
I1
sg5
I01
sg6
g1436
sg7
S'TComputeDomainContingency'
p1439
sg9
(lp1440
sg11
I00
sg12
(lp1441
(S'TPreprocessor'
p1442
S'preprocessor'
p1443
g1443
S'preprocesses the exmaples (see the manual for restrictions!)'
p1444
I0
I0
I00
tp1445
a(S'bool'
p1446
S'resultInOriginalDomain'
p1447
g1447
S'tells whether the resulting DomainContingency should consist of original attributes'
p1448
I0
I0
I01
tp1449
ag25
asbsS'TMeasureAttribute_MSE'
p1450
(i__main__
ClassDefinition
p1451
(dp1452
g4
I1
sg5
I01
sg6
g1450
sg7
S'TMeasureAttribute'
p1453
sg9
(lp1454
sg11
I00
sg12
(lp1455
(S'float'
p1456
g818
g818
S'm for m-estimate'
p1457
I0
I0
I01
tp1458
a(S'int'
p1459
S'unknownsTreatment'
p1460
g1460
S'treatment of unknown values'
p1461
I0
I0
I01
tp1462
ag563
ag567
ag571
asbsS'TIntervalDiscretizer'
p1463
(i__main__
ClassDefinition
p1464
(dp1465
g4
I1
sg5
I01
sg6
g1463
sg7
S'TDiscretizer'
p1466
sg9
(lp1467
sg11
I00
sg12
(lp1468
(S'TFloatList'
p1469
S'points'
p1470
g1470
S'cut-off points'
p1471
I0
I0
I00
tp1472
ag497
asbsS'TImputer_asValue'
p1473
(i__main__
ClassDefinition
p1474
(dp1475
g4
I1
sg5
I01
sg6
g1473
sg7
S'TImputer'
p1476
sg9
(lp1477
sg11
I00
sg12
(lp1478
(S'TDomain'
p1479
S'domain'
p1480
g1480
S'domain to which the values are converted'
p1481
I0
I0
I00
tp1482
a(S'TExample'
p1483
S'defaults'
p1484
g1484
S'values to impute instead of missing ones - for continuous attributes only!'
p1485
I0
I0
I00
tp1486
asbsS'TDomainContinuizer'
p1487
(i__main__
ClassDefinition
p1488
(dp1489
g4
I1
sg5
I01
sg6
g1487
sg7
S'TOrange'
p1490
sg9
(lp1491
sg11
I00
sg12
(lp1492
(S'bool'
p1493
S'zeroBased'
p1494
g1494
S'if true (default) it gives values 0.0 and 1.0; else -1.0 and 1.0, 0.0 for undefined'
p1495
I0
I0
I01
tp1496
a(S'int'
p1497
S'continuousTreatment'
p1498
g1498
S'0-leave as they are, 1-divide by span, 1-normalize'
p1499
I0
I0
I01
tp1500
a(S'int'
p1501
S'multinomialTreatment'
p1502
g1502
S'0-lowest value, 1-most frequent (or baseValue), 2-n binary, 3-ignore, 4-error, 5-convert as ordinal, 6-ordinal,normalized'
p1503
I0
I0
I01
tp1504
a(S'int'
p1505
S'classTreatment'
p1506
g1506
S'3-leave as is unless target is given, 4-error if not continuous nor binary nor target given, 5-convert as ordinal (unless target given)'
p1507
I0
I0
I01
tp1508
asbsS'TNormalizeContinuous'
p1509
(i__main__
ClassDefinition
p1510
(dp1511
g4
I1
sg5
I01
sg6
g1509
sg7
S'TTransformValue'
p1512
sg9
(lp1513
sg11
I00
sg12
(lp1514
(S'float'
p1515
S'average'
p1516
g1516
S'the average value'
p1517
I0
I0
I01
tp1518
a(S'float'
p1519
S'span'
p1520
g1520
S'the value span'
p1521
I0
I0
I01
tp1522
ag497
asbsS'TPNN'
p1523
(i__main__
ClassDefinition
p1524
(dp1525
g4
I1
sg5
I01
sg6
g1523
sg7
S'TClassifierFD'
p1526
sg9
(lp1527
sg11
I00
sg12
(lp1528
(S'int'
p1529
S'dimensions'
p1530
g1530
S'the number of dimensions'
p1531
I01
I0
I01
tp1532
a(S'TFloatList'
p1533
S'offsets'
p1534
g1534
S'offsets to subtract from the attribute values'
p1535
I0
I0
I00
tp1536
a(S'TFloatList'
p1537
S'normalizers'
p1538
g1538
S'number to divide the values by'
p1539
I0
I0
I00
tp1540
a(S'TFloatList'
p1541
S'averages'
p1542
g1542
S'numbers to use instead of the missing'
p1543
I0
I0
I00
tp1544
a(S'bool'
p1545
S'normalizeExamples'
p1546
g1546
S'if true, attribute values are divided to sum up to 1'
p1547
I0
I0
I01
tp1548
a(S'int'
p1549
S'nExamples'
p1550
g1550
S'the number of examples'
p1551
I01
I0
I01
tp1552
a(S'int'
p1553
S'law'
p1554
g1554
S'law'
p1555
I0
I0
I01
tp1556
ag920
ag83
ag87
asbsS'TBiModalDiscretizer'
p1557
(i__main__
ClassDefinition
p1558
(dp1559
g4
I1
sg5
I01
sg6
g1557
sg7
S'TDiscretizer'
p1560
sg9
(lp1561
sg11
I00
sg12
(lp1562
(S'float'
p1563
S'low'
p1564
g1564
S'low threshold'
p1565
I0
I0
I01
tp1566
a(S'float'
p1567
S'high'
p1568
g1568
S'high threshold'
p1569
I0
I0
I01
tp1570
ag497
asbsS'TExamplesDistanceConstructor_Euclidean'
p1571
(i__main__
ClassDefinition
p1572
(dp1573
g4
I1
sg5
I01
sg6
g1571
sg7
S'TExamplesDistanceConstructor_Normalized'
p1574
sg9
(lp1575
sg11
I00
sg12
(lp1576
(S'bool'
p1577
S'normalize'
p1578
g1578
S'tells whether to normalize distances between attributes'
p1579
I0
I0
I01
tp1580
a(S'bool'
p1581
S'ignoreUnknowns'
p1582
g1582
S'if true (default: false) unknown values are ignored in computation'
p1583
I0
I0
I01
tp1584
a(S'bool'
p1585
S'ignoreClass'
p1586
g1586
S'if true (default), class value is ignored when computing distances'
p1587
I0
I0
I01
tp1588
asbsS'TContingencyAttrAttr'
p1589
(i__main__
ClassDefinition
p1590
(dp1591
g4
I1
sg5
I01
sg6
g1589
sg7
S'TContingency'
p1592
sg9
(lp1593
sg11
I00
sg12
(lp1594
g1200
ag1206
ag1210
ag1214
ag1218
asbsS'TRuleBeamRefiner_Selector'
p1595
(i__main__
ClassDefinition
p1596
(dp1597
g4
I1
sg5
I01
sg6
g1595
sg7
S'TRuleBeamRefiner'
p1598
sg9
(lp1599
sg11
I00
sg12
(lp1600
(S'TDiscretization'
p1601
S'discretization'
p1602
g1602
S'discretization for continuous attributes'
p1603
I0
I0
I00
tp1604
asbsS'TProbabilityEstimatorConstructor_Laplace'
p1605
(i__main__
ClassDefinition
p1606
(dp1607
g4
I1
sg5
I01
sg6
g1605
sg7
S'TProbabilityEstimatorConstructor'
p1608
sg9
(lp1609
sg11
I00
sg12
(lp1610
(S'float'
p1611
S'l'
p1612
g1612
S'number of examples added to each class (default: 1)'
p1613
I0
I0
I01
tp1614
a(S'bool'
p1615
S'renormalize'
p1616
g1616
S'computes the estimate on the original (not the normalized) distribution'
p1617
I0
I0
I01
tp1618
asbsS'TClassifierForLinearWeight'
p1619
(i__main__
ClassDefinition
p1620
(dp1621
g4
I1
sg5
I01
sg6
g1619
sg7
S'TClassifier'
p1622
sg9
(lp1623
sg11
I00
sg12
(lp1624
(S'int'
p1625
S'whichID'
p1626
g1626
S'Id of meta variable for time'
p1627
I0
I0
I01
tp1628
a(S'TVariable'
p1629
S'outcomeVar'
p1630
g1630
S'outcome variable'
p1631
I0
I0
I00
tp1632
a(S'int'
p1633
S'failIndex'
p1634
g1634
S"index of 'fail' value"
p1635
I0
I0
I01
tp1636
a(S'float'
p1637
S'maxTime'
p1638
g1638
S'maximal time'
p1639
I0
I0
I01
tp1640
ag83
ag87
asbsS'TExamplesDistance_Relief'
p1641
(i__main__
ClassDefinition
p1642
(dp1643
g4
I1
sg5
I01
sg6
g1641
sg7
S'TExamplesDistance'
p1644
sg9
(lp1645
sg11
I00
sg12
(lp1646
(S'TDomainDistributions'
p1647
S'distributions'
p1648
g1648
S"distributions of attributes' values"
p1649
I0
I0
I00
tp1650
a(S'TAttributedFloatList'
p1651
S'averages'
p1652
g1652
S'average values of attributes'
p1653
I0
I0
I00
tp1654
a(S'TAttributedFloatList'
p1655
S'normalizations'
p1656
g1656
S"ranges of attributes' values"
p1657
I0
I0
I00
tp1658
a(S'TAttributedFloatList'
p1659
S'bothSpecial'
p1660
g1660
S'distance if both values of both attributes are undefined'
p1661
I0
I0
I00
tp1662
asbsS'TExamplesDistance_Manhattan'
p1663
(i__main__
ClassDefinition
p1664
(dp1665
g4
I1
sg5
I01
sg6
g1663
sg7
S'TExamplesDistance_Normalized'
p1666
sg9
(lp1667
sg11
I00
sg12
(lp1668
g327
ag331
ag335
ag339
ag343
ag347
ag351
asbsS'TExamplesDistanceConstructor_Manhattan'
p1669
(i__main__
ClassDefinition
p1670
(dp1671
g4
I1
sg5
I01
sg6
g1669
sg7
S'TExamplesDistanceConstructor_Normalized'
p1672
sg9
(lp1673
sg11
I00
sg12
(lp1674
g1580
ag1584
ag1588
asbsS'TTreeDescender'
p1675
(i__main__
ClassDefinition
p1676
(dp1677
g4
I1
sg5
I01
sg6
g1675
sg7
S'TOrange'
p1678
sg9
(lp1679
sg11
I01
sg12
(lp1680
sbsS'TColumnAssessor_Measure'
p1681
(i__main__
ClassDefinition
p1682
(dp1683
g4
I1
sg5
I01
sg6
g1681
sg7
S'TColumnAssessor'
p1684
sg9
(lp1685
sg11
I00
sg12
(lp1686
(S'TMeasureAttribute'
p1687
S'measure'
p1688
g1688
S'attribute quality measure'
p1689
I0
I0
I00
tp1690
asbsS'TIMBlurer'
p1691
(i__main__
ClassDefinition
p1692
(dp1693
g4
I1
sg5
I01
sg6
g1691
sg7
S'TIMByRowsPreprocessor'
p1694
sg9
(lp1695
sg11
I00
sg12
(lp1696
(S'float'
p1697
S'weight'
p1698
g1698
S'weight of neighbours'
p1699
I0
I0
I01
tp1700
a(S'float'
p1701
S'origWeight'
p1702
g1702
S'weight of original row'
p1703
I0
I0
I01
tp1704
a(S'TFloatList'
p1705
S'attrWeights'
p1706
g1706
S'weights by individual (different) attributes'
p1707
I0
I0
I00
tp1708
a(S'bool'
p1709
S'adjustOrigWeight'
p1710
g1710
S'uses 1-weight(s) for weight of original row'
p1711
I0
I0
I01
tp1712
a(S'bool'
p1713
S'onlyEmpty'
p1714
g1714
S'blurs only empty cells'
p1715
I0
I0
I01
tp1716
asbsS'TStopIMClusteringByAssessor_noBigChange'
p1717
(i__main__
ClassDefinition
p1718
(dp1719
g4
I1
sg5
I01
sg6
g1717
sg7
S'TStopIMClusteringByAssessor'
p1720
sg9
(lp1721
sg11
I00
sg12
(lp1722
sbsS'TDiscretizedDomain'
p1723
(i__main__
ClassDefinition
p1724
(dp1725
g4
I1
sg5
I01
sg6
g1723
sg7
S'TDomain'
p1726
sg9
(lp1727
sg11
I00
sg12
(lp1728
(S'TDiscretization'
p1729
S'defaultDiscretization'
p1730
g1730
S'default discretization'
p1731
I0
I0
I00
tp1732
a(S'int'
p1733
S'defaultInt'
p1734
g1734
S'default number of intervals'
p1735
I0
I0
I01
tp1736
a(S'int'
p1737
S'weight'
p1738
g1738
S'id of attribute with weight'
p1739
I0
I0
I01
tp1740
a(S'TVariable'
p1741
S'classVar'
p1742
g1742
S'class variable'
p1743
I01
I0
I00
tp1744
a(S'TVarList'
p1745
S'attributes'
p1746
g1746
S'list of attributes, excluding the class'
p1747
I01
I0
I00
tp1748
a(S'TVarList'
p1749
S'variables'
p1750
g1750
S'list of attributes, including the class at the end of the list'
p1751
I01
I0
I00
tp1752
a(S'int'
p1753
S'version'
p1754
g1754
S"unique version identifier; it's changed each time a domain is changed"
p1755
I01
I0
I01
tp1756
asbsS'TC45Learner'
p1757
(i__main__
ClassDefinition
p1758
(dp1759
g4
I1
sg5
I01
sg6
g1757
sg7
S'TLearner'
p1760
sg9
(lp1761
sg11
I00
sg12
(lp1762
(S'bool'
p1763
S'gainRatio'
p1764
(g1764
S'g'
p1765
tp1766
S' use gain ratio (instead of information gain)'
p1767
I0
I0
I01
tp1768
a(S'bool'
p1769
S'subset'
p1770
(g1770
S's'
p1771
tp1772
S' use subsetting'
p1773
I0
I0
I01
tp1774
a(S'bool'
p1775
S'batch'
p1776
(g1776
S'b'
p1777
tp1778
S' batch'
p1779
I0
I0
I01
tp1780
a(S'bool'
p1781
S'probThresh'
p1782
(g1782
S'p'
p1783
tp1784
S' probability threshold'
p1785
I0
I0
I01
tp1786
a(S'int'
p1787
S'minObjs'
p1788
(g1788
g818
tp1789
S' minimal number of objects (examples) in leaves'
p1790
I0
I0
I01
tp1791
a(S'int'
p1792
S'window'
p1793
(g1793
S'w'
p1794
tp1795
S' window'
p1796
I0
I0
I01
tp1797
a(S'int'
p1798
S'increment'
p1799
(g1799
S'i'
p1800
tp1801
S' increment'
p1802
I0
I0
I01
tp1803
a(S'float'
p1804
S'cf'
p1805
(g1805
S'c'
p1806
tp1807
S' cf'
p1808
I0
I0
I01
tp1809
a(S'int'
p1810
S'trials'
p1811
(g1811
S't'
p1812
tp1813
S' trials'
p1814
I0
I0
I01
tp1815
a(S'bool'
p1816
S'prune'
p1817
g1817
S'return pruned tree'
p1818
I0
I0
I01
tp1819
a(S'bool'
p1820
S'convertToOrange'
p1821
g1821
S'return TreeClassifier instead of C45TreeClassifier'
p1822
I0
I0
I01
tp1823
a(S'bool'
p1824
S'storeExamples'
p1825
g1825
S'stores examples when (if) converting to TreeClassifier'
p1826
I0
I0
I01
tp1827
a(S'bool'
p1828
S'storeContingencies'
p1829
g1829
S'stores contingencies when (if) converting to TreeClassifier'
p1830
I0
I0
I01
tp1831
ag97
asbsS'TAttributedBoolList'
p1832
(i__main__
ClassDefinition
p1833
(dp1834
g4
I1
sg5
I01
sg6
g1832
sg7
g1356
sg9
(lp1835
sg11
I00
sg12
(lp1836
(S'TVarList'
p1837
S'attributes'
p1838
g1838
S'list of attributes (for indexing)'
p1839
I0
I0
I00
tp1840
asbsS'TRuleStoppingCriteria'
p1841
(i__main__
ClassDefinition
p1842
(dp1843
g4
I1
sg5
I01
sg6
g1841
sg7
S'TOrange'
p1844
sg9
(lp1845
sg11
I01
sg12
(lp1846
sbsS'TPreprocessor_dropMissingClasses'
p1847
(i__main__
ClassDefinition
p1848
(dp1849
g4
I1
sg5
I01
sg6
g1847
sg7
S'TPreprocessor'
p1850
sg9
(lp1851
sg11
I00
sg12
(lp1852
sbsS'TkNNClassifier'
p1853
(i__main__
ClassDefinition
p1854
(dp1855
g4
I1
sg5
I01
sg6
g1853
sg7
S'TClassifierFD'
p1856
sg9
(lp1857
sg11
I00
sg12
(lp1858
(S'TFindNearest'
p1859
S'findNearest'
p1860
g1860
g1425
I0
I0
I00
tp1861
a(S'float'
p1862
g814
g814
S'number of neighbours'
p1863
I0
I0
I01
tp1864
a(S'bool'
p1865
S'rankWeight'
p1866
g1866
S'enable weighting by ranks'
p1867
I0
I0
I01
tp1868
a(S'int'
p1869
S'weightID'
p1870
g1870
S'id of meta-attribute with weight'
p1871
I0
I0
I01
tp1872
ag920
ag83
ag87
asbsS'TMeasureAttribute_info'
p1873
(i__main__
ClassDefinition
p1874
(dp1875
g4
I1
sg5
I01
sg6
g1873
sg7
S'TMeasureAttributeFromProbabilities'
p1876
sg9
(lp1877
sg11
I00
sg12
(lp1878
g551
ag555
ag559
ag563
ag567
ag571
asbsS'TRuleBeamCandidateSelector_TakeAll'
p1879
(i__main__
ClassDefinition
p1880
(dp1881
g4
I1
sg5
I01
sg6
g1879
sg7
S'TRuleBeamCandidateSelector'
p1882
sg9
(lp1883
sg11
I00
sg12
(lp1884
sbsS'TExamplesDistanceConstructor_Relief'
p1885
(i__main__
ClassDefinition
p1886
(dp1887
g4
I1
sg5
I01
sg6
g1885
sg7
S'TExamplesDistanceConstructor'
p1888
sg9
(lp1889
sg11
I00
sg12
(lp1890
g1588
asbsS'TOrange'
p1891
(i__main__
ClassDefinition
p1892
(dp1893
g4
I1
sg5
I01
sg6
g1891
sg7
Nsg9
(lp1894
sg11
I00
sg12
(lp1895
sbsS'TRuleValidator'
p1896
(i__main__
ClassDefinition
p1897
(dp1898
g4
I1
sg5
I01
sg6
g1896
sg7
S'TOrange'
p1899
sg9
(lp1900
sg11
I01
sg12
(lp1901
sbsS'TColorIG'
p1902
(i__main__
ClassDefinition
p1903
(dp1904
g4
I1
sg5
I01
sg6
g1902
sg7
S'TOrange'
p1905
sg9
(lp1906
sg11
I01
sg12
(lp1907
sbsS'TRuleValidator_Python'
p1908
(i__main__
ClassDefinition
p1909
(dp1910
g4
I1
sg5
I01
sg6
g1908
sg7
S'TRuleValidator'
p1911
sg9
(lp1912
sg11
I00
sg12
(lp1913
sbsS'TIMByRowsBySorting'
p1914
(i__main__
ClassDefinition
p1915
(dp1916
g4
I1
sg5
I01
sg6
g1914
sg7
S'TIMByRowsConstructor'
p1917
sg9
(lp1918
sg11
I00
sg12
(lp1919
sbsS'TAssociationLearner'
p1920
(i__main__
ClassDefinition
p1921
(dp1922
g4
I1
sg5
I01
sg6
g1920
sg7
S'TLearner'
p1923
sg9
(lp1924
sg11
I00
sg12
(lp1925
(S'float'
p1926
S'confidence'
p1927
g1927
S'required confidence'
p1928
I0
I0
I01
tp1929
a(S'float'
p1930
S'support'
p1931
g1931
S'required support'
p1932
I0
I0
I01
tp1933
a(S'int'
p1934
S'voteWeight'
p1935
g1935
S'vote weight (s=support, c=confidence, p=product)'
p1936
I0
I0
I01
tp1937
a(S'int'
p1938
S'maxItemSets'
p1939
g1939
S'maximal number of itemsets (increase if you want)'
p1940
I0
I0
I01
tp1941
ag97
asbsS'TRuleBeamInitializer_Python'
p1942
(i__main__
ClassDefinition
p1943
(dp1944
g4
I1
sg5
I01
sg6
g1942
sg7
S'TRuleBeamInitializer'
p1945
sg9
(lp1946
sg11
I00
sg12
(lp1947
sbsS'TDistributionAssessor'
p1948
(i__main__
ClassDefinition
p1949
(dp1950
g4
I1
sg5
I01
sg6
g1948
sg7
S'TOrange'
p1951
sg9
(lp1952
sg11
I01
sg12
(lp1953
sbsS'TRuleCovererAndRemover_Python'
p1954
(i__main__
ClassDefinition
p1955
(dp1956
g4
I1
sg5
I01
sg6
g1954
sg7
S'TRuleCovererAndRemover'
p1957
sg9
(lp1958
sg11
I00
sg12
(lp1959
sbsS'TMeasureAttribute_gainRatioA'
p1960
(i__main__
ClassDefinition
p1961
(dp1962
g4
I1
sg5
I01
sg6
g1960
sg7
S'TMeasureAttribute_gainRatio'
p1963
sg9
(lp1964
sg11
I00
sg12
(lp1965
g551
ag555
ag559
ag563
ag567
ag571
asbsS'TConditionalProbabilityEstimatorConstructor_ByRows'
p1966
(i__main__
ClassDefinition
p1967
(dp1968
g4
I1
sg5
I01
sg6
g1966
sg7
S'TConditionalProbabilityEstimatorConstructor'
p1969
sg9
(lp1970
sg11
I00
sg12
(lp1971
(S'TProbabilityEstimatorConstructor'
p1972
S'estimatorConstructor'
p1973
g1973
S'ProbabilityEstimator to be used '
p1974
I0
I0
I00
tp1975
asbsS'TCartesianClassifier'
p1976
(i__main__
ClassDefinition
p1977
(dp1978
g4
I1
sg5
I01
sg6
g1976
sg7
S'TClassifierFD'
p1979
sg9
(lp1980
sg11
I00
sg12
(lp1981
g920
ag83
ag87
asbsS'TTreeSplitConstructor'
p1982
(i__main__
ClassDefinition
p1983
(dp1984
g4
I1
sg5
I01
sg6
g1982
sg7
S'TOrange'
p1985
sg9
(lp1986
sg11
I01
sg12
(lp1987
g902
asbsS'TTreeDescender_UnknownToBranch'
p1988
(i__main__
ClassDefinition
p1989
(dp1990
g4
I1
sg5
I01
sg6
g1988
sg7
g1104
sg9
(lp1991
sg11
I0
sg12
(lp1992
sbsS'TSubsetsGenerator_constSize'
p1993
(i__main__
ClassDefinition
p1994
(dp1995
g4
I1
sg5
I01
sg6
g1993
sg7
S'TSubsetsGenerator'
p1996
sg9
(lp1997
sg11
I00
sg12
(lp1998
(S'int'
p1999
S'B'
p2000
g2000
S'subset size'
p2001
I0
I0
I01
tp2002
ag183
asbsS'TColorIG_MCF'
p2003
(i__main__
ClassDefinition
p2004
(dp2005
g4
I1
sg5
I01
sg6
g2003
sg7
S'TColorIG'
p2006
sg9
(lp2007
sg11
I00
sg12
(lp2008
sbsS'TTreeSplitConstructor_Attribute'
p2009
(i__main__
ClassDefinition
p2010
(dp2011
g4
I1
sg5
I01
sg6
g2009
sg7
S'TTreeSplitConstructor_Measure'
p2012
sg9
(lp2013
sg11
I00
sg12
(lp2014
g894
ag898
ag902
asbsS'TRemoveRedundantByInduction'
p2015
(i__main__
ClassDefinition
p2016
(dp2017
g4
I1
sg5
I01
sg6
g2015
sg7
S'TRemoveRedundant'
p2018
sg9
(lp2019
sg11
I00
sg12
(lp2020
(S'TFeatureInducer'
p2021
S'featureReducer'
p2022
g2022
S'feature construction algorithm'
p2023
I0
I0
I00
tp2024
a(S'TMeasureAttribute'
p2025
S'measure'
p2026
g2026
S'measure for initial ordering of attributes'
p2027
I0
I0
I00
tp2028
a(S'TDiscretization'
p2029
S'discretization'
p2030
g2030
S'discretization method'
p2031
I0
I0
I00
tp2032
ag940
asbsS'TFilter_conjunction'
p2033
(i__main__
ClassDefinition
p2034
(dp2035
g4
I1
sg5
I01
sg6
g2033
sg7
S'TFilter'
p2036
sg9
(lp2037
sg11
I00
sg12
(lp2038
(S'TFilterList'
p2039
S'filters'
p2040
g2040
S'a list of filters;'
p2041
I0
I0
I00
tp2042
ag433
ag437
asbsS'TExampleForMissing'
p2043
(i__main__
ClassDefinition
p2044
(dp2045
g4
I1
sg5
I01
sg6
g2043
sg7
S'TExample'
p2046
sg9
(lp2047
sg11
I00
sg12
(lp2048
(S'TEFMDataDescription'
p2049
S'dataDescription'
p2050
g2050
S'data description'
p2051
I0
I0
I00
tp2052
a(S'TDomain'
p2053
S'domain'
p2054
g2054
S"Example's domain"
p2055
I01
I0
I00
tp2056
asbsS'TRuleBeamFilter'
p2057
(i__main__
ClassDefinition
p2058
(dp2059
g4
I1
sg5
I01
sg6
g2057
sg7
S'TOrange'
p2060
sg9
(lp2061
sg11
I01
sg12
(lp2062
sbsS'TBayesClassifier'
p2063
(i__main__
ClassDefinition
p2064
(dp2065
g4
I1
sg5
I01
sg6
g2063
sg7
S'TClassifierFD'
p2066
sg9
(lp2067
sg11
I00
sg12
(lp2068
(S'TDistribution'
p2069
S'distribution'
p2070
g2070
S'class distributions (P(C))'
p2071
I0
I0
I00
tp2072
a(S'TDomainContingency'
p2073
S'conditionalDistributions'
p2074
g2074
S'conditional distributions, P(C|A)'
p2075
I0
I0
I00
tp2076
a(S'TProbabilityEstimator'
p2077
S'estimator'
p2078
g2078
S'a probability estimator for P(C)'
p2079
I0
I0
I00
tp2080
a(S'TConditionalProbabilityEstimatorList'
p2081
S'conditionalEstimators'
p2082
g2082
S'a probability estimator for P(C|A)'
p2083
I0
I0
I00
tp2084
a(S'bool'
p2085
S'normalizePredictions'
p2086
g2086
S'if true, classifier will normalize predictions'
p2087
I0
I0
I01
tp2088
a(S'float'
p2089
S'threshold'
p2090
g2090
S'threshold probability for class 1 (for binary classes only)'
p2091
I0
I0
I01
tp2092
ag920
ag83
ag87
asbsS'TGraph'
p2093
(i__main__
ClassDefinition
p2094
(dp2095
g4
I1
sg5
I01
sg6
g2093
sg7
S'TOrange'
p2096
sg9
(lp2097
sg11
I01
sg12
(lp2098
g1068
ag1072
ag1076
asbsS'TPreprocessor_addClassWeight'
p2099
(i__main__
ClassDefinition
p2100
(dp2101
g4
I1
sg5
I01
sg6
g2099
sg7
S'TPreprocessor'
p2102
sg9
(lp2103
sg11
I00
sg12
(lp2104
(S'TFloatList'
p2105
S'classWeights'
p2106
g2106
S'weights of examples of particular classes'
p2107
I0
I0
I00
tp2108
a(S'bool'
p2109
S'equalize'
p2110
g2110
S'reweight examples to equalize class proportions'
p2111
I0
I0
I01
tp2112
a(S'TRandomGenerator'
p2113
S'randomGenerator'
p2114
g2114
S'random number generator'
p2115
I0
I0
I00
tp2116
asbsS'TStopIMClusteringByAssessor'
p2117
(i__main__
ClassDefinition
p2118
(dp2119
g4
I1
sg5
I01
sg6
g2117
sg7
S'TOrange'
p2120
sg9
(lp2121
sg11
I01
sg12
(lp2122
sbsS'TValueFilter_continuous'
p2123
(i__main__
ClassDefinition
p2124
(dp2125
g4
I1
sg5
I01
sg6
g2123
sg7
S'TValueFilter'
p2126
sg9
(lp2127
sg11
I00
sg12
(lp2128
(S'float'
p2129
S'min'
p2130
(g2130
S'ref'
p2131
tp2132
S' reference value (lower bound for interval operators)'
p2133
I0
I0
I01
tp2134
a(S'float'
p2135
S'max'
p2136
g2136
S'upper bound for interval operators'
p2137
I0
I0
I01
tp2138
a(S'bool'
p2139
S'outside'
p2140
g2140
S'obsolete: if true, the filter accepts the values outside the interval, not inside'
p2141
I0
I0
I01
tp2142
a(S'int'
p2143
S'oper'
p2144
g2144
S'operator'
p2145
I0
I0
I01
tp2146
ag686
ag690
asbsS'TAssociationRule'
p2147
(i__main__
ClassDefinition
p2148
(dp2149
g4
I1
sg5
I01
sg6
g2147
sg7
S'TOrange'
p2150
sg9
(lp2151
sg11
I00
sg12
(lp2152
(S'TExample'
p2153
S'left'
p2154
g2154
S'left side of the rule'
p2155
I0
I0
I00
tp2156
a(S'TExample'
p2157
S'right'
p2158
g2158
S'right side of the rule'
p2159
I0
I0
I00
tp2160
a(S'float'
p2161
S'support'
p2162
g2162
S'support for the rule'
p2163
I0
I0
I01
tp2164
a(S'float'
p2165
S'confidence'
p2166
g2166
S'confidence of the rule'
p2167
I0
I0
I01
tp2168
a(S'float'
p2169
S'coverage'
p2170
g2170
S"rule's coverage"
p2171
I0
I0
I01
tp2172
a(S'float'
p2173
S'strength'
p2174
g2174
S"rule's strength"
p2175
I0
I0
I01
tp2176
a(S'float'
p2177
S'lift'
p2178
g2178
S"rule's lift"
p2179
I0
I0
I01
tp2180
a(S'float'
p2181
S'leverage'
p2182
g2182
S"rule's leverage"
p2183
I0
I0
I01
tp2184
a(S'float'
p2185
S'nAppliesLeft'
p2186
g2186
S"number of examples covered by the rule's left side "
p2187
I0
I0
I01
tp2188
a(S'float'
p2189
S'nAppliesRight'
p2190
g2190
S"number of examples covered by the rule's right side "
p2191
I0
I0
I01
tp2192
a(S'float'
p2193
S'nAppliesBoth'
p2194
g2194
S'number of examples covered by the rule'
p2195
I0
I0
I01
tp2196
a(S'float'
p2197
S'nExamples'
p2198
g2198
S'number of learning examples'
p2199
I0
I0
I01
tp2200
a(S'int'
p2201
S'nLeft'
p2202
g2202
S"number of items on the rule's left side"
p2203
I0
I0
I01
tp2204
a(S'int'
p2205
S'nRight'
p2206
g2206
S"number of items on the rule's right side"
p2207
I0
I0
I01
tp2208
asbsS'TValueFilter'
p2209
(i__main__
ClassDefinition
p2210
(dp2211
g4
I1
sg5
I01
sg6
g2209
sg7
S'TOrange'
p2212
sg9
(lp2213
sg11
I01
sg12
(lp2214
g686
ag690
asbsS'TClustersFromDistributions'
p2215
(i__main__
ClassDefinition
p2216
(dp2217
g4
I1
sg5
I01
sg6
g2215
sg7
S'TOrange'
p2218
sg9
(lp2219
sg11
I01
sg12
(lp2220
sbsS'TVariable'
p2221
(i__main__
ClassDefinition
p2222
(dp2223
g4
I1
sg5
I01
sg6
g2221
sg7
S'TOrange'
p2224
sg9
(lp2225
sg11
I01
sg12
(lp2226
g237
ag241
ag245
ag249
ag253
ag257
ag261
asbsS'TNoiseValuesGenerator'
p2227
(i__main__
ClassDefinition
p2228
(dp2229
g4
I1
sg5
I01
sg6
g2227
sg7
S'TChangeExampleGenerator'
p2230
sg9
(lp2231
sg11
I00
sg12
(lp2232
(S'TIntFloatList'
p2233
S'replaceProbabilities'
p2234
g2234
S"probabilities for replacing attributes' values"
p2235
I0
I0
I00
tp2236
a(S'TRandomGenerator'
p2237
S'randomGenerator'
p2238
g2238
S'random generator'
p2239
I0
I0
I00
tp2240
ag137
ag141
asbsS'TFilter_sameValue'
p2241
(i__main__
ClassDefinition
p2242
(dp2243
g4
I1
sg5
I01
sg6
g2241
sg7
S'TFilter'
p2244
sg9
(lp2245
sg11
I00
sg12
(lp2246
(S'int'
p2247
S'position'
p2248
g2248
S'position of the observed attribute'
p2249
I0
I0
I01
tp2250
a(S'TValue'
p2251
S'value'
p2252
g2252
S'value that the selected examples should have'
p2253
I0
I0
I01
tp2254
ag433
ag437
asbsS'TEquiNDiscretization'
p2255
(i__main__
ClassDefinition
p2256
(dp2257
g4
I1
sg5
I01
sg6
g2255
sg7
S'TDiscretization'
p2258
sg9
(lp2259
sg11
I00
sg12
(lp2260
(S'int'
p2261
S'numberOfIntervals'
p2262
g2262
S'number of intervals'
p2263
I0
I0
I01
tp2264
a(S'bool'
p2265
S'recursiveDivision'
p2266
g2266
S'find cut-off points by recursive division (default = true)'
p2267
I0
I0
I01
tp2268
asbsS'TImputerConstructor_average'
p2269
(i__main__
ClassDefinition
p2270
(dp2271
g4
I1
sg5
I01
sg6
g2269
sg7
S'TImputerConstructor'
p2272
sg9
(lp2273
sg11
I00
sg12
(lp2274
g151
asbsS'TDomainBasicAttrStat'
p2275
(i__main__
ClassDefinition
p2276
(dp2277
g4
I1
sg5
I01
sg6
g2275
sg7
g1356
sg9
(lp2278
sg11
I00
sg12
(lp2279
sbsS'TStopDistributionClustering'
p2280
(i__main__
ClassDefinition
p2281
(dp2282
g4
I1
sg5
I01
sg6
g2280
sg7
S'TOrange'
p2283
sg9
(lp2284
sg11
I01
sg12
(lp2285
sbsS'TImputerConstructor_random'
p2286
(i__main__
ClassDefinition
p2287
(dp2288
g4
I1
sg5
I01
sg6
g2286
sg7
S'TImputerConstructor'
p2289
sg9
(lp2290
sg11
I00
sg12
(lp2291
(S'bool'
p2292
S'deterministic'
p2293
g2293
S"tells whether to initialize random by example's CRC (default: false)"
p2294
I0
I0
I01
tp2295
ag151
asbsS'TCostWrapperClassifier'
p2296
(i__main__
ClassDefinition
p2297
(dp2298
g4
I1
sg5
I01
sg6
g2296
sg7
S'TClassifier'
p2299
sg9
(lp2300
sg11
I00
sg12
(lp2301
(S'TClassifier'
p2302
S'classifier'
p2303
g2303
S'basic classifier'
p2304
I0
I0
I00
tp2305
a(S'TCostMatrix'
p2306
S'costMatrix'
p2307
g2307
S'cost matrix'
p2308
I0
I0
I00
tp2309
ag83
ag87
asbsS'TPreprocessor_ignore'
p2310
(i__main__
ClassDefinition
p2311
(dp2312
g4
I1
sg5
I01
sg6
g2310
sg7
S'TPreprocessor'
p2313
sg9
(lp2314
sg11
I00
sg12
(lp2315
(S'TVarList'
p2316
S'attributes'
p2317
g2317
S'tells which attributes to remove'
p2318
I0
I0
I00
tp2319
asbsS'TC45TreeNode'
p2320
(i__main__
ClassDefinition
p2321
(dp2322
g4
I1
sg5
I01
sg6
g2320
sg7
S'TOrange'
p2323
sg9
(lp2324
sg11
I00
sg12
(lp2325
(S'int'
p2326
S'nodeType'
p2327
g2327
S'0 = leaf,  1 = branch,  2 = cut,  3 = subset'
p2328
I0
I0
I01
tp2329
a(S'TValue'
p2330
S'leaf'
p2331
g2331
S'most frequent class at this node'
p2332
I0
I0
I01
tp2333
a(S'float'
p2334
S'items'
p2335
g2335
S'no of items at this node'
p2336
I0
I0
I01
tp2337
a(S'TDiscDistribution'
p2338
S'classDist'
p2339
g2339
S'class distribution of items'
p2340
I0
I0
I00
tp2341
a(S'TVariable'
p2342
S'tested'
p2343
g2343
S'attribute referenced in test'
p2344
I0
I0
I00
tp2345
a(S'float'
p2346
S'cut'
p2347
g2347
S'threshold for continuous attribute'
p2348
I0
I0
I01
tp2349
a(S'float'
p2350
S'lower'
p2351
g2351
S'lower limit of soft threshold'
p2352
I0
I0
I01
tp2353
a(S'float'
p2354
S'upper'
p2355
g2355
S'upper limit of soft threshold'
p2356
I0
I0
I01
tp2357
a(S'TIntList'
p2358
S'mapping'
p2359
g2359
S'mapping for discrete value'
p2360
I0
I0
I00
tp2361
a(S'TC45TreeNodeList'
p2362
S'branch'
p2363
g2363
S'branch[x] = (sub)tree for outcome x */'
p2364
I0
I0
I00
tp2365
asbsS'TMeasureAttribute_Python'
p2366
(i__main__
ClassDefinition
p2367
(dp2368
g4
I1
sg5
I01
sg6
g2366
sg7
S'TMeasureAttribute'
p2369
sg9
(lp2370
sg11
I00
sg12
(lp2371
g563
ag567
ag571
asbsS'TDistributionAssessor_Measure'
p2372
(i__main__
ClassDefinition
p2373
(dp2374
g4
I1
sg5
I01
sg6
g2372
sg7
S'TDistributionAssessor'
p2375
sg9
(lp2376
sg11
I00
sg12
(lp2377
(S'TMeasureAttribute'
p2378
S'measure'
p2379
g2379
S'attribute quality measure'
p2380
I0
I0
I00
tp2381
asbsS'TDistributionAssessor_m'
p2382
(i__main__
ClassDefinition
p2383
(dp2384
g4
I1
sg5
I01
sg6
g2382
sg7
S'TDistributionAssessor'
p2385
sg9
(lp2386
sg11
I00
sg12
(lp2387
(S'float'
p2388
g818
g818
S'm for m-estimate'
p2389
I0
I0
I01
tp2390
asbsS'TClassifierRandomGenerator'
p2391
(i__main__
ClassDefinition
p2392
(dp2393
g4
I1
sg5
I01
sg6
g2391
sg7
S'TExampleGenerator'
p2394
sg9
(lp2395
sg11
I00
sg12
(lp2396
(S'TClassifier'
p2397
S'classify'
p2398
g2398
S'classifier'
p2399
I0
I0
I00
tp2400
a(S'int'
p2401
S'noOfEx'
p2402
g2402
S'number of examples'
p2403
I0
I0
I01
tp2404
ag137
ag141
asbsS'TExamplesDistance_Hamiltonian'
p2405
(i__main__
ClassDefinition
p2406
(dp2407
g4
I1
sg5
I01
sg6
g2405
sg7
S'TExamplesDistance'
p2408
sg9
(lp2409
sg11
I00
sg12
(lp2410
(S'bool'
p2411
S'ignoreClass'
p2412
g2412
S'if true (default), class value is ignored when computing distances'
p2413
I0
I0
I01
tp2414
a(S'bool'
p2415
S'ignoreUnknowns'
p2416
g2416
S'if true (default: false) unknown values are ignored in computation'
p2417
I0
I0
I01
tp2418
asbsS'TThresholdDiscretizer'
p2419
(i__main__
ClassDefinition
p2420
(dp2421
g4
I1
sg5
I01
sg6
g2419
sg7
S'TDiscretizer'
p2422
sg9
(lp2423
sg11
I00
sg12
(lp2424
(S'float'
p2425
S'threshold'
p2426
g2426
S'threshold'
p2427
I0
I0
I01
tp2428
ag497
asbsS'TExampleTable'
p2429
(i__main__
ClassDefinition
p2430
(dp2431
g4
I1
sg5
I01
sg6
g2429
sg7
S'TExampleGenerator'
p2432
sg9
(lp2433
sg11
I00
sg12
(lp2434
(S'TRandomGenerator'
p2435
S'randomGenerator'
p2436
g2436
S'random generator used by randomExample'
p2437
I0
I0
I00
tp2438
a(S'TExampleGenerator'
p2439
S'lock'
p2440
g2440
S'the real owner of examples'
p2441
I01
I0
I00
tp2442
a(S'bool'
p2443
S'ownsExamples'
p2444
g2444
S'if false, examples in this table are references to examples in another table'
p2445
I01
I0
I01
tp2446
ag137
ag141
asbsS'TTreeSplitConstructor_Threshold'
p2447
(i__main__
ClassDefinition
p2448
(dp2449
g4
I1
sg5
I01
sg6
g2447
sg7
S'TTreeSplitConstructor_Measure'
p2450
sg9
(lp2451
sg11
I00
sg12
(lp2452
g894
ag898
ag902
asbsS'TStopDistributionClustering_n'
p2453
(i__main__
ClassDefinition
p2454
(dp2455
g4
I1
sg5
I01
sg6
g2453
sg7
S'TStopDistributionClustering'
p2456
sg9
(lp2457
sg11
I00
sg12
(lp2458
(S'int'
p2459
g1310
g1310
S'number of clusters'
p2460
I0
I0
I01
tp2461
asbsS'TLWRLearner'
p2462
(i__main__
ClassDefinition
p2463
(dp2464
g4
I1
sg5
I01
sg6
g2462
sg7
S'TLearner'
p2465
sg9
(lp2466
sg11
I00
sg12
(lp2467
(S'TExamplesDistanceConstructor'
p2468
S'distanceConstructor'
p2469
g2469
S'constructor for object that will find the nearest neighbours'
p2470
I0
I0
I00
tp2471
a(S'TLinRegLearner'
p2472
S'linRegLearner'
p2473
g2473
S'learner that performs local linear regression'
p2474
I0
I0
I00
tp2475
a(S'float'
p2476
g814
g814
S'number of neighbours'
p2477
I0
I0
I01
tp2478
a(S'bool'
p2479
S'rankWeight'
p2480
g2480
S'use ranks instead of distances'
p2481
I0
I0
I01
tp2482
ag97
asbsS'TTreeExampleSplitter_UnknownsAsSelector'
p2483
(i__main__
ClassDefinition
p2484
(dp2485
g4
I1
sg5
I01
sg6
g2483
sg7
S'TTreeExampleSplitter'
p2486
sg9
(lp2487
sg11
I00
sg12
(lp2488
sbsS'TClassifier_Python'
p2489
(i__main__
ClassDefinition
p2490
(dp2491
g4
I1
sg5
I01
sg6
g2489
sg7
S'TClassifier'
p2492
sg9
(lp2493
sg11
I00
sg12
(lp2494
g83
ag87
asbsS'TFilter_isDefined'
p2495
(i__main__
ClassDefinition
p2496
(dp2497
g4
I1
sg5
I01
sg6
g2495
sg7
S'TFilter'
p2498
sg9
(lp2499
sg11
I00
sg12
(lp2500
(S'TAttributedBoolList'
p2501
S'check'
p2502
g2502
S'tells which attributes to check; checks all if the list is empty'
p2503
I01
I0
I00
tp2504
ag433
ag437
asbsS'TRemoveRedundantByQuality'
p2505
(i__main__
ClassDefinition
p2506
(dp2507
g4
I1
sg5
I01
sg6
g2505
sg7
S'TRemoveRedundant'
p2508
sg9
(lp2509
sg11
I00
sg12
(lp2510
(S'bool'
p2511
S'remeasure'
p2512
g2512
S'reapply the measure after removal'
p2513
I0
I0
I01
tp2514
a(S'float'
p2515
S'minQuality'
p2516
g2516
S'minimal acceptable quality'
p2517
I0
I0
I01
tp2518
a(S'int'
p2519
S'removeBut'
p2520
g2520
S'the desired number of attributes'
p2521
I0
I0
I01
tp2522
a(S'TMeasureAttribute'
p2523
S'measure'
p2524
g2524
S'attribute quality measure'
p2525
I0
I0
I00
tp2526
ag940
asbsS'TGraphAsList'
p2527
(i__main__
ClassDefinition
p2528
(dp2529
g4
I1
sg5
I01
sg6
g2527
sg7
S'TGraph'
p2530
sg9
(lp2531
sg11
I00
sg12
(lp2532
g1068
ag1072
ag1076
asbsS'TProbabilityEstimatorConstructor_m'
p2533
(i__main__
ClassDefinition
p2534
(dp2535
g4
I1
sg5
I01
sg6
g2533
sg7
S'TProbabilityEstimatorConstructor'
p2536
sg9
(lp2537
sg11
I00
sg12
(lp2538
(S'float'
p2539
g818
g818
S'parameter m for m-estimation'
p2540
I0
I0
I01
tp2541
a(S'bool'
p2542
S'renormalize'
p2543
g2543
S'computes the estimate on the original (not the normalized) distribution'
p2544
I0
I0
I01
tp2545
asbsS'TDistanceMap'
p2546
(i__main__
ClassDefinition
p2547
(dp2548
g4
I1
sg5
I01
sg6
g2546
sg7
S'TOrange'
p2549
sg9
(lp2550
sg11
I00
sg12
(lp2551
(S'int'
p2552
S'dim'
p2553
g2553
S'bitmap dimension (in cells)'
p2554
I01
I0
I01
tp2555
a(S'int'
p2556
S'matrixType'
p2557
g2557
S'0 lower, 1 upper, 2 symmetric'
p2558
I0
I0
I01
tp2559
a(S'TIntList'
p2560
S'elementIndices'
p2561
g2561
S'indices to elements (one for row + one at the end)'
p2562
I01
I0
I00
tp2563
asbsS'TDistanceMapConstructor'
p2564
(i__main__
ClassDefinition
p2565
(dp2566
g4
I1
sg5
I01
sg6
g2564
sg7
S'TOrange'
p2567
sg9
(lp2568
sg11
I00
sg12
(lp2569
(S'TSymMatrix'
p2570
S'distanceMatrix'
p2571
g2571
S'distance matrix'
p2572
I0
I0
I00
tp2573
a(S'TIntList'
p2574
S'order'
p2575
g2575
S'order of elements'
p2576
I0
I0
I00
tp2577
asbsS'TTransformValue'
p2578
(i__main__
ClassDefinition
p2579
(dp2580
g4
I1
sg5
I01
sg6
g2578
sg7
S'TOrange'
p2581
sg9
(lp2582
sg11
I01
sg12
(lp2583
g497
asbsS'TComputeDomainContingency_DomainTransformation'
p2584
(i__main__
ClassDefinition
p2585
(dp2586
g4
I1
sg5
I01
sg6
g2584
sg7
S'TComputeDomainContingency'
p2587
sg9
(lp2588
sg11
I00
sg12
(lp2589
(S'TDomainTransformerConstructor'
p2590
S'domainTransformerConstructor'
p2591
g2591
S'constructs a domain in which each attribute corresponds one of originals'
p2592
I0
I0
I00
tp2593
a(S'bool'
p2594
S'resultInOriginalDomain'
p2595
g2595
S'tells whether the resulting DomainContingency should consist of original attributes'
p2596
I0
I0
I01
tp2597
ag25
asbsS'TStopDistributionClustering_noBigChange'
p2598
(i__main__
ClassDefinition
p2599
(dp2600
g4
I1
sg5
I01
sg6
g2598
sg7
S'TStopDistributionClustering'
p2601
sg9
(lp2602
sg11
I00
sg12
(lp2603
sbsS'TTreePruner'
p2604
(i__main__
ClassDefinition
p2605
(dp2606
g4
I1
sg5
I01
sg6
g2604
sg7
S'TOrange'
p2607
sg9
(lp2608
sg11
I01
sg12
(lp2609
sbsS'TImputer_Python'
p2610
(i__main__
ClassDefinition
p2611
(dp2612
g4
I1
sg5
I01
sg6
g2610
sg7
S'TImputer'
p2613
sg9
(lp2614
sg11
I00
sg12
(lp2615
sbsS'TRuleLearner'
p2616
(i__main__
ClassDefinition
p2617
(dp2618
g4
I1
sg5
I01
sg6
g2616
sg7
S'TLearner'
p2619
sg9
(lp2620
sg11
I00
sg12
(lp2621
(S'TRuleDataStoppingCriteria'
p2622
S'dataStopping'
p2623
g2623
g1425
I0
I0
I00
tp2624
a(S'TRuleStoppingCriteria'
p2625
S'ruleStopping'
p2626
g2626
g1425
I0
I0
I00
tp2627
a(S'TRuleCovererAndRemover'
p2628
S'coverAndRemove'
p2629
g2629
g1425
I0
I0
I00
tp2630
a(S'TRuleFinder'
p2631
S'ruleFinder'
p2632
g2632
g1425
I0
I0
I00
tp2633
a(S'TRuleClassifierConstructor'
p2634
S'classifierConstructor'
p2635
g2635
S'classifier'
p2636
I0
I0
I00
tp2637
a(S'TProgressCallback'
p2638
S'progressCallback'
p2639
g2639
S'progress callback function'
p2640
I0
I0
I00
tp2641
a(S'bool'
p2642
S'storeExamples'
p2643
g2643
g1425
I0
I0
I01
tp2644
a(S'int'
p2645
S'targetClass'
p2646
g2646
g1425
I0
I0
I01
tp2647
a(S'TRuleList'
p2648
S'baseRules'
p2649
g2649
g1425
I0
I0
I00
tp2650
ag97
asbsS'TOrdinal2Continuous'
p2651
(i__main__
ClassDefinition
p2652
(dp2653
g4
I1
sg5
I01
sg6
g2651
sg7
S'TTransformValue'
p2654
sg9
(lp2655
sg11
I00
sg12
(lp2656
(S'float'
p2657
S'factor'
p2658
g2658
S'number of values'
p2659
I0
I0
I01
tp2660
ag497
asbsS'TTreeSplitConstructor_Combined'
p2661
(i__main__
ClassDefinition
p2662
(dp2663
g4
I1
sg5
I01
sg6
g2661
sg7
S'TTreeSplitConstructor'
p2664
sg9
(lp2665
sg11
I00
sg12
(lp2666
(S'TTreeSplitConstructor'
p2667
S'discreteSplitConstructor'
p2668
g2668
S'split constructor for discrete attributes'
p2669
I0
I0
I00
tp2670
a(S'TTreeSplitConstructor'
p2671
S'continuousSplitConstructor'
p2672
g2672
S'split constructor for continuous attributes'
p2673
I0
I0
I00
tp2674
ag902
asbsS'TTransformValue_Python'
p2675
(i__main__
ClassDefinition
p2676
(dp2677
g4
I1
sg5
I01
sg6
g2675
sg7
S'TTransformValue'
p2678
sg9
(lp2679
sg11
I00
sg12
(lp2680
g497
asbsS'TRuleStoppingCriteria_Python'
p2681
(i__main__
ClassDefinition
p2682
(dp2683
g4
I1
sg5
I01
sg6
g2681
sg7
S'TRuleStoppingCriteria'
p2684
sg9
(lp2685
sg11
I00
sg12
(lp2686
sbsS'TRuleEvaluator_Python'
p2687
(i__main__
ClassDefinition
p2688
(dp2689
g4
I1
sg5
I01
sg6
g2687
sg7
S'TRuleEvaluator'
p2690
sg9
(lp2691
sg11
I00
sg12
(lp2692
sbsS'TIGBySorting'
p2693
(i__main__
ClassDefinition
p2694
(dp2695
g4
I1
sg5
I01
sg6
g2693
sg7
S'TIGConstructor'
p2696
sg9
(lp2697
sg11
I00
sg12
(lp2698
sbsS'TConditionalProbabilityEstimator_ByRows'
p2699
(i__main__
ClassDefinition
p2700
(dp2701
g4
I1
sg5
I01
sg6
g2699
sg7
S'TConditionalProbabilityEstimator'
p2702
sg9
(lp2703
sg11
I00
sg12
(lp2704
(S'TProbabilityEstimatorList'
p2705
S'estimatorList'
p2706
g2706
S'A list of probability estimators'
p2707
I0
I0
I00
tp2708
ag111
ag115
asbsS'TMyFilter'
p2709
(i__main__
ClassDefinition
p2710
(dp2711
g645
I1
sg646
I0
sg647
g2709
sg648
S'TFilter'
p2712
sg650
I00
sg651
(lp2713
sg653
(lp2714
g433
ag437
asbsS'TProgressCallback'
p2715
(i__main__
ClassDefinition
p2716
(dp2717
g4
I1
sg5
I01
sg6
g2715
sg7
S'TOrange'
p2718
sg9
(lp2719
sg11
I01
sg12
(lp2720
sbsS'THierarchicalClustering'
p2721
(i__main__
ClassDefinition
p2722
(dp2723
g4
I1
sg5
I01
sg6
g2721
sg7
S'TOrange'
p2724
sg9
(lp2725
sg11
I00
sg12
(lp2726
(S'int'
p2727
S'linkage'
p2728
g2728
S'linkage'
p2729
I0
I0
I01
tp2730
a(S'bool'
p2731
S'overwriteMatrix'
p2732
g2732
S'if true (default is false) it will use (and destroy) the distance matrix given as argument'
p2733
I0
I0
I01
tp2734
a(S'TProgressCallback'
p2735
S'progressCallback'
p2736
g2736
S'progress callback function'
p2737
I0
I0
I00
tp2738
asbsS'TRuleBeamInitializer_Default'
p2739
(i__main__
ClassDefinition
p2740
(dp2741
g4
I1
sg5
I01
sg6
g2739
sg7
S'TRuleBeamInitializer'
p2742
sg9
(lp2743
sg11
I00
sg12
(lp2744
sbsS'TClassifierFromVar'
p2745
(i__main__
ClassDefinition
p2746
(dp2747
g4
I1
sg5
I01
sg6
g2745
sg7
S'TClassifier'
p2748
sg9
(lp2749
sg11
I00
sg12
(lp2750
(S'TVariable'
p2751
S'whichVar'
p2752
(g2752
S'variable'
p2753
tp2754
S' variable'
p2755
I0
I0
I00
tp2756
a(S'TTransformValue'
p2757
S'transformer'
p2758
g2758
S'transformer'
p2759
I0
I0
I00
tp2760
a(S'TDistribution'
p2761
S'distributionForUnknown'
p2762
g2762
S'distribution for unknown value'
p2763
I0
I0
I00
tp2764
a(S'bool'
p2765
S'transformUnknowns'
p2766
g2766
S'if false (default), unknowns stay unknown or are changed into distribution if given'
p2767
I0
I0
I01
tp2768
ag83
ag87
asbsS'TIM'
p2769
(i__main__
ClassDefinition
p2770
(dp2771
g4
I1
sg5
I01
sg6
g2769
sg7
S'TOrange'
p2772
sg9
(lp2773
sg11
I00
sg12
(lp2774
(S'int'
p2775
S'varType'
p2776
g2776
S'class variable type'
p2777
I0
I0
I01
tp2778
a(S'TExampleTable'
p2779
S'rowExamples'
p2780
g2780
S'examples with free attributes for each row'
p2781
I0
I0
I00
tp2782
asbsS'TClassifier'
p2783
(i__main__
ClassDefinition
p2784
(dp2785
g4
I1
sg5
I01
sg6
g2783
sg7
S'TOrange'
p2786
sg9
(lp2787
sg11
I00
sg12
(lp2788
g83
ag87
asbsS'TTreeSplitConstructor_Python'
p2789
(i__main__
ClassDefinition
p2790
(dp2791
g4
I1
sg5
I01
sg6
g2789
sg7
S'TTreeSplitConstructor'
p2792
sg9
(lp2793
sg11
I00
sg12
(lp2794
g902
asbsS'TIG'
p2795
(i__main__
ClassDefinition
p2796
(dp2797
g4
I1
sg5
I01
sg6
g2795
sg7
S'TOrange'
p2798
sg9
(lp2799
sg11
I00
sg12
(lp2800
sbsS'TMeasureAttribute_relief'
p2801
(i__main__
ClassDefinition
p2802
(dp2803
g4
I1
sg5
I01
sg6
g2801
sg7
S'TMeasureAttribute'
p2804
sg9
(lp2805
S'prevGenerator'
p2806
aS'prevDomain'
p2807
asg11
I00
sg12
(lp2808
(S'float'
p2809
g814
g814
S'number of neighbours'
p2810
I0
I0
I01
tp2811
a(S'float'
p2812
g818
g818
S'number of reference examples'
p2813
I0
I0
I01
tp2814
ag563
ag567
ag571
asbsS'TTreeExampleSplitter_Python'
p2815
(i__main__
ClassDefinition
p2816
(dp2817
g4
I1
sg5
I01
sg6
g2815
sg7
S'TTreeExampleSplitter'
p2818
sg9
(lp2819
sg11
I00
sg12
(lp2820
sbsS'TExampleGenerator'
p2821
(i__main__
ClassDefinition
p2822
(dp2823
g4
I1
sg5
I01
sg6
g2821
sg7
S'TOrange'
p2824
sg9
(lp2825
sg11
I01
sg12
(lp2826
g137
ag141
asbsS'TAdapterGenerator'
p2827
(i__main__
ClassDefinition
p2828
(dp2829
g4
I1
sg5
I01
sg6
g2827
sg7
S'TExampleGenerator'
p2830
sg9
(lp2831
sg11
I00
sg12
(lp2832
g137
ag141
asbsS'TIMFromExamples'
p2833
(i__main__
ClassDefinition
p2834
(dp2835
g4
I1
sg5
I01
sg6
g2833
sg7
S'TOrange'
p2836
sg9
(lp2837
sg11
I01
sg12
(lp2838
sbsS'TFilter_random'
p2839
(i__main__
ClassDefinition
p2840
(dp2841
g4
I1
sg5
I01
sg6
g2839
sg7
S'TFilter'
p2842
sg9
(lp2843
sg11
I00
sg12
(lp2844
(S'float'
p2845
S'prob'
p2846
g2846
S'probability of selecting an example'
p2847
I0
I0
I01
tp2848
a(S'TRandomGenerator'
p2849
S'randomGenerator'
p2850
g2850
S'random generator'
p2851
I0
I0
I00
tp2852
ag433
ag437
asbsS'TC45ExampleGenerator'
p2853
(i__main__
ClassDefinition
p2854
(dp2855
g4
I1
sg5
I01
sg6
g2853
sg7
S'TFileExampleGenerator'
p2856
sg9
(lp2857
sg11
I00
sg12
(lp2858
(S'TBoolList'
p2859
S'skip'
p2860
g2860
S'a boolean list, one element per attribute, denoting which attributes to skip'
p2861
I0
I0
I00
tp2862
ag125
ag129
ag133
ag137
ag141
asbsS'TExamplesDistanceConstructor_Hamiltonian'
p2863
(i__main__
ClassDefinition
p2864
(dp2865
g4
I1
sg5
I01
sg6
g2863
sg7
S'TExamplesDistanceConstructor'
p2866
sg9
(lp2867
sg11
I00
sg12
(lp2868
(S'bool'
p2869
S'ignoreClass'
p2870
g2870
S'if true (default), class value is ignored when computing distances'
p2871
I0
I0
I01
tp2872
a(S'bool'
p2873
S'ignoreUnknowns'
p2874
g2874
S'if true (default: false) unknown values are ignored in computation'
p2875
I0
I0
I01
tp2876
ag1588
asbsS'TProbabilityEstimatorConstructor_loess'
p2877
(i__main__
ClassDefinition
p2878
(dp2879
g4
I1
sg5
I01
sg6
g2877
sg7
S'TProbabilityEstimatorConstructor'
p2880
sg9
(lp2881
sg11
I00
sg12
(lp2882
(S'float'
p2883
S'windowProportion'
p2884
g2884
S'The proportion of points in a window for LR'
p2885
I0
I0
I01
tp2886
a(S'int'
p2887
S'nPoints'
p2888
g2888
S'The number of points on curve (negative means the given number of points is inserted in each interval)'
p2889
I0
I0
I01
tp2890
a(S'int'
p2891
S'distributionMethod'
p2892
g2892
S"Meaning of the 'nPoints'"
p2893
I0
I0
I01
tp2894
asbsS'TLogRegFitter'
p2895
(i__main__
ClassDefinition
p2896
(dp2897
g4
I1
sg5
I01
sg6
g2895
sg7
S'TOrange'
p2898
sg9
(lp2899
sg11
I01
sg12
(lp2900
sbsS'TMakeRandomIndicesCV'
p2901
(i__main__
ClassDefinition
p2902
(dp2903
g4
I1
sg5
I01
sg6
g2901
sg7
S'TMakeRandomIndices'
p2904
sg9
(lp2905
sg11
I00
sg12
(lp2906
(S'int'
p2907
S'folds'
p2908
g2908
S'number of folds'
p2909
I0
I0
I01
tp2910
ag459
ag463
ag467
asbsS'TPreprocessor_removeDuplicates'
p2911
(i__main__
ClassDefinition
p2912
(dp2913
g4
I1
sg5
I01
sg6
g2911
sg7
S'TPreprocessor'
p2914
sg9
(lp2915
sg11
I00
sg12
(lp2916
sbsS'TTreeExampleSplitter_UnknownsAsBranchSizes'
p2917
(i__main__
ClassDefinition
p2918
(dp2919
g4
I1
sg5
I01
sg6
g2917
sg7
S'TTreeExampleSplitter'
p2920
sg9
(lp2921
sg11
I00
sg12
(lp2922
sbsS'TExamplesDistanceConstructor_Normalized'
p2923
(i__main__
ClassDefinition
p2924
(dp2925
g4
I1
sg5
I01
sg6
g2923
sg7
S'TExamplesDistanceConstructor'
p2926
sg9
(lp2927
sg11
I01
sg12
(lp2928
g1580
ag1584
ag1588
asbsS'TCostWrapperLearner'
p2929
(i__main__
ClassDefinition
p2930
(dp2931
g4
I1
sg5
I01
sg6
g2929
sg7
S'TLearner'
p2932
sg9
(lp2933
sg11
I00
sg12
(lp2934
(S'TLearner'
p2935
S'basicLearner'
p2936
g2936
S'basic learner'
p2937
I0
I0
I00
tp2938
a(S'TCostMatrix'
p2939
S'costMatrix'
p2940
g2940
S'cost matrix'
p2941
I0
I0
I00
tp2942
ag97
asbsS'TFindNearest'
p2943
(i__main__
ClassDefinition
p2944
(dp2945
g4
I1
sg5
I01
sg6
g2943
sg7
S'TOrange'
p2946
sg9
(lp2947
sg11
I01
sg12
(lp2948
g712
ag716
asbsS'TLogRegFitter_Cholesky'
p2949
(i__main__
ClassDefinition
p2950
(dp2951
g4
I1
sg5
I01
sg6
g2949
sg7
S'TLogRegFitter'
p2952
sg9
(lp2953
sg11
I00
sg12
(lp2954
sbsS'TDistributionAssessor_Laplace'
p2955
(i__main__
ClassDefinition
p2956
(dp2957
g4
I1
sg5
I01
sg6
g2955
sg7
S'TDistributionAssessor'
p2958
sg9
(lp2959
sg11
I00
sg12
(lp2960
sbsS'TColumnAssessor_Relief'
p2961
(i__main__
ClassDefinition
p2962
(dp2963
g4
I1
sg5
I01
sg6
g2961
sg7
S'TColumnAssessor'
p2964
sg9
(lp2965
sg11
I00
sg12
(lp2966
sbsS'TClassifierByLookupTable'
p2967
(i__main__
ClassDefinition
p2968
(dp2969
g4
I1
sg5
I01
sg6
g2967
sg7
S'TClassifier'
p2970
sg9
(lp2971
sg11
I01
sg12
(lp2972
g75
ag79
ag83
ag87
asbsS'TRuleBeamFinder'
p2973
(i__main__
ClassDefinition
p2974
(dp2975
g4
I1
sg5
I01
sg6
g2973
sg7
S'TRuleFinder'
p2976
sg9
(lp2977
sg11
I00
sg12
(lp2978
(S'TRuleBeamInitializer'
p2979
S'initializer'
p2980
g2980
g1425
I0
I0
I00
tp2981
a(S'TRuleBeamRefiner'
p2982
S'refiner'
p2983
g2983
g1425
I0
I0
I00
tp2984
a(S'TRuleBeamCandidateSelector'
p2985
S'candidateSelector'
p2986
g2986
g1425
I0
I0
I00
tp2987
a(S'TRuleBeamFilter'
p2988
S'ruleFilter'
p2989
g2989
g1425
I0
I0
I00
tp2990
a(S'TRuleValidator'
p2991
S'ruleStoppingValidator'
p2992
g2992
g1425
I0
I0
I00
tp2993
a(S'TRuleValidator'
p2994
S'validator'
p2995
g2995
g1425
I0
I0
I00
tp2996
a(S'TRuleEvaluator'
p2997
S'evaluator'
p2998
g2998
g1425
I0
I0
I00
tp2999
asbsS'TFilter'
p3000
(i__main__
ClassDefinition
p3001
(dp3002
g4
I1
sg5
I01
sg6
g3000
sg7
S'TOrange'
p3003
sg9
(lp3004
sg11
I01
sg12
(lp3005
g433
ag437
asbsS'TC45Classifier'
p3006
(i__main__
ClassDefinition
p3007
(dp3008
g4
I1
sg5
I01
sg6
g3006
sg7
S'TClassifierFD'
p3009
sg9
(lp3010
sg11
I00
sg12
(lp3011
(S'TC45TreeNode'
p3012
S'tree'
p3013
g3013
S'tree'
p3014
I0
I0
I00
tp3015
ag920
ag83
ag87
asbsS'TMeasureAttribute_cost'
p3016
(i__main__
ClassDefinition
p3017
(dp3018
g4
I1
sg5
I01
sg6
g3016
sg7
S'TMeasureAttributeFromProbabilities'
p3019
sg9
(lp3020
sg11
I00
sg12
(lp3021
(S'TCostMatrix'
p3022
S'cost'
p3023
g3023
S'cost matrix'
p3024
I0
I0
I00
tp3025
ag551
ag555
ag559
ag563
ag567
ag571
asbsS'TImputerConstructor_minimal'
p3026
(i__main__
ClassDefinition
p3027
(dp3028
g4
I1
sg5
I01
sg6
g3026
sg7
S'TImputerConstructor'
p3029
sg9
(lp3030
sg11
I00
sg12
(lp3031
g151
asbsS'TClustersFromIM'
p3032
(i__main__
ClassDefinition
p3033
(dp3034
g4
I1
sg5
I01
sg6
g3032
sg7
S'TOrange'
p3035
sg9
(lp3036
sg11
I01
sg12
(lp3037
sbsS'TFilter_values'
p3038
(i__main__
ClassDefinition
p3039
(dp3040
g4
I1
sg5
I01
sg6
g3038
sg7
S'TFilter'
p3041
sg9
(lp3042
sg11
I00
sg12
(lp3043
(S'TValueFilterList'
p3044
S'conditions'
p3045
g3045
S'a list of filters'
p3046
I0
I0
I00
tp3047
a(S'bool'
p3048
S'conjunction'
p3049
g3049
S'if true, filter computes conjunction, otherwise disjunction'
p3050
I0
I0
I01
tp3051
ag433
ag437
asbsS'TClassifierForKMWeight'
p3052
(i__main__
ClassDefinition
p3053
(dp3054
g4
I1
sg5
I01
sg6
g3052
sg7
S'TClassifier'
p3055
sg9
(lp3056
sg11
I00
sg12
(lp3057
(S'int'
p3058
S'whichID'
p3059
g3059
S'Id of meta variable for time'
p3060
I0
I0
I01
tp3061
a(S'TVariable'
p3062
S'outcomeVar'
p3063
g3063
S'outcome variable'
p3064
I0
I0
I00
tp3065
a(S'int'
p3066
S'failIndex'
p3067
g3067
S"index of 'fail' value"
p3068
I0
I0
I01
tp3069
a(S'TKaplanMeier'
p3070
S'kaplanMeier'
p3071
g3071
S'Kaplan-Meier curve'
p3072
I0
I0
I00
tp3073
ag83
ag87
asbsS'TSymMatrix'
p3074
(i__main__
ClassDefinition
p3075
(dp3076
g4
I1
sg5
I01
sg6
g3074
sg7
S'TOrange'
p3077
sg9
(lp3078
sg11
I00
sg12
(lp3079
(S'int'
p3080
S'dim'
p3081
g3081
S'matrix dimension'
p3082
I01
I0
I01
tp3083
a(S'int'
p3084
S'matrixType'
p3085
g3085
S'0 lower, 1 upper, 2 symmetric, 3 lower_filled, 4 upper_filled'
p3086
I0
I0
I01
tp3087
asbsS'TSVMLearner'
p3088
(i__main__
ClassDefinition
p3089
(dp3090
g4
I1
sg5
I01
sg6
g3088
sg7
S'TLearner'
p3091
sg9
(lp3092
sg11
I00
sg12
(lp3093
(S'int'
p3094
S'svm_type'
p3095
g3095
S'SVM type (C_SVC=0, NU_SVC, ONE_CLASS, EPSILON_SVR=3, NU_SVR=4)'
p3096
I0
I0
I01
tp3097
a(S'int'
p3098
S'kernel_type'
p3099
g3099
S'kernel type (LINEAR=0, POLY, RBF, SIGMOID=3)'
p3100
I0
I0
I01
tp3101
a(S'float'
p3102
S'degree'
p3103
g3103
S'polynomial kernel degree'
p3104
I0
I0
I01
tp3105
a(S'float'
p3106
S'gamma'
p3107
g3107
S'poly/rbf/sigm parameter'
p3108
I0
I0
I01
tp3109
a(S'float'
p3110
S'coef0'
p3111
g3111
S'poly/sigm parameter'
p3112
I0
I0
I01
tp3113
a(S'float'
p3114
S'cache_size'
p3115
g3115
S'cache size in MB'
p3116
I0
I0
I01
tp3117
a(S'float'
p3118
S'eps'
p3119
g3119
S'stopping criteria'
p3120
I0
I0
I01
tp3121
a(S'float'
p3122
S'C'
p3123
g3123
S'for C_SVC and EPSILON_SVR'
p3124
I0
I0
I01
tp3125
a(S'float'
p3126
S'nu'
p3127
g3127
S'for NU_SVC and ONE_CLASS'
p3128
I0
I0
I01
tp3129
a(S'float'
p3130
g1783
g1783
S'for EPSILON_SVR'
p3131
I0
I0
I01
tp3132
a(S'int'
p3133
S'shrinking'
p3134
g3134
S'shrinking'
p3135
I0
I0
I01
tp3136
a(S'int'
p3137
S'probability'
p3138
g3138
S'probability'
p3139
I0
I0
I01
tp3140
ag97
asbsS'TImputerConstructor_defaults'
p3141
(i__main__
ClassDefinition
p3142
(dp3143
g4
I1
sg5
I01
sg6
g3141
sg7
S'TImputerConstructor'
p3144
sg9
(lp3145
sg11
I00
sg12
(lp3146
(S'TExample'
p3147
S'defaults'
p3148
g3148
S'default values to be imputed instead missing ones'
p3149
I0
I0
I00
tp3150
ag151
asbsS'TConditionalProbabilityEstimatorConstructor'
p3151
(i__main__
ClassDefinition
p3152
(dp3153
g4
I1
sg5
I01
sg6
g3151
sg7
S'TOrange'
p3154
sg9
(lp3155
sg11
I01
sg12
(lp3156
sbsS'TPreprocessor_takeMissingClasses'
p3157
(i__main__
ClassDefinition
p3158
(dp3159
g4
I1
sg5
I01
sg6
g3157
sg7
S'TPreprocessor'
p3160
sg9
(lp3161
sg11
I00
sg12
(lp3162
sbsS'TClustersFromIMByAssessor'
p3163
(i__main__
ClassDefinition
p3164
(dp3165
g4
I1
sg5
I01
sg6
g3163
sg7
S'TClustersFromIM'
p3166
sg9
(lp3167
sg11
I00
sg12
(lp3168
(S'TColumnAssessor'
p3169
S'columnAssessor'
p3170
g3170
S'column quality assessor'
p3171
I0
I0
I00
tp3172
a(S'TStopIMClusteringByAssessor'
p3173
S'stopCriterion'
p3174
g3174
S'stop criterion'
p3175
I0
I0
I00
tp3176
asbsS'TRuleValidator_LRS'
p3177
(i__main__
ClassDefinition
p3178
(dp3179
g4
I1
sg5
I01
sg6
g3177
sg7
S'TRuleValidator'
p3180
sg9
(lp3181
sg11
I00
sg12
(lp3182
(S'float'
p3183
S'alpha'
p3184
g3184
g1425
I0
I0
I01
tp3185
a(S'float'
p3186
S'min_coverage'
p3187
g3187
g1425
I0
I0
I01
tp3188
a(S'float'
p3189
S'max_rule_complexity'
p3190
g3190
g1425
I0
I0
I01
tp3191
asbsS'TLogRegFitter_Python'
p3192
(i__main__
ClassDefinition
p3193
(dp3194
g4
I1
sg5
I01
sg6
g3192
sg7
S'TLogRegFitter'
p3195
sg9
(lp3196
sg11
I00
sg12
(lp3197
sbsS'TMakeRandomIndices2'
p3198
(i__main__
ClassDefinition
p3199
(dp3200
g4
I1
sg5
I01
sg6
g3198
sg7
S'TMakeRandomIndices'
p3201
sg9
(lp3202
sg11
I00
sg12
(lp3203
(S'float'
p3204
S'p0'
p3205
g3205
S"a proportion or a number of 0's"
p3206
I0
I0
I01
tp3207
ag459
ag463
ag467
asbsS'TValueList'
p3208
(i__main__
ClassDefinition
p3209
(dp3210
g4
I1
sg5
I01
sg6
g3208
sg7
g1356
sg9
(lp3211
sg11
I00
sg12
(lp3212
(S'TVariable'
p3213
S'variable'
p3214
g3214
S'the variable to which the list applies'
p3215
I0
I0
I00
tp3216
asbsS'TTreeExampleSplitter_UnknownsToCommon'
p3217
(i__main__
ClassDefinition
p3218
(dp3219
g4
I1
sg5
I01
sg6
g3217
sg7
S'TTreeExampleSplitter'
p3220
sg9
(lp3221
sg11
I00
sg12
(lp3222
sbsS'TContDistribution'
p3223
(i__main__
ClassDefinition
p3224
(dp3225
g4
I1
sg5
I01
sg6
g3223
sg7
S'TDistribution'
p3226
sg9
(lp3227
sg11
I00
sg12
(lp3228
(S'TFloatList'
p3229
S'variances'
p3230
g3230
S'variances'
p3231
I0
I0
I00
tp3232
a(S'float'
p3233
S'sum'
p3234
g3234
S'weighted sum of elements (i.e. N*average)'
p3235
I01
I0
I01
tp3236
a(S'float'
p3237
S'sum2'
p3238
g3238
S'weighted sum of squares of elements'
p3239
I01
I0
I01
tp3240
ag748
ag752
ag756
ag760
ag764
ag768
ag772
ag776
asbsS'TTreeDescender_UnknownMergeAsSelector'
p3241
(i__main__
ClassDefinition
p3242
(dp3243
g4
I1
sg5
I01
sg6
g3241
sg7
g1104
sg9
(lp3244
sg11
I0
sg12
(lp3245
sbsS'TContingencyAttrClass'
p3246
(i__main__
ClassDefinition
p3247
(dp3248
g4
I1
sg5
I01
sg6
g3246
sg7
S'TContingencyClass'
p3249
sg9
(lp3250
sg11
I00
sg12
(lp3251
g1200
ag1206
ag1210
ag1214
ag1218
asbsS'TDomainTransformerConstructor'
p3252
(i__main__
ClassDefinition
p3253
(dp3254
g4
I1
sg5
I01
sg6
g3252
sg7
S'TOrange'
p3255
sg9
(lp3256
sg11
I01
sg12
(lp3257
(S'bool'
p3258
S'preservesOrder'
p3259
g3259
S'a flag, telling that original attributes have corresponding attribute in the same order'
p3260
I01
I0
I01
tp3261
a(S'bool'
p3262
S'preservesAttributes'
p3263
g3263
S'a flag, telling whether each original has a corresponding new attribute'
p3264
I01
I0
I01
tp3265
asbsS'TPythonValueSpecial'
p3266
(i__main__
ClassDefinition
p3267
(dp3268
g4
I1
sg5
I01
sg6
g3266
sg7
S'TOrange'
p3269
sg9
(lp3270
sg11
I00
sg12
(lp3271
(S'int'
p3272
S'valueType'
p3273
g3273
S'value type'
p3274
I0
I0
I01
tp3275
asbsS'TIGConstructor'
p3276
(i__main__
ClassDefinition
p3277
(dp3278
g4
I1
sg5
I01
sg6
g3276
sg7
S'TOrange'
p3279
sg9
(lp3280
sg11
I01
sg12
(lp3281
sbsS'TProbabilityEstimatorConstructor'
p3282
(i__main__
ClassDefinition
p3283
(dp3284
g4
I1
sg5
I01
sg6
g3282
sg7
S'TOrange'
p3285
sg9
(lp3286
sg11
I01
sg12
(lp3287
sbsS'TFloatVariable'
p3288
(i__main__
ClassDefinition
p3289
(dp3290
g4
I1
sg5
I01
sg6
g3288
sg7
S'TVariable'
p3291
sg9
(lp3292
sg11
I00
sg12
(lp3293
(S'float'
p3294
S'startValue'
p3295
g3295
S'lowest value'
p3296
I0
I0
I01
tp3297
a(S'float'
p3298
S'endValue'
p3299
g3299
S'highest value'
p3300
I0
I0
I01
tp3301
a(S'float'
p3302
S'stepValue'
p3303
g3303
S'step'
p3304
I0
I0
I01
tp3305
a(S'int'
p3306
S'numberOfDecimals'
p3307
g3307
S'number of digits after decimal point'
p3308
I0
I0
I01
tp3309
a(S'bool'
p3310
S'scientificFormat'
p3311
g3311
S'use scientific format in output'
p3312
I0
I0
I01
tp3313
a(S'int'
p3314
S'adjustDecimals'
p3315
g3315
S"adjust number of decimals according to the values converted (0 - no, 1 - yes, 2 - yes, but haven't seen any yet)"
p3316
I0
I0
I01
tp3317
ag237
ag241
ag245
ag249
ag253
ag257
ag261
asbsS'TImputer_random'
p3318
(i__main__
ClassDefinition
p3319
(dp3320
g4
I1
sg5
I01
sg6
g3318
sg7
S'TImputer'
p3321
sg9
(lp3322
sg11
I00
sg12
(lp3323
(S'bool'
p3324
S'imputeClass'
p3325
g3325
S'Tells whether to impute the class values, too (default: true)'
p3326
I0
I0
I01
tp3327
a(S'bool'
p3328
S'deterministic'
p3329
g3329
S"tells whether to initialize random by example's CRC (default: false)"
p3330
I0
I0
I01
tp3331
asbsS'TProbabilityEstimatorConstructor_kernel'
p3332
(i__main__
ClassDefinition
p3333
(dp3334
g4
I1
sg5
I01
sg6
g3332
sg7
S'TProbabilityEstimatorConstructor'
p3335
sg9
(lp3336
sg11
I00
sg12
(lp3337
(S'float'
p3338
S'minImpact'
p3339
g3339
S'Minimal impact the point must have to be counted'
p3340
I0
I0
I01
tp3341
a(S'float'
p3342
S'smoothing'
p3343
g3343
S'Smoothing factor'
p3344
I0
I0
I01
tp3345
a(S'int'
p3346
S'nPoints'
p3347
g3347
S'Number of points for curve (negative means the given number of points is inserted in each interval)'
p3348
I0
I0
I01
tp3349
asbsS'TRuleCovererAndRemover_Default'
p3350
(i__main__
ClassDefinition
p3351
(dp3352
g4
I1
sg5
I01
sg6
g3350
sg7
S'TRuleCovererAndRemover'
p3353
sg9
(lp3354
sg11
I00
sg12
(lp3355
sbsS'TP2NN'
p3356
(i__main__
ClassDefinition
p3357
(dp3358
g4
I1
sg5
I01
sg6
g3356
sg7
S'TPNN'
p3359
sg9
(lp3360
sg11
I00
sg12
(lp3361
g1532
ag1536
ag1540
ag1544
ag1548
ag1552
ag1556
ag920
ag83
ag87
asbsS'TFilter_Python'
p3362
(i__main__
ClassDefinition
p3363
(dp3364
g4
I1
sg5
I01
sg6
g3362
sg7
S'TFilter'
p3365
sg9
(lp3366
sg11
I00
sg12
(lp3367
g433
ag437
asbsS'TExamplesDistanceConstructor_Maximal'
p3368
(i__main__
ClassDefinition
p3369
(dp3370
g4
I1
sg5
I01
sg6
g3368
sg7
S'TExamplesDistanceConstructor_Normalized'
p3371
sg9
(lp3372
sg11
I00
sg12
(lp3373
g1580
ag1584
ag1588
asbsS'TTreeDescender_Python'
p3374
(i__main__
ClassDefinition
p3375
(dp3376
g4
I1
sg5
I01
sg6
g3374
sg7
S'TTreeDescender'
p3377
sg9
(lp3378
sg11
I00
sg12
(lp3379
sbsS'TSubsetsGenerator_constant'
p3380
(i__main__
ClassDefinition
p3381
(dp3382
g4
I1
sg5
I01
sg6
g3380
sg7
S'TSubsetsGenerator'
p3383
sg9
(lp3384
sg11
I00
sg12
(lp3385
(S'TVarList'
p3386
S'constant'
p3387
g3387
S'a subset that is returned (once!)'
p3388
I0
I0
I00
tp3389
ag183
asbsS'TGaussianNoiseGenerator'
p3390
(i__main__
ClassDefinition
p3391
(dp3392
g4
I1
sg5
I01
sg6
g3390
sg7
S'TChangeExampleGenerator'
p3393
sg9
(lp3394
sg11
I00
sg12
(lp3395
(S'TIntFloatList'
p3396
S'deviations'
p3397
g3397
S"deviations for attributes' values"
p3398
I0
I0
I00
tp3399
a(S'TRandomGenerator'
p3400
S'randomGenerator'
p3401
g3401
S'random generator'
p3402
I0
I0
I00
tp3403
ag137
ag141
asbsS'TClustersFromDistributionsByAssessor'
p3404
(i__main__
ClassDefinition
p3405
(dp3406
g4
I1
sg5
I01
sg6
g3404
sg7
S'TClustersFromDistributions'
p3407
sg9
(lp3408
sg11
I00
sg12
(lp3409
(S'TDistributionAssessor'
p3410
S'distributionAssessor'
p3411
g3411
S'column quality assessor'
p3412
I0
I0
I00
tp3413
a(S'TStopDistributionClustering'
p3414
S'stopCriterion'
p3415
g3415
S'stop criterion'
p3416
I0
I0
I00
tp3417
a(S'float'
p3418
S'minProfitProportion'
p3419
g3419
S'minimal merge profit'
p3420
I0
I0
I01
tp3421
asbsS'TDefaultClassifier'
p3422
(i__main__
ClassDefinition
p3423
(dp3424
g4
I1
sg5
I01
sg6
g3422
sg7
S'TClassifier'
p3425
sg9
(lp3426
sg11
I00
sg12
(lp3427
(S'TValue'
p3428
S'defaultVal'
p3429
g3429
S'default prediction'
p3430
I0
I0
I01
tp3431
a(S'TDistribution'
p3432
S'defaultDistribution'
p3433
g3433
S'default distribution'
p3434
I0
I0
I00
tp3435
ag83
ag87
asbsS'TColumnAssessor_Kramer'
p3436
(i__main__
ClassDefinition
p3437
(dp3438
g4
I1
sg5
I01
sg6
g3436
sg7
S'TColumnAssessor'
p3439
sg9
(lp3440
sg11
I00
sg12
(lp3441
sbsS'TDiscretization'
p3442
(i__main__
ClassDefinition
p3443
(dp3444
g4
I1
sg5
I01
sg6
g3442
sg7
S'TOrange'
p3445
sg9
(lp3446
sg11
I01
sg12
(lp3447
sbsS'TTreeSplitConstructor_Measure'
p3448
(i__main__
ClassDefinition
p3449
(dp3450
g4
I1
sg5
I01
sg6
g3448
sg7
S'TTreeSplitConstructor'
p3451
sg9
(lp3452
sg11
I01
sg12
(lp3453
g894
ag898
ag902
asbsS'TTreeNode'
p3454
(i__main__
ClassDefinition
p3455
(dp3456
g4
I1
sg5
I01
sg6
g3454
sg7
S'TOrange'
p3457
sg9
(lp3458
sg11
I00
sg12
(lp3459
(S'TClassifier'
p3460
S'nodeClassifier'
p3461
g3461
S'classifies an example'
p3462
I0
I0
I00
tp3463
a(S'TDistribution'
p3464
S'distribution'
p3465
g3465
S'distribution of classes in the node'
p3466
I0
I0
I00
tp3467
a(S'TDomainContingency'
p3468
S'contingency'
p3469
g3469
S'domain contingency for examples in the node'
p3470
I0
I0
I00
tp3471
a(S'TExampleGenerator'
p3472
S'examples'
p3473
g3473
S'learning examples (if stored)'
p3474
I0
I0
I00
tp3475
a(S'int'
p3476
S'weightID'
p3477
g3477
S'weightID used to construct this node'
p3478
I0
I0
I01
tp3479
a(S'TClassifier'
p3480
S'branchSelector'
p3481
g3481
S'classifier that select a branch for an example'
p3482
I0
I0
I00
tp3483
a(S'TTreeNodeList'
p3484
S'branches'
p3485
g3485
S'classifiers presenting the branches'
p3486
I0
I0
I00
tp3487
a(S'TStringList'
p3488
S'branchDescriptions'
p3489
g3489
S'descriptions of branches'
p3490
I0
I0
I00
tp3491
a(S'TDiscDistribution'
p3492
S'branchSizes'
p3493
g3493
S'numbers of examples in branches'
p3494
I0
I0
I00
tp3495
asbsS'TTransformValue_IsDefined'
p3496
(i__main__
ClassDefinition
p3497
(dp3498
g4
I1
sg5
I01
sg6
g3496
sg7
S'TTransformValue'
p3499
sg9
(lp3500
sg11
I00
sg12
(lp3501
g497
asbsS'TFilter_hasClassValue'
p3502
(i__main__
ClassDefinition
p3503
(dp3504
g4
I1
sg5
I01
sg6
g3502
sg7
S'TFilter'
p3505
sg9
(lp3506
sg11
I00
sg12
(lp3507
g433
ag437
asbsS'TStopDistributionClustering_binary'
p3508
(i__main__
ClassDefinition
p3509
(dp3510
g4
I1
sg5
I01
sg6
g3508
sg7
S'TStopDistributionClustering'
p3511
sg9
(lp3512
sg11
I00
sg12
(lp3513
sbsS'TIMByRows'
p3514
(i__main__
ClassDefinition
p3515
(dp3516
g4
I1
sg5
I01
sg6
g3514
sg7
S'TOrange'
p3517
sg9
(lp3518
sg11
I00
sg12
(lp3519
(S'int'
p3520
S'varType'
p3521
g3521
S'class variable type'
p3522
I0
I0
I01
tp3523
asbsS'TRuleFinder'
p3524
(i__main__
ClassDefinition
p3525
(dp3526
g4
I1
sg5
I01
sg6
g3524
sg7
S'TOrange'
p3527
sg9
(lp3528
sg11
I01
sg12
(lp3529
g2996
ag2999
asbsS'TClassifierByExampleTable'
p3530
(i__main__
ClassDefinition
p3531
(dp3532
g4
I1
sg5
I01
sg6
g3530
sg7
S'TClassifierFD'
p3533
sg9
(lp3534
sg11
I00
sg12
(lp3535
(S'TExampleTable'
p3536
S'sortedExamples'
p3537
g3537
S'a table of examples'
p3538
I0
I0
I00
tp3539
a(S'bool'
p3540
S'containsUnknowns'
p3541
g3541
S'if true, the table contains unknown values'
p3542
I0
I0
I01
tp3543
a(S'TClassifier'
p3544
S'classifierForUnknown'
p3545
g3545
S'a classifier for unknown cases'
p3546
I0
I0
I00
tp3547
a(S'TEFMDataDescription'
p3548
S'dataDescription'
p3549
g3549
S'data description'
p3550
I0
I0
I00
tp3551
ag920
ag83
ag87
asbsS'TChangeExampleGenerator'
p3552
(i__main__
ClassDefinition
p3553
(dp3554
g4
I1
sg5
I01
sg6
g3552
sg7
S'TAdapterGenerator'
p3555
sg9
(lp3556
sg11
I01
sg12
(lp3557
g137
ag141
asbsS'TRule'
p3558
(i__main__
ClassDefinition
p3559
(dp3560
g4
I1
sg5
I01
sg6
g3558
sg7
S'TOrange'
p3561
sg9
(lp3562
sg11
I00
sg12
(lp3563
(S'TFilter'
p3564
S'filter'
p3565
g3565
S'stored filter for this rule'
p3566
I0
I0
I00
tp3567
a(S'TClassifier'
p3568
S'classifier'
p3569
g3569
S'classifies an example'
p3570
I0
I0
I00
tp3571
a(S'TLearner'
p3572
S'learner'
p3573
g3573
S'learns a classifier from data'
p3574
I0
I0
I00
tp3575
a(S'TRule'
p3576
S'parentRule'
p3577
g3577
g1425
I0
I0
I00
tp3578
a(S'TDistribution'
p3579
S'classDistribution'
p3580
g3580
S'distribution of classes covered by the rule'
p3581
I0
I0
I00
tp3582
a(S'TExampleTable'
p3583
S'examples'
p3584
g3584
S'covered examples'
p3585
I0
I0
I00
tp3586
a(S'int'
p3587
S'weightID'
p3588
g3588
S'weight for the stored examples'
p3589
I0
I0
I01
tp3590
a(S'float'
p3591
S'quality'
p3592
g3592
S'some measure of rule quality'
p3593
I0
I0
I01
tp3594
a(S'float'
p3595
S'complexity'
p3596
g3596
g1425
I0
I0
I01
tp3597
asbsS'TClassifierByLookupTable2'
p3598
(i__main__
ClassDefinition
p3599
(dp3600
g4
I1
sg5
I01
sg6
g3598
sg7
S'TClassifierByLookupTable'
p3601
sg9
(lp3602
sg11
I00
sg12
(lp3603
(S'TVariable'
p3604
S'variable1'
p3605
g3605
S'the first attribute used for classification'
p3606
I01
I0
I00
tp3607
a(S'TVariable'
p3608
S'variable2'
p3609
g3609
S'the second attribute used for classification'
p3610
I01
I0
I00
tp3611
a(S'int'
p3612
S'noOfValues1'
p3613
g3613
S'number of values of the first attribute'
p3614
I01
I0
I01
tp3615
a(S'int'
p3616
S'noOfValues2'
p3617
g3617
S'number of values of the second attribute'
p3618
I01
I0
I01
tp3619
a(S'TEFMDataDescription'
p3620
S'dataDescription'
p3621
g3621
S'data description'
p3622
I0
I0
I00
tp3623
ag75
ag79
ag83
ag87
asbsS'TPreprocessor_addClassNoise'
p3624
(i__main__
ClassDefinition
p3625
(dp3626
g4
I1
sg5
I01
sg6
g3624
sg7
S'TPreprocessor'
p3627
sg9
(lp3628
sg11
I00
sg12
(lp3629
(S'float'
p3630
S'proportion'
p3631
g3631
S'proportion of changed class values'
p3632
I0
I0
I01
tp3633
a(S'TRandomGenerator'
p3634
S'randomGenerator'
p3635
g3635
S'random number generator'
p3636
I0
I0
I00
tp3637
asbsS'TClassifierByLookupTable1'
p3638
(i__main__
ClassDefinition
p3639
(dp3640
g4
I1
sg5
I01
sg6
g3638
sg7
S'TClassifierByLookupTable'
p3641
sg9
(lp3642
sg11
I00
sg12
(lp3643
(S'TVariable'
p3644
S'variable1'
p3645
(g3645
S'variable'
p3646
tp3647
S' attribute used for classification'
p3648
I01
I0
I00
tp3649
ag75
ag79
ag83
ag87
asbsS'TRuleClassifierConstructor_Python'
p3650
(i__main__
ClassDefinition
p3651
(dp3652
g4
I1
sg5
I01
sg6
g3650
sg7
S'TRuleClassifierConstructor'
p3653
sg9
(lp3654
sg11
I00
sg12
(lp3655
sbsS'TRemoveRedundantOneValue'
p3656
(i__main__
ClassDefinition
p3657
(dp3658
g4
I1
sg5
I01
sg6
g3656
sg7
S'TRemoveRedundant'
p3659
sg9
(lp3660
sg11
I00
sg12
(lp3661
(S'bool'
p3662
S'onData'
p3663
g3663
S'observe the actual number of value on the data (not on attribute definitions)'
p3664
I0
I0
I01
tp3665
ag940
asbsS'TDistributionAssessor_Relief'
p3666
(i__main__
ClassDefinition
p3667
(dp3668
g4
I1
sg5
I01
sg6
g3666
sg7
S'TDistributionAssessor'
p3669
sg9
(lp3670
sg11
I00
sg12
(lp3671
sbsS'TEnumVariable'
p3672
(i__main__
ClassDefinition
p3673
(dp3674
g4
I1
sg5
I01
sg6
g3672
sg7
S'TVariable'
p3675
sg9
(lp3676
sg11
I00
sg12
(lp3677
(S'TStringList'
p3678
S'values'
p3679
g3679
S"attribute's values"
p3680
I0
I0
I00
tp3681
a(S'int'
p3682
S'baseValue'
p3683
g3683
S'the index of the base value'
p3684
I0
I0
I01
tp3685
ag237
ag241
ag245
ag249
ag253
ag257
ag261
asbsS'TConditionalProbabilityEstimatorConstructor_loess'
p3686
(i__main__
ClassDefinition
p3687
(dp3688
g4
I1
sg5
I01
sg6
g3686
sg7
S'TConditionalProbabilityEstimatorConstructor'
p3689
sg9
(lp3690
sg11
I00
sg12
(lp3691
(S'float'
p3692
S'windowProportion'
p3693
g3693
S'The proportion of points in a window for LR'
p3694
I0
I0
I01
tp3695
a(S'int'
p3696
S'nPoints'
p3697
g3697
S'The number of points on curve'
p3698
I0
I0
I01
tp3699
a(S'int'
p3700
S'distributionMethod'
p3701
g3701
S"Meaning of the 'nPoints'"
p3702
I0
I0
I01
tp3703
asbsS'TPreprocessor_addMissing'
p3704
(i__main__
ClassDefinition
p3705
(dp3706
g4
I1
sg5
I01
sg6
g3704
sg7
S'TPreprocessor'
p3707
sg9
(lp3708
sg11
I00
sg12
(lp3709
(S'TVariableFloatMap'
p3710
S'proportions'
p3711
g3711
S'proportion of removed values for individual values'
p3712
I0
I0
I00
tp3713
a(S'float'
p3714
S'defaultProportion'
p3715
g3715
S'default proportion of removed values (for attributes not specified above)'
p3716
I0
I0
I01
tp3717
a(S'int'
p3718
S'specialType'
p3719
g3719
S'special value type (1=DC, 2=DK)'
p3720
I0
I0
I01
tp3721
a(S'TRandomGenerator'
p3722
S'randomGenerator'
p3723
g3723
S'random number generator'
p3724
I0
I0
I00
tp3725
asbsS'TRuleBeamCandidateSelector'
p3726
(i__main__
ClassDefinition
p3727
(dp3728
g4
I1
sg5
I01
sg6
g3726
sg7
S'TOrange'
p3729
sg9
(lp3730
sg11
I01
sg12
(lp3731
sbsS'TSubsetsGenerator_minMaxSize'
p3732
(i__main__
ClassDefinition
p3733
(dp3734
g4
I1
sg5
I01
sg6
g3732
sg7
S'TSubsetsGenerator'
p3735
sg9
(lp3736
sg11
I00
sg12
(lp3737
(S'int'
p3738
S'min'
p3739
g3739
S'minimal subset size'
p3740
I0
I0
I01
tp3741
a(S'int'
p3742
S'max'
p3743
g3743
S'maximal subset size'
p3744
I0
I0
I01
tp3745
ag183
asbsS'TMakeRandomIndicesN'
p3746
(i__main__
ClassDefinition
p3747
(dp3748
g4
I1
sg5
I01
sg6
g3746
sg7
S'TMakeRandomIndices'
p3749
sg9
(lp3750
sg11
I00
sg12
(lp3751
(S'TFloatList'
p3752
g1783
g1783
S'probabilities of indices (last is 1-sum(p))'
p3753
I0
I0
I00
tp3754
ag459
ag463
ag467
asbsS'TTreeExampleSplitter_UnknownsToAll'
p3755
(i__main__
ClassDefinition
p3756
(dp3757
g4
I1
sg5
I01
sg6
g3755
sg7
S'TTreeExampleSplitter'
p3758
sg9
(lp3759
sg11
I00
sg12
(lp3760
sbsS'TValueFilter_stringList'
p3761
(i__main__
ClassDefinition
p3762
(dp3763
g4
I1
sg5
I01
sg6
g3761
sg7
S'TValueFilter'
p3764
sg9
(lp3765
sg11
I00
sg12
(lp3766
(S'TStringList'
p3767
S'values'
p3768
g3768
S'accepted values'
p3769
I0
I0
I00
tp3770
a(S'bool'
p3771
S'caseSensitive'
p3772
g3772
S'if true (default), the comparison is case sensitive'
p3773
I0
I0
I01
tp3774
ag686
ag690
asbsS'TContingencyClass'
p3775
(i__main__
ClassDefinition
p3776
(dp3777
g4
I1
sg5
I01
sg6
g3775
sg7
S'TContingency'
p3778
sg9
(lp3779
sg11
I01
sg12
(lp3780
g1200
ag1206
ag1210
ag1214
ag1218
asbsS'TAssociationClassifier'
p3781
(i__main__
ClassDefinition
p3782
(dp3783
g4
I1
sg5
I01
sg6
g3781
sg7
S'TClassifierFD'
p3784
sg9
(lp3785
sg11
I00
sg12
(lp3786
(S'TAssociationRules'
p3787
S'rules'
p3788
g3788
S'association rules'
p3789
I0
I0
I00
tp3790
a(S'int'
p3791
S'voteWeight'
p3792
g3792
S'vote weight (s=support, c=confidence, p=product)'
p3793
I0
I0
I01
tp3794
ag920
ag83
ag87
asbsS'TDomainDistributions'
p3795
(i__main__
ClassDefinition
p3796
(dp3797
g4
I1
sg5
I01
sg6
g3795
sg7
g1356
sg9
(lp3798
sg11
I00
sg12
(lp3799
sbsS'TDomain'
p3800
(i__main__
ClassDefinition
p3801
(dp3802
g4
I1
sg5
I01
sg6
g3800
sg7
S'TOrange'
p3803
sg9
(lp3804
sg11
I00
sg12
(lp3805
g1744
ag1748
ag1752
ag1756
asbsS'TTreePruner_SameMajority'
p3806
(i__main__
ClassDefinition
p3807
(dp3808
g4
I1
sg5
I01
sg6
g3806
sg7
S'TTreePruner'
p3809
sg9
(lp3810
sg11
I00
sg12
(lp3811
sbsS'TExampleDistConstructor'
p3812
(i__main__
ClassDefinition
p3813
(dp3814
g4
I1
sg5
I01
sg6
g3812
sg7
S'TOrange'
p3815
sg9
(lp3816
sg11
I01
sg12
(lp3817
sbsS'TIMByIMByRows'
p3818
(i__main__
ClassDefinition
p3819
(dp3820
g4
I1
sg5
I01
sg6
g3818
sg7
S'TIMConstructor'
p3821
sg9
(lp3822
sg11
I00
sg12
(lp3823
g848
asbsS'TDiscrete2Continuous'
p3824
(i__main__
ClassDefinition
p3825
(dp3826
g4
I1
sg5
I01
sg6
g3824
sg7
S'TTransformValue'
p3827
sg9
(lp3828
sg11
I00
sg12
(lp3829
(S'int'
p3830
S'value'
p3831
g3831
S'target value'
p3832
I0
I0
I01
tp3833
a(S'bool'
p3834
S'invert'
p3835
g3835
S'give 1.0 to values not equal to the target'
p3836
I0
I0
I01
tp3837
a(S'bool'
p3838
S'zeroBased'
p3839
g3839
S'if true (default) it gives values 0.0 and 1.0; else -1.0 and 1.0, 0.0 for undefined'
p3840
I0
I0
I01
tp3841
ag497
asbsS'TDomainDiscretization'
p3842
(i__main__
ClassDefinition
p3843
(dp3844
g4
I1
sg5
I01
sg6
g3842
sg7
S'TOrange'
p3845
sg9
(lp3846
sg11
I00
sg12
(lp3847
(S'TDiscretization'
p3848
S'discretization'
p3849
g3849
S'discretization'
p3850
I0
I0
I00
tp3851
asbsS'TColumnAssessor_m'
p3852
(i__main__
ClassDefinition
p3853
(dp3854
g4
I1
sg5
I01
sg6
g3852
sg7
S'TColumnAssessor'
p3855
sg9
(lp3856
sg11
I00
sg12
(lp3857
(S'float'
p3858
g818
g818
S'm for m-estimate'
p3859
I0
I0
I01
tp3860
asbsS'TImputer_defaults'
p3861
(i__main__
ClassDefinition
p3862
(dp3863
g4
I1
sg5
I01
sg6
g3861
sg7
S'TImputer'
p3864
sg9
(lp3865
sg11
I00
sg12
(lp3866
(S'TExample'
p3867
S'defaults'
p3868
g3868
S'values that are to be inserted instead of missing ones'
p3869
I0
I0
I00
tp3870
asbsS'TContingency'
p3871
(i__main__
ClassDefinition
p3872
(dp3873
g4
I1
sg5
I01
sg6
g3871
sg7
S'TOrange'
p3874
sg9
(lp3875
sg11
I00
sg12
(lp3876
g1200
ag1206
ag1210
ag1214
ag1218
asbsS'TStringValue'
p3877
(i__main__
ClassDefinition
p3878
(dp3879
g4
I1
sg5
I01
sg6
g3877
sg7
S'TSomeValue'
p3880
sg9
(lp3881
sg11
I00
sg12
(lp3882
sbsS'TClassifierGenerator'
p3883
(i__main__
ClassDefinition
p3884
(dp3885
g4
I1
sg5
I01
sg6
g3883
sg7
S'TExampleGenerator'
p3886
sg9
(lp3887
sg11
I00
sg12
(lp3888
(S'TClassifier'
p3889
S'classify'
p3890
g3890
S'classifier'
p3891
I0
I0
I00
tp3892
ag137
ag141
asbsS'TRuleDataStoppingCriteria_Python'
p3893
(i__main__
ClassDefinition
p3894
(dp3895
g4
I1
sg5
I01
sg6
g3893
sg7
S'TRuleDataStoppingCriteria'
p3896
sg9
(lp3897
sg11
I00
sg12
(lp3898
sbsS'TTreeDescender_UnknownToCommonSelector'
p3899
(i__main__
ClassDefinition
p3900
(dp3901
g4
I1
sg5
I01
sg6
g3899
sg7
g1104
sg9
(lp3902
sg11
I0
sg12
(lp3903
sbsS'THierarchicalCluster'
p3904
(i__main__
ClassDefinition
p3905
(dp3906
g4
I1
sg5
I01
sg6
g3904
sg7
S'TOrange'
p3907
sg9
(lp3908
sg11
I00
sg12
(lp3909
(S'THierarchicalClusterList'
p3910
S'branches'
p3911
g3911
S'subclusters'
p3912
I0
I0
I00
tp3913
a(S'float'
p3914
S'height'
p3915
g3915
S'height'
p3916
I0
I0
I01
tp3917
a(S'TIntList'
p3918
S'mapping'
p3919
g3919
S'indices to the list of all elements in the clustering'
p3920
I0
I0
I00
tp3921
a(S'int'
p3922
S'first'
p3923
g3923
S"the index into 'elements' to the first element of the cluster"
p3924
I0
I0
I01
tp3925
a(S'int'
p3926
S'last'
p3927
g3927
S"the index into 'elements' to the one after the last element of the cluster"
p3928
I0
I0
I01
tp3929
asbsS'TPreprocessIM'
p3930
(i__main__
ClassDefinition
p3931
(dp3932
g4
I1
sg5
I01
sg6
g3930
sg7
S'TOrange'
p3933
sg9
(lp3934
sg11
I01
sg12
(lp3935
sbsS'TRuleEvaluator_Laplace'
p3936
(i__main__
ClassDefinition
p3937
(dp3938
g4
I1
sg5
I01
sg6
g3936
sg7
S'TRuleEvaluator'
p3939
sg9
(lp3940
sg11
I00
sg12
(lp3941
sbsS'TColumnAssessor_N'
p3942
(i__main__
ClassDefinition
p3943
(dp3944
g4
I1
sg5
I01
sg6
g3942
sg7
S'TColumnAssessor'
p3945
sg9
(lp3946
sg11
I00
sg12
(lp3947
sbsS'TPreprocessor_dropMissing'
p3948
(i__main__
ClassDefinition
p3949
(dp3950
g4
I1
sg5
I01
sg6
g3948
sg7
S'TPreprocessor'
p3951
sg9
(lp3952
sg11
I00
sg12
(lp3953
sbsS'TMyLearner'
p3954
(i__main__
ClassDefinition
p3955
(dp3956
g645
I1
sg646
I0
sg647
g3954
sg648
S'TLearner'
p3957
sg650
I00
sg651
(lp3958
sg653
(lp3959
(S'int'
p3960
S'randomSeed'
p3961
g3961
S'seed for the random generator'
p3962
I0
I0
I01
tp3963
ag97
asbsS'TFeatureByMinComplexity'
p3964
(i__main__
ClassDefinition
p3965
(dp3966
g4
I1
sg5
I01
sg6
g3964
sg7
S'TFeatureInducer'
p3967
sg9
(lp3968
sg11
I00
sg12
(lp3969
(S'TColorIG'
p3970
S'colorIG'
p3971
g3971
S'graph coloring algorithm'
p3972
I0
I0
I00
tp3973
a(S'int'
p3974
S'completion'
p3975
g3975
S'decides how to determine the class for points not covered by any cluster'
p3976
I0
I0
I01
tp3977
asbsS'TExample'
p3978
(i__main__
ClassDefinition
p3979
(dp3980
g4
I1
sg5
I01
sg6
g3978
sg7
S'TOrange'
p3981
sg9
(lp3982
sg11
I00
sg12
(lp3983
g2056
asbsS'TFixedDiscretization'
p3984
(i__main__
ClassDefinition
p3985
(dp3986
g4
I1
sg5
I01
sg6
g3984
sg7
S'TDiscretization'
p3987
sg9
(lp3988
sg11
I00
sg12
(lp3989
(S'TFloatList'
p3990
S'points'
p3991
g3991
S'cut-off points'
p3992
I0
I0
I00
tp3993
asbsS'TDomainContingency'
p3994
(i__main__
ClassDefinition
p3995
(dp3996
g4
I1
sg5
I01
sg6
g3994
sg7
g1356
sg9
(lp3997
sg11
I00
sg12
(lp3998
(S'TDistribution'
p3999
S'classes'
p4000
g4000
S'distribution of class values'
p4001
I01
I0
I00
tp4002
a(S'bool'
p4003
S'classIsOuter'
p4004
g4004
S'tells whether the class is the outer variable'
p4005
I01
I0
I01
tp4006
asbsS'TPreprocessor_addGaussianClassNoise'
p4007
(i__main__
ClassDefinition
p4008
(dp4009
g4
I1
sg5
I01
sg6
g4007
sg7
S'TPreprocessor'
p4010
sg9
(lp4011
sg11
I00
sg12
(lp4012
(S'float'
p4013
S'deviation'
p4014
g4014
S'class deviation'
p4015
I0
I0
I01
tp4016
a(S'TRandomGenerator'
p4017
S'randomGenerator'
p4018
g4018
S'random number generator'
p4019
I0
I0
I00
tp4020
asbsS'TRuleDataStoppingCriteria'
p4021
(i__main__
ClassDefinition
p4022
(dp4023
g4
I1
sg5
I01
sg6
g4021
sg7
S'TOrange'
p4024
sg9
(lp4025
sg11
I01
sg12
(lp4026
sbsS'TPreprocessor_filter'
p4027
(i__main__
ClassDefinition
p4028
(dp4029
g4
I1
sg5
I01
sg6
g4027
sg7
S'TPreprocessor'
p4030
sg9
(lp4031
sg11
I00
sg12
(lp4032
(S'TFilter'
p4033
S'filter'
p4034
g4034
S'filter'
p4035
I0
I0
I00
tp4036
asbsS'TExampleDistBySorting'
p4037
(i__main__
ClassDefinition
p4038
(dp4039
g4
I1
sg5
I01
sg6
g4037
sg7
S'TExampleDistConstructor'
p4040
sg9
(lp4041
sg11
I00
sg12
(lp4042
sbsS'TGraphAsMatrix'
p4043
(i__main__
ClassDefinition
p4044
(dp4045
g4
I1
sg5
I01
sg6
g4043
sg7
S'TGraph'
p4046
sg9
(lp4047
sg11
I00
sg12
(lp4048
g1068
ag1072
ag1076
asbsS'TLWRClassifier'
p4049
(i__main__
ClassDefinition
p4050
(dp4051
g4
I1
sg5
I01
sg6
g4049
sg7
S'TClassifierFD'
p4052
sg9
(lp4053
sg11
I00
sg12
(lp4054
(S'TFindNearest'
p4055
S'findNearest'
p4056
g4056
S'object that find nearest neighbours'
p4057
I0
I0
I00
tp4058
a(S'TLinRegLearner'
p4059
S'linRegLearner'
p4060
g4060
S'learner the performs local linear regression'
p4061
I0
I0
I00
tp4062
a(S'float'
p4063
g814
g814
S'number of neighbours'
p4064
I0
I0
I01
tp4065
a(S'bool'
p4066
S'rankWeight'
p4067
g4067
S'use ranks instead of distances'
p4068
I0
I0
I01
tp4069
a(S'int'
p4070
S'weightID'
p4071
g4071
S"weights of examples stored in 'findNearest'"
p4072
I0
I0
I01
tp4073
ag920
ag83
ag87
asbsS'TValueFilter_discrete'
p4074
(i__main__
ClassDefinition
p4075
(dp4076
g4
I1
sg5
I01
sg6
g4074
sg7
S'TValueFilter'
p4077
sg9
(lp4078
sg11
I00
sg12
(lp4079
(S'TValueList'
p4080
S'values'
p4081
g4081
S'accepted values'
p4082
I0
I0
I00
tp4083
ag686
ag690
asbsS'TComputeDomainContingency'
p4084
(i__main__
ClassDefinition
p4085
(dp4086
g4
I1
sg5
I01
sg6
g4084
sg7
S'TOrange'
p4087
sg9
(lp4088
sg11
I00
sg12
(lp4089
g25
asbsS'TAssociationRulesInducer'
p4090
(i__main__
ClassDefinition
p4091
(dp4092
g4
I1
sg5
I01
sg6
g4090
sg7
S'TOrange'
p4093
sg9
(lp4094
sg11
I00
sg12
(lp4095
(S'int'
p4096
S'maxItemSets'
p4097
g4097
S'maximal number of itemsets (increase if you want)'
p4098
I0
I0
I01
tp4099
a(S'float'
p4100
S'confidence'
p4101
g4101
S'required confidence'
p4102
I0
I0
I01
tp4103
a(S'float'
p4104
S'support'
p4105
g4105
S'required support'
p4106
I0
I0
I01
tp4107
a(S'bool'
p4108
S'classificationRules'
p4109
g4109
S'if true, rules will have the class and only the class attribute on the right-hand side'
p4110
I0
I0
I01
tp4111
asbsS'TTreeStopCriteria'
p4112
(i__main__
ClassDefinition
p4113
(dp4114
g4
I1
sg5
I01
sg6
g4112
sg7
S'TOrange'
p4115
sg9
(lp4116
sg11
I00
sg12
(lp4117
sbsS'TPreprocessor_addMissingClasses'
p4118
(i__main__
ClassDefinition
p4119
(dp4120
g4
I1
sg5
I01
sg6
g4118
sg7
S'TPreprocessor'
p4121
sg9
(lp4122
sg11
I00
sg12
(lp4123
(S'float'
p4124
S'proportion'
p4125
g4125
S'proportion of removed class values'
p4126
I0
I0
I01
tp4127
a(S'int'
p4128
S'specialType'
p4129
g4129
S'special value type (1=DC, 2=DK)'
p4130
I0
I0
I01
tp4131
a(S'TRandomGenerator'
p4132
S'randomGenerator'
p4133
g4133
S'random number generator'
p4134
I0
I0
I00
tp4135
asbsS'TLookupLearner'
p4136
(i__main__
ClassDefinition
p4137
(dp4138
g4
I1
sg5
I01
sg6
g4136
sg7
S'TLearner'
p4139
sg9
(lp4140
sg11
I00
sg12
(lp4141
(S'TLearner'
p4142
S'learnerForUnknown'
p4143
g4143
S'a learner for classifying cases not found in the table'
p4144
I0
I0
I00
tp4145
a(S'bool'
p4146
S'allowFastLookups'
p4147
g4147
S'if true, it constructs LookupClassifiers for <=3 attributes'
p4148
I0
I0
I01
tp4149
a(S'int'
p4150
S'unknownsHandling'
p4151
g4151
S'0 omit examples with unknowns, 1 distribute them, 2 keep them in table'
p4152
I0
I0
I01
tp4153
ag97
asbsS'TBasketExampleGenerator'
p4154
(i__main__
ClassDefinition
p4155
(dp4156
g4
I1
sg5
I01
sg6
g4154
sg7
S'TFileExampleGenerator'
p4157
sg9
(lp4158
sg11
I00
sg12
(lp4159
(S'bool'
p4160
S'dontStore'
p4161
g4161
S'disables items storing'
p4162
I0
I0
I01
tp4163
a(S'bool'
p4164
S'dontCheckStored'
p4165
g4165
S'disables items lookup in the global cache'
p4166
I0
I0
I01
tp4167
a(S'TDomain'
p4168
S'sourceDomain'
p4169
g4169
S'domain with items that can be reused'
p4170
I0
I0
I00
tp4171
ag125
ag129
ag133
ag137
ag141
asbsS'TRuleEvaluator_Entropy'
p4172
(i__main__
ClassDefinition
p4173
(dp4174
g4
I1
sg5
I01
sg6
g4172
sg7
S'TRuleEvaluator'
p4175
sg9
(lp4176
sg11
I00
sg12
(lp4177
sbsS'TDistribution'
p4178
(i__main__
ClassDefinition
p4179
(dp4180
g4
I1
sg5
I01
sg6
g4178
sg7
S'TSomeValue'
p4181
sg9
(lp4182
sg11
I01
sg12
(lp4183
g748
ag752
ag756
ag760
ag764
ag768
ag772
ag776
asbsNNsS'TExamplesDistance_DTW'
p4184
(i__main__
ClassDefinition
p4185
(dp4186
g4
I1
sg5
I01
sg6
g4184
sg7
S'TExamplesDistance_Normalized'
p4187
sg9
(lp4188
sg11
I00
sg12
(lp4189
(S'int'
p4190
S'dtwDistance'
p4191
g4191
S'distance measure between individual attributes (default: square of difference)'
p4192
I0
I0
I01
tp4193
ag327
ag331
ag335
ag339
ag343
ag347
ag351
asbsS'TTreeExampleSplitter_UnknownsToRandom'
p4194
(i__main__
ClassDefinition
p4195
(dp4196
g4
I1
sg5
I01
sg6
g4194
sg7
S'TTreeExampleSplitter'
p4197
sg9
(lp4198
sg11
I00
sg12
(lp4199
sbsS'TTreePruner_m'
p4200
(i__main__
ClassDefinition
p4201
(dp4202
g4
I1
sg5
I01
sg6
g4200
sg7
S'TTreePruner'
p4203
sg9
(lp4204
sg11
I00
sg12
(lp4205
(S'float'
p4206
g818
g818
S'm for m-estimate'
p4207
I0
I0
I01
tp4208
asbsS'TImputer'
p4209
(i__main__
ClassDefinition
p4210
(dp4211
g4
I1
sg5
I01
sg6
g4209
sg7
S'TOrange'
p4212
sg9
(lp4213
sg11
I01
sg12
(lp4214
sbsS'TExamplesDistanceConstructor_DTW'
p4215
(i__main__
ClassDefinition
p4216
(dp4217
g4
I1
sg5
I01
sg6
g4215
sg7
S'TExamplesDistanceConstructor_Normalized'
p4218
sg9
(lp4219
sg11
I00
sg12
(lp4220
(S'int'
p4221
S'dtwDistance'
p4222
g4222
S'distance measure between individual attributes (default: square of difference)'
p4223
I0
I0
I01
tp4224
ag1580
ag1584
ag1588
asbsS'TStopIMClusteringByAssessor_n'
p4225
(i__main__
ClassDefinition
p4226
(dp4227
g4
I1
sg5
I01
sg6
g4225
sg7
S'TStopIMClusteringByAssessor'
p4228
sg9
(lp4229
sg11
I00
sg12
(lp4230
(S'int'
p4231
g1310
g1310
S'number of clusters'
p4232
I0
I0
I01
tp4233
asbsS'TRandomGenerator'
p4234
(i__main__
ClassDefinition
p4235
(dp4236
g4
I1
sg5
I01
sg6
g4234
sg7
S'TOrange'
p4237
sg9
(lp4238
sg11
I00
sg12
(lp4239
(S'int'
p4240
S'initseed'
p4241
g4241
S'initial random seed'
p4242
I0
I0
I01
tp4243
a(S'int'
p4244
S'uses'
p4245
g4245
S'#times a number was returned'
p4246
I0
I0
I01
tp4247
asbsS'TThresholdCA'
p4248
(i__main__
ClassDefinition
p4249
(dp4250
g4
I1
sg5
I01
sg6
g4248
sg7
S'TOrange'
p4251
sg9
(lp4252
sg11
I00
sg12
(lp4253
sbsS'TPreprocessor_imputeByLearner'
p4254
(i__main__
ClassDefinition
p4255
(dp4256
g4
I1
sg5
I01
sg6
g4254
sg7
S'TPreprocessor'
p4257
sg9
(lp4258
sg11
I00
sg12
(lp4259
(S'TLearner'
p4260
S'learner'
p4261
g4261
S'learner used for inducing a model for imputation'
p4262
I0
I0
I00
tp4263
asbsS'TRuleBeamRefiner_Python'
p4264
(i__main__
ClassDefinition
p4265
(dp4266
g4
I1
sg5
I01
sg6
g4264
sg7
S'TRuleBeamRefiner'
p4267
sg9
(lp4268
sg11
I00
sg12
(lp4269
sbsS'TClassifierFromVarFD'
p4270
(i__main__
ClassDefinition
p4271
(dp4272
g4
I1
sg5
I01
sg6
g4270
sg7
S'TClassifierFD'
p4273
sg9
(lp4274
sg11
I00
sg12
(lp4275
(S'int'
p4276
S'position'
p4277
g4277
S'position of the attribute in domain'
p4278
I0
I0
I01
tp4279
a(S'TTransformValue'
p4280
S'transformer'
p4281
g4281
S'transformer'
p4282
I0
I0
I00
tp4283
a(S'TDistribution'
p4284
S'distributionForUnknown'
p4285
g4285
S'distribution for unknown value'
p4286
I0
I0
I00
tp4287
a(S'bool'
p4288
S'transformUnknowns'
p4289
g4289
S'if false (default), unknowns stay unknown or are changed into distribution if given'
p4290
I0
I0
I01
tp4291
ag920
ag83
ag87
asbsS'TImputer_model'
p4292
(i__main__
ClassDefinition
p4293
(dp4294
g4
I1
sg5
I01
sg6
g4292
sg7
S'TImputer'
p4295
sg9
(lp4296
sg11
I00
sg12
(lp4297
(S'TClassifierList'
p4298
S'models'
p4299
g4299
S'classifiers'
p4300
I0
I0
I00
tp4301
asbsS'TLogRegLearner'
p4302
(i__main__
ClassDefinition
p4303
(dp4304
g4
I1
sg5
I01
sg6
g4302
sg7
S'TLearner'
p4305
sg9
(lp4306
sg11
I00
sg12
(lp4307
(S'TLogRegFitter'
p4308
S'fitter'
p4309
g4309
S'fits beta coefficients and calculates beta errors.'
p4310
I0
I0
I00
tp4311
a(S'TImputerConstructor'
p4312
S'imputerConstructor'
p4313
g4313
S'if present, it constructs an imputer for unknown values'
p4314
I0
I0
I00
tp4315
a(S'TDomainContinuizer'
p4316
S'domainContinuizer'
p4317
g4317
S'if present, it constructs continuous domain if needed; if absent, default is used'
p4318
I0
I0
I00
tp4319
ag97
asbsS'TPreprocessor_takeMissing'
p4320
(i__main__
ClassDefinition
p4321
(dp4322
g4
I1
sg5
I01
sg6
g4320
sg7
S'TPreprocessor'
p4323
sg9
(lp4324
sg11
I00
sg12
(lp4325
sbsS'TMeasureAttribute_IM'
p4326
(i__main__
ClassDefinition
p4327
(dp4328
g4
I1
sg5
I01
sg6
g4326
sg7
S'TMeasureAttribute'
p4329
sg9
(lp4330
sg11
I00
sg12
(lp4331
(S'TIMConstructor'
p4332
S'IMconstructor'
p4333
g4333
S'incompatibility matrix constructor'
p4334
I0
I0
I00
tp4335
a(S'TColumnAssessor'
p4336
S'columnAssessor'
p4337
g4337
S'column quality assessor'
p4338
I0
I0
I00
tp4339
ag563
ag567
ag571
asbsS'TFeatureByDistributions'
p4340
(i__main__
ClassDefinition
p4341
(dp4342
g4
I1
sg5
I01
sg6
g4340
sg7
S'TFeatureInducer'
p4343
sg9
(lp4344
sg11
I00
sg12
(lp4345
(S'TClustersFromDistributions'
p4346
S'clustersFromDistributions'
p4347
g4347
S'clustering algorithm'
p4348
I0
I0
I00
tp4349
a(S'int'
p4350
S'completion'
p4351
g4351
S'decides how to determine the class for points not covered by any cluster'
p4352
I0
I0
I01
tp4353
asbsS'TCostMatrix'
p4354
(i__main__
ClassDefinition
p4355
(dp4356
g4
I1
sg5
I01
sg6
g4354
sg7
S'TOrange'
p4357
sg9
(lp4358
sg11
I00
sg12
(lp4359
(S'TVariable'
p4360
S'classVar'
p4361
g4361
S'attribute to which the matrix applies'
p4362
I0
I0
I00
tp4363
asbsS'TStopIMClusteringByAssessor_noProfit'
p4364
(i__main__
ClassDefinition
p4365
(dp4366
g4
I1
sg5
I01
sg6
g4364
sg7
S'TStopIMClusteringByAssessor'
p4367
sg9
(lp4368
sg11
I00
sg12
(lp4369
(S'float'
p4370
S'minProfitProportion'
p4371
g4371
S'minimal allowable profit proportion'
p4372
I0
I0
I01
tp4373
asbsS'TRemoveUnusedValues'
p4374
(i__main__
ClassDefinition
p4375
(dp4376
g4
I1
sg5
I01
sg6
g4374
sg7
S'TOrange'
p4377
sg9
(lp4378
sg11
I00
sg12
(lp4379
(S'bool'
p4380
S'removeOneValued'
p4381
g4381
S'if true (default is false), one valued attributes are also removed'
p4382
I0
I0
I01
tp4383
asbsS'TExamplesDistance_Normalized'
p4384
(i__main__
ClassDefinition
p4385
(dp4386
g4
I1
sg5
I01
sg6
g4384
sg7
S'TExamplesDistance'
p4387
sg9
(lp4388
sg11
I01
sg12
(lp4389
g327
ag331
ag335
ag339
ag343
ag347
ag351
asbsS'TExamplesDistance_Euclidean'
p4390
(i__main__
ClassDefinition
p4391
(dp4392
g4
I1
sg5
I01
sg6
g4390
sg7
S'TExamplesDistance_Normalized'
p4393
sg9
(lp4394
sg11
I00
sg12
(lp4395
(S'TDomainDistributions'
p4396
S'distributions'
p4397
g4397
S'distributions (of discrete attributes only)'
p4398
I0
I0
I00
tp4399
a(S'TAttributedFloatList'
p4400
S'bothSpecialDist'
p4401
g4401
S'distances between discrete attributes if both values are unknown'
p4402
I0
I0
I00
tp4403
ag327
ag331
ag335
ag339
ag343
ag347
ag351
asbsS'TPreprocessor_take'
p4404
(i__main__
ClassDefinition
p4405
(dp4406
g4
I1
sg5
I01
sg6
g4404
sg7
S'TPreprocessor'
p4407
sg9
(lp4408
sg11
I00
sg12
(lp4409
(S'TVariableFilterMap'
p4410
S'values'
p4411
g4411
S'variable-filter pairs'
p4412
I0
I0
I00
tp4413
a(S'bool'
p4414
S'conjunction'
p4415
g4415
S'decides whether to take conjunction or disjunction of values'
p4416
I0
I0
I01
tp4417
asbsS'TIMConstructor'
p4418
(i__main__
ClassDefinition
p4419
(dp4420
g4
I1
sg5
I01
sg6
g4418
sg7
S'TOrange'
p4421
sg9
(lp4422
sg11
I01
sg12
(lp4423
g848
asbsS'TRuleFinder_Python'
p4424
(i__main__
ClassDefinition
p4425
(dp4426
g4
I1
sg5
I01
sg6
g4424
sg7
S'TRuleFinder'
p4427
sg9
(lp4428
sg11
I00
sg12
(lp4429
g2996
ag2999
asbsS'TTabDelimExampleGenerator'
p4430
(i__main__
ClassDefinition
p4431
(dp4432
g4
I1
sg5
I01
sg6
g4430
sg7
S'TFileExampleGenerator'
p4433
sg9
(lp4434
sg11
I00
sg12
(lp4435
(S'TIntList'
p4436
S'attributeTypes'
p4437
g4437
S'types of attributes (-1 normal, 0 skip, <-1 = meta ID)'
p4438
I0
I0
I00
tp4439
a(S'int'
p4440
S'classPos'
p4441
g4441
S'position of the class attribute'
p4442
I0
I0
I01
tp4443
a(S'int'
p4444
S'headerLines'
p4445
g4445
S'number of header lines (3 for .tab, 1 for .txt)'
p4446
I0
I0
I01
tp4447
a(S'bool'
p4448
S'csv'
p4449
g4449
S"also allow ',' as a separator"
p4450
I0
I0
I01
tp4451
ag125
ag129
ag133
ag137
ag141
asbsS'TRandomClassifier'
p4452
(i__main__
ClassDefinition
p4453
(dp4454
g4
I1
sg5
I01
sg6
g4452
sg7
S'TClassifier'
p4455
sg9
(lp4456
sg11
I00
sg12
(lp4457
(S'TDistribution'
p4458
S'probabilities'
p4459
g4459
S'probabilities of predictions'
p4460
I0
I0
I00
tp4461
ag83
ag87
asbsS'TkNNLearner'
p4462
(i__main__
ClassDefinition
p4463
(dp4464
g4
I1
sg5
I01
sg6
g4462
sg7
S'TLearner'
p4465
sg9
(lp4466
sg11
I00
sg12
(lp4467
(S'float'
p4468
g814
g814
S'number of neighbours'
p4469
I0
I0
I01
tp4470
a(S'bool'
p4471
S'rankWeight'
p4472
g4472
S'enable weighting by ranks'
p4473
I0
I0
I01
tp4474
a(S'TExamplesDistanceConstructor'
p4475
S'distanceConstructor'
p4476
g4476
S'metrics'
p4477
I0
I0
I00
tp4478
ag97
asbsS'TTreeDescender_UnknownToNode'
p4479
(i__main__
ClassDefinition
p4480
(dp4481
g4
I1
sg5
I01
sg6
g4479
sg7
g1104
sg9
(lp4482
sg11
I0
sg12
(lp4483
sbsS'TDistributionAssessor_mf'
p4484
(i__main__
ClassDefinition
p4485
(dp4486
g4
I1
sg5
I01
sg6
g4484
sg7
S'TDistributionAssessor'
p4487
sg9
(lp4488
sg11
I00
sg12
(lp4489
(S'float'
p4490
g818
g818
S'm for m-estimate'
p4491
I0
I0
I01
tp4492
asbsS'TExampleClusters'
p4493
(i__main__
ClassDefinition
p4494
(dp4495
g4
I1
sg5
I01
sg6
g4493
sg7
S'TGeneralExampleClustering'
p4496
sg9
(lp4497
sg11
I00
sg12
(lp4498
(S'TExampleCluster'
p4499
S'root'
p4500
g4500
S'root of cluster hierarchy'
p4501
I0
I0
I00
tp4502
a(S'float'
p4503
S'quality'
p4504
g4504
S"'quality' of clustering"
p4505
I0
I0
I01
tp4506
asbsS'TCostLearner'
p4507
(i__main__
ClassDefinition
p4508
(dp4509
g4
I1
sg5
I01
sg6
g4507
sg7
S'TMajorityLearner'
p4510
sg9
(lp4511
sg11
I00
sg12
(lp4512
(S'TCostMatrix'
p4513
S'cost'
p4514
g4514
S'cost matrix'
p4515
I0
I0
I00
tp4516
ag519
ag523
ag97
asbsS'TEFMDataDescription'
p4517
(i__main__
ClassDefinition
p4518
(dp4519
g4
I1
sg5
I01
sg6
g4517
sg7
S'TOrange'
p4520
sg9
(lp4521
sg11
I00
sg12
(lp4522
(S'TDomain'
p4523
S'domain'
p4524
g4524
S'domain'
p4525
I01
I0
I00
tp4526
asbsS'TClassifierFD'
p4527
(i__main__
ClassDefinition
p4528
(dp4529
g4
I1
sg5
I01
sg6
g4527
sg7
S'TClassifier'
p4530
sg9
(lp4531
sg11
I00
sg12
(lp4532
g920
ag83
ag87
asbsS'TPreprocessor_drop'
p4533
(i__main__
ClassDefinition
p4534
(dp4535
g4
I1
sg5
I01
sg6
g4533
sg7
S'TPreprocessor'
p4536
sg9
(lp4537
sg11
I00
sg12
(lp4538
(S'TVariableFilterMap'
p4539
S'values'
p4540
g4540
S'variable-filter pairs'
p4541
I0
I0
I00
tp4542
a(S'bool'
p4543
S'conjunction'
p4544
g4544
S'decides whether to take conjunction or disjunction of values'
p4545
I0
I0
I01
tp4546
asbsS'TTreeDescender_UnknownToCommonBranch'
p4547
(i__main__
ClassDefinition
p4548
(dp4549
g4
I1
sg5
I01
sg6
g4547
sg7
g1104
sg9
(lp4550
sg11
I0
sg12
(lp4551
sbsS'TPreprocessor_addNoise'
p4552
(i__main__
ClassDefinition
p4553
(dp4554
g4
I1
sg5
I01
sg6
g4552
sg7
S'TPreprocessor'
p4555
sg9
(lp4556
sg11
I00
sg12
(lp4557
(S'TVariableFloatMap'
p4558
S'proportions'
p4559
g4559
S'proportion of changed values for individual attributes'
p4560
I0
I0
I00
tp4561
a(S'float'
p4562
S'defaultProportion'
p4563
g4563
S'default proportion of changed values (for attributes not specified above)'
p4564
I0
I0
I01
tp4565
a(S'TRandomGenerator'
p4566
S'randomGenerator'
p4567
g4567
S'random number generator'
p4568
I0
I0
I00
tp4569
asbsS'TStopIMClusteringByAssessor_binary'
p4570
(i__main__
ClassDefinition
p4571
(dp4572
g4
I1
sg5
I01
sg6
g4570
sg7
S'TStopIMClusteringByAssessor'
p4573
sg9
(lp4574
sg11
I00
sg12
(lp4575
sbsS'TColumnAssessor_mf'
p4576
(i__main__
ClassDefinition
p4577
(dp4578
g4
I1
sg5
I01
sg6
g4576
sg7
S'TColumnAssessor'
p4579
sg9
(lp4580
sg11
I00
sg12
(lp4581
(S'float'
p4582
g818
g818
S'm for m-estimate'
p4583
I0
I0
I01
tp4584
asbsS'TExamplesDistanceConstructor'
p4585
(i__main__
ClassDefinition
p4586
(dp4587
g4
I1
sg5
I01
sg6
g4585
sg7
S'TOrange'
p4588
sg9
(lp4589
sg11
I01
sg12
(lp4590
g1588
asbsS'TSubsetsGenerator'
p4591
(i__main__
ClassDefinition
p4592
(dp4593
g4
I1
sg5
I01
sg6
g4591
sg7
S'TOrange'
p4594
sg9
(lp4595
sg11
I01
sg12
(lp4596
g183
asbsS'TPreprocessor_addCensorWeight'
p4597
(i__main__
ClassDefinition
p4598
(dp4599
g4
I1
sg5
I01
sg6
g4597
sg7
S'TPreprocessor'
p4600
sg9
(lp4601
sg11
I00
sg12
(lp4602
(S'TVariable'
p4603
S'outcomeVar'
p4604
g4604
S'outcome variable'
p4605
I0
I0
I00
tp4606
a(S'TVariable'
p4607
S'timeVar'
p4608
g4608
S'time variable'
p4609
I0
I0
I00
tp4610
a(S'TValue'
p4611
S'eventValue'
p4612
g4612
S'event (fail) value'
p4613
I0
I0
I01
tp4614
a(S'int'
p4615
S'method'
p4616
g4616
S'weighting method'
p4617
I0
I0
I01
tp4618
a(S'float'
p4619
S'maxTime'
p4620
g4620
S'maximal time'
p4621
I0
I0
I01
tp4622
a(S'bool'
p4623
S'addComplementary'
p4624
g4624
S'if true (default is false), complementary examples are added for censored examples'
p4625
I0
I0
I01
tp4626
asbsS'TRuleBeamCandidateSelector_Python'
p4627
(i__main__
ClassDefinition
p4628
(dp4629
g4
I1
sg5
I01
sg6
g4627
sg7
S'TRuleBeamCandidateSelector'
p4630
sg9
(lp4631
sg11
I00
sg12
(lp4632
sbsS'TEntropyDiscretization'
p4633
(i__main__
ClassDefinition
p4634
(dp4635
g4
I1
sg5
I01
sg6
g4633
sg7
S'TDiscretization'
p4636
sg9
(lp4637
sg11
I00
sg12
(lp4638
(S'int'
p4639
S'maxNumberOfIntervals'
p4640
g4640
S'maximal number of intervals; default = 0 (no limits)'
p4641
I0
I0
I01
tp4642
a(S'bool'
p4643
S'forceAttribute'
p4644
g4644
S'minimal number of intervals; default = 0 (no limits)'
p4645
I0
I0
I01
tp4646
asbsS'TIMBySorting'
p4647
(i__main__
ClassDefinition
p4648
(dp4649
g4
I1
sg5
I01
sg6
g4647
sg7
S'TIMConstructor'
p4650
sg9
(lp4651
sg11
I00
sg12
(lp4652
g848
asbsS'TImputerConstructor_asValue'
p4653
(i__main__
ClassDefinition
p4654
(dp4655
g4
I1
sg5
I01
sg6
g4653
sg7
S'TImputerConstructor'
p4656
sg9
(lp4657
sg11
I00
sg12
(lp4658
g151
asbsS'TGaussianDistribution'
p4659
(i__main__
ClassDefinition
p4660
(dp4661
g4
I1
sg5
I01
sg6
g4659
sg7
S'TDistribution'
p4662
sg9
(lp4663
sg11
I00
sg12
(lp4664
(S'float'
p4665
S'mean'
p4666
g4666
S'mu'
p4667
I0
I0
I01
tp4668
a(S'float'
p4669
S'sigma'
p4670
g4670
S'sigma'
p4671
I0
I0
I01
tp4672
ag748
ag752
ag756
ag760
ag764
ag768
ag772
ag776
asbsS'TExampleDistVector'
p4673
(i__main__
ClassDefinition
p4674
(dp4675
g4
I1
sg5
I01
sg6
g4673
sg7
S'TOrange'
p4676
sg9
(lp4677
sg11
I00
sg12
(lp4678
sbsS'TRuleClassifier'
p4679
(i__main__
ClassDefinition
p4680
(dp4681
g4
I1
sg5
I01
sg6
g4679
sg7
S'TClassifier'
p4682
sg9
(lp4683
sg11
I01
sg12
(lp4684
g1426
ag1429
ag83
ag87
asbsS'TRuleBeamFilter_Width'
p4685
(i__main__
ClassDefinition
p4686
(dp4687
g4
I1
sg5
I01
sg6
g4685
sg7
S'TRuleBeamFilter'
p4688
sg9
(lp4689
sg11
I00
sg12
(lp4690
(S'int'
p4691
S'width'
p4692
g4692
g1425
I0
I0
I01
tp4693
asbsS'TProbabilityEstimator'
p4694
(i__main__
ClassDefinition
p4695
(dp4696
g4
I1
sg5
I01
sg6
g4694
sg7
S'TOrange'
p4697
sg9
(lp4698
sg11
I01
sg12
(lp4699
g1096
ag1100
asbsS'TIMClustering'
p4700
(i__main__
ClassDefinition
p4701
(dp4702
g4
I1
sg5
I01
sg6
g4700
sg7
S'TOrange'
p4703
sg9
(lp4704
sg11
I00
sg12
(lp4705
(S'TIM'
p4706
S'im'
p4707
g4707
S'incompatibilty matrix'
p4708
I0
I0
I00
tp4709
a(S'TIntList'
p4710
S'clusters'
p4711
g4711
S'cluster index for each matrix column'
p4712
I0
I0
I00
tp4713
a(S'int'
p4714
S'maxCluster'
p4715
g4715
S'the highest cluster index'
p4716
I0
I0
I01
tp4717
a(S'float'
p4718
S'quality'
p4719
g4719
S'cluster quality'
p4720
I0
I0
I01
tp4721
asbsS'TImputerConstructor_model'
p4722
(i__main__
ClassDefinition
p4723
(dp4724
g4
I1
sg5
I01
sg6
g4722
sg7
S'TImputerConstructor'
p4725
sg9
(lp4726
sg11
I00
sg12
(lp4727
(S'TLearner'
p4728
S'learnerDiscrete'
p4729
g4729
S'learner for discrete attributes'
p4730
I0
I0
I00
tp4731
a(S'TLearner'
p4732
S'learnerContinuous'
p4733
g4733
S'learner for continuous attributes'
p4734
I0
I0
I00
tp4735
a(S'bool'
p4736
S'useClass'
p4737
g4737
S'tells whether to use class value in imputation (default: false)'
p4738
I0
I0
I01
tp4739
ag151
asbsS'TFindNearestConstructor_BruteForce'
p4740
(i__main__
ClassDefinition
p4741
(dp4742
g4
I1
sg5
I01
sg6
g4740
sg7
S'TFindNearestConstructor'
p4743
sg9
(lp4744
sg11
I00
sg12
(lp4745
g1408
ag1412
asbsS'TImputerConstructor'
p4746
(i__main__
ClassDefinition
p4747
(dp4748
g4
I1
sg5
I01
sg6
g4746
sg7
S'TOrange'
p4749
sg9
(lp4750
sg11
I01
sg12
(lp4751
g151
asbsS'TPreprocessor'
p4752
(i__main__
ClassDefinition
p4753
(dp4754
g4
I1
sg5
I01
sg6
g4752
sg7
S'TOrange'
p4755
sg9
(lp4756
sg11
I01
sg12
(lp4757
sbsS'TMakeRandomIndices'
p4758
(i__main__
ClassDefinition
p4759
(dp4760
g4
I1
sg5
I01
sg6
g4758
sg7
S'TOrange'
p4761
sg9
(lp4762
sg11
I00
sg12
(lp4763
g459
ag463
ag467
asbsS'TDiscretizer'
p4764
(i__main__
ClassDefinition
p4765
(dp4766
g4
I1
sg5
I01
sg6
g4764
sg7
S'TTransformValue'
p4767
sg9
(lp4768
sg11
I01
sg12
(lp4769
g497
asbsS'TIMByRowsPreprocessor'
p4770
(i__main__
ClassDefinition
p4771
(dp4772
g4
I1
sg5
I01
sg6
g4770
sg7
S'TOrange'
p4773
sg9
(lp4774
sg11
I01
sg12
(lp4775
sbsS'TTreeStopCriteria_common'
p4776
(i__main__
ClassDefinition
p4777
(dp4778
g4
I1
sg5
I01
sg6
g4776
sg7
S'TTreeStopCriteria'
p4779
sg9
(lp4780
sg11
I00
sg12
(lp4781
(S'float'
p4782
S'maxMajority'
p4783
g4783
S'a maximal proportion of majority class for division to continue'
p4784
I0
I0
I01
tp4785
a(S'float'
p4786
S'minExamples'
p4787
g4787
S'a minimal number of examples for division to continue'
p4788
I0
I0
I01
tp4789
asbsS'TRetisExampleGenerator'
p4790
(i__main__
ClassDefinition
p4791
(dp4792
g4
I1
sg5
I01
sg6
g4790
sg7
S'TFileExampleGenerator'
p4793
sg9
(lp4794
sg11
I00
sg12
(lp4795
g125
ag129
ag133
ag137
ag141
asbsS'TTreeStopCriteria_Python'
p4796
(i__main__
ClassDefinition
p4797
(dp4798
g4
I1
sg5
I01
sg6
g4796
sg7
S'TTreeStopCriteria'
p4799
sg9
(lp4800
sg11
I00
sg12
(lp4801
sbsS'TGeneralExampleClustering'
p4802
(i__main__
ClassDefinition
p4803
(dp4804
g4
I1
sg5
I01
sg6
g4802
sg7
S'TOrange'
p4805
sg9
(lp4806
sg11
I01
sg12
(lp4807
sbsS'TIGByIM'
p4808
(i__main__
ClassDefinition
p4809
(dp4810
g4
I1
sg5
I01
sg6
g4808
sg7
S'TIGConstructor'
p4811
sg9
(lp4812
sg11
I00
sg12
(lp4813
(S'TIMConstructor'
p4814
S'IMconstructor'
p4815
g4815
S'IM constructor'
p4816
I0
I0
I00
tp4817
asbs.