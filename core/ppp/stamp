(dp0
S'TComputeDomainContingency_ImputeWithClassifier'
p1
(i__main__
ClassDefinition
p2
(dp3
S'extended'
p4
I1
sS'imported'
p5
I01
sS'name'
p6
g1
sS'parent'
p7
S'TComputeDomainContingency'
p8
sS'components'
p9
(lp10
sS'abstract'
p11
I00
sS'properties'
p12
(lp13
(S'TLearner'
p14
S'learnerForDiscrete'
p15
g15
S'constructs a classifier for imputation of discrete values'
p16
I0
I0
I00
tp17
a(S'TLearner'
p18
S'learnerForContinuous'
p19
g19
S'constructs a classifier for imputation of continuous values'
p20
I0
I0
I00
tp21
a(S'bool'
p22
S'classIsOuter'
p23
g23
S'tells whether the class is the outer variable in contingencies'
p24
I0
I0
I01
tp25
asbsS'TRuleDataStoppingCriteria_NoPositives'
p26
(i__main__
ClassDefinition
p27
(dp28
g4
I1
sg5
I01
sg6
g26
sg7
S'TRuleDataStoppingCriteria'
p29
sg9
(lp30
sg11
I00
sg12
(lp31
sbsS'TExampleCluster'
p32
(i__main__
ClassDefinition
p33
(dp34
g4
I1
sg5
I01
sg6
g32
sg7
S'TOrange'
p35
sg9
(lp36
sg11
I00
sg12
(lp37
(S'TExampleCluster'
p38
S'left'
p39
g39
S"'left' cluster"
p40
I0
I0
I00
tp41
a(S'TExampleCluster'
p42
S'right'
p43
g43
S"'right' cluster"
p44
I0
I0
I00
tp45
a(S'float'
p46
S'distance'
p47
g47
S'distance between the two clusters (not defined for leaves)'
p48
I0
I0
I01
tp49
a(S'TExample'
p50
S'centroid'
p51
g51
S"cluster's centroid (always defined for leaves)"
p52
I0
I0
I00
tp53
asbsS'TClassifierByLookupTableN'
p54
(i__main__
ClassDefinition
p55
(dp56
g4
I1
sg5
I01
sg6
g54
sg7
S'TClassifierByLookupTable'
p57
sg9
(lp58
sg11
I00
sg12
(lp59
(S'TVarList'
p60
S'variables'
p61
g61
S'attributes'
p62
I01
I0
I00
tp63
a(S'TIntList'
p64
S'noOfValues'
p65
g65
S'number of values for each attribute'
p66
I01
I0
I00
tp67
a(S'TEFMDataDescription'
p68
S'dataDescription'
p69
g69
S'data description'
p70
I0
I0
I00
tp71
a(S'TValueList'
p72
S'lookupTable'
p73
g73
S'a list of class values, one for each attribute value'
p74
I01
I0
I00
tp75
a(S'TDistributionList'
p76
S'distributions'
p77
g77
S'a list of class distributions, one for each attribute value'
p78
I01
I0
I00
tp79
a(S'TVariable'
p80
S'classVar'
p81
g81
S'class variable'
p82
I0
I0
I00
tp83
a(S'bool'
p84
S'computesProbabilities'
p85
g85
S'set if classifier computes class probabilities (if not, it assigns 1.0 to the predicted)'
p86
I0
I0
I01
tp87
asbsS'TLearner_Python'
p88
(i__main__
ClassDefinition
p89
(dp90
g4
I1
sg5
I01
sg6
g88
sg7
S'TLearner'
p91
sg9
(lp92
sg11
I00
sg12
(lp93
(S'int'
p94
S'needs'
p95
g95
S'the kind of data that learner needs'
p96
I01
I0
I01
tp97
asbsS'TConditionalProbabilityEstimator_FromDistribution'
p98
(i__main__
ClassDefinition
p99
(dp100
g4
I1
sg5
I01
sg6
g98
sg7
S'TConditionalProbabilityEstimator'
p101
sg9
(lp102
sg11
I00
sg12
(lp103
(S'TContingency'
p104
S'probabilities'
p105
g105
S'Contingency that stores conditional probabilities'
p106
I0
I0
I00
tp107
a(S'bool'
p108
S'supportsDiscrete'
p109
g109
S'can estimate probabilities of discrete attributes'
p110
I01
I0
I01
tp111
a(S'bool'
p112
S'supportsContinuous'
p113
g113
S'can estimate probabilities of continuous attributes'
p114
I01
I0
I01
tp115
asbsS'TAssistantExampleGenerator'
p116
(i__main__
ClassDefinition
p117
(dp118
g4
I1
sg5
I01
sg6
g116
sg7
S'TFileExampleGenerator'
p119
sg9
(lp120
sg11
I00
sg12
(lp121
(S'string'
p122
S'filename'
p123
g123
S'filename'
p124
I0
I0
I01
tp125
a(S'int'
p126
S'startDataPos'
p127
g127
S'starting position of the data in file'
p128
I0
I0
I01
tp129
a(S'int'
p130
S'startDataLine'
p131
g131
S'line in the file where the data starts'
p132
I0
I0
I01
tp133
a(S'TDomain'
p134
S'domain'
p135
g135
S'domain'
p136
I0
I0
I00
tp137
a(S'int'
p138
S'version'
p139
g139
S'unique version identifier'
p140
I01
I0
I01
tp141
asbsS'TImputerConstruct_Python'
p142
(i__main__
ClassDefinition
p143
(dp144
g4
I1
sg5
I01
sg6
g142
sg7
S'TImputerConstructor'
p145
sg9
(lp146
sg11
I00
sg12
(lp147
(S'bool'
p148
S'imputeClass'
p149
g149
S'tells whether to impute the class value (default: true)'
p150
I0
I0
I01
tp151
asbsS'TIMByRowsConstructor'
p152
(i__main__
ClassDefinition
p153
(dp154
g4
I1
sg5
I01
sg6
g152
sg7
S'TOrange'
p155
sg9
(lp156
sg11
I01
sg12
(lp157
sbsS'TSubsetsGenerator_withRestrictions'
p158
(i__main__
ClassDefinition
p159
(dp160
g4
I1
sg5
I01
sg6
g158
sg7
S'TSubsetsGenerator'
p161
sg9
(lp162
sg11
I00
sg12
(lp163
(S'TSubsetsGenerator'
p164
S'subGenerator'
p165
g165
S'subset generator'
p166
I0
I0
I00
tp167
a(S'TVarList'
p168
S'required'
p169
g169
S'set of required attributes'
p170
I0
I0
I00
tp171
a(S'TVarList'
p172
S'forbidden'
p173
g173
S'set of forbidden attributes'
p174
I0
I0
I00
tp175
a(S'TVarListList'
p176
S'forbiddenSubSubsets'
p177
g177
S'set of forbidden subsets (attributes that must not occur together)'
p178
I0
I0
I00
tp179
a(S'TVarList'
p180
S'varList'
p181
g181
S'a set of attributes from which subsets are generated'
p182
I0
I0
I00
tp183
asbsS'TRuleBeamFilter_Python'
p184
(i__main__
ClassDefinition
p185
(dp186
g4
I1
sg5
I01
sg6
g184
sg7
S'TRuleBeamFilter'
p187
sg9
(lp188
sg11
I00
sg12
(lp189
sbsS'TTreeExampleSplitter'
p190
(i__main__
ClassDefinition
p191
(dp192
g4
I1
sg5
I01
sg6
g190
sg7
S'TOrange'
p193
sg9
(lp194
sg11
I01
sg12
(lp195
sbsS'TSVMClassifier'
p196
(i__main__
ClassDefinition
p197
(dp198
g4
I1
sg5
I01
sg6
g196
sg7
S'TClassifierFD'
p199
sg9
(lp200
sg11
I00
sg12
(lp201
(S'TDomain'
p202
S'domain'
p203
g203
S'domain'
p204
I0
I0
I00
tp205
ag83
ag87
asbsS'TFilteredGenerator'
p206
(i__main__
ClassDefinition
p207
(dp208
g4
I1
sg5
I01
sg6
g206
sg7
S'TAdapterGenerator'
p209
sg9
(lp210
sg11
I00
sg12
(lp211
(S'TFilter'
p212
S'filter'
p213
g213
S'decides which examples are skipped'
p214
I0
I0
I00
tp215
ag137
ag141
asbsS'TPythonVariable'
p216
(i__main__
ClassDefinition
p217
(dp218
g4
I1
sg5
I01
sg6
g216
sg7
S'TVariable'
p219
sg9
(lp220
sg11
I00
sg12
(lp221
(S'bool'
p222
S'usePickle'
p223
g223
S'tells whether to use pickle for saving to/loading from files'
p224
I0
I0
I01
tp225
a(S'bool'
p226
S'useSomeValue'
p227
g227
S'tells whether the Variable will operate on Value or SomeValue (default)'
p228
I0
I0
I01
tp229
a(S'string'
p230
S'name'
p231
g231
S"variable's name"
p232
I0
I0
I01
tp233
a(S'int'
p234
S'varType'
p235
g235
S'variable type'
p236
I0
I0
I01
tp237
a(S'bool'
p238
S'ordered'
p239
g239
S'variable values are ordered'
p240
I0
I0
I01
tp241
a(S'bool'
p242
S'distributed'
p243
g243
S'variable values are distributions'
p244
I0
I0
I01
tp245
a(S'TRandomGenerator'
p246
S'randomGenerator'
p247
g247
S'random generator for random values (initialized when first needed)'
p248
I0
I0
I00
tp249
a(S'TVariable'
p250
S'sourceVariable'
p251
g251
S'The attribute that this attribute is computed from (when applicable)'
p252
I0
I0
I00
tp253
a(S'TClassifier'
p254
S'getValueFrom'
p255
g255
S'Function to compute the value from values of other variables'
p256
I0
I0
I00
tp257
asbsS'TTreeLearner'
p258
(i__main__
ClassDefinition
p259
(dp260
g4
I1
sg5
I01
sg6
g258
sg7
S'TLearner'
p261
sg9
(lp262
sg11
I00
sg12
(lp263
(S'TTreeSplitConstructor'
p264
S'split'
p265
g265
S'split criterion'
p266
I0
I0
I00
tp267
a(S'TTreeStopCriteria'
p268
S'stop'
p269
g269
S'stop criterion'
p270
I0
I0
I00
tp271
a(S'TComputeDomainContingency'
p272
S'contingencyComputer'
p273
g273
S'computes contingency matrix'
p274
I0
I0
I00
tp275
a(S'TLearner'
p276
S'nodeLearner'
p277
g277
S'node learner'
p278
I0
I0
I00
tp279
a(S'TTreeExampleSplitter'
p280
S'exampleSplitter'
p281
g281
S'splits examples to branches'
p282
I0
I0
I00
tp283
a(S'int'
p284
S'maxDepth'
p285
g285
S'maximal tree depth (0 = root only, -1 = no limit)'
p286
I0
I0
I01
tp287
a(S'bool'
p288
S'storeExamples'
p289
g289
S'if true (default: false), learning examples in nodes are stored'
p290
I0
I0
I01
tp291
a(S'bool'
p292
S'storeDistributions'
p293
g293
S'if true (default), class distributions of learning examples in nodes are stored'
p294
I0
I0
I01
tp295
a(S'bool'
p296
S'storeContingencies'
p297
g297
S'if true (default), contingency matrices for examples are stored'
p298
I0
I0
I01
tp299
a(S'bool'
p300
S'storeNodeClassifier'
p301
g301
S'if true (default), the internal nodes have classifiers; needed for pruning'
p302
I0
I0
I01
tp303
a(S'TTreeDescender'
p304
S'descender'
p305
g305
S'descends down the tree'
p306
I0
I0
I00
tp307
ag97
asbsS'TLearner'
p308
(i__main__
ClassDefinition
p309
(dp310
g4
I1
sg5
I01
sg6
g308
sg7
S'TOrange'
p311
sg9
(lp312
sg11
I00
sg12
(lp313
g97
asbsS'TExamplesDistance_Maximal'
p314
(i__main__
ClassDefinition
p315
(dp316
g4
I1
sg5
I01
sg6
g314
sg7
S'TExamplesDistance_Normalized'
p317
sg9
(lp318
sg11
I00
sg12
(lp319
(S'TAttributedFloatList'
p320
S'normalizers'
p321
g321
S'normalizing factors for attributes'
p322
I0
I0
I00
tp323
a(S'TAttributedFloatList'
p324
S'bases'
p325
g325
S'lowest values for attributes'
p326
I0
I0
I00
tp327
a(S'TAttributedFloatList'
p328
S'averages'
p329
g329
S'average values for continuous attribute values'
p330
I0
I0
I00
tp331
a(S'TAttributedFloatList'
p332
S'variances'
p333
g333
S'variations for continuous attribute values'
p334
I0
I0
I00
tp335
a(S'int'
p336
S'domainVersion'
p337
g337
S'version of domain on which the ranges were computed'
p338
I0
I0
I01
tp339
a(S'bool'
p340
S'normalize'
p341
g341
S'tells whether to normalize distances between attributes'
p342
I0
I0
I01
tp343
a(S'bool'
p344
S'ignoreUnknowns'
p345
g345
S'if true (default: false) unknown values are ignored in computation'
p346
I0
I0
I01
tp347
asbsS'TPreprocessor_discretize'
p348
(i__main__
ClassDefinition
p349
(dp350
g4
I1
sg5
I01
sg6
g348
sg7
S'TPreprocessor'
p351
sg9
(lp352
sg11
I00
sg12
(lp353
(S'TVarList'
p354
S'attributes'
p355
g355
S'attributes to be discretized (all, if not defined or empty)'
p356
I0
I0
I00
tp357
a(S'bool'
p358
S'discretizeClass'
p359
g359
S'also discretize the class attribute (default: false)'
p360
I0
I0
I01
tp361
a(S'TDiscretization'
p362
S'method'
p363
g363
S'discretization method'
p364
I0
I0
I00
tp365
asbsS'TProgressCallback_Python'
p366
(i__main__
ClassDefinition
p367
(dp368
g4
I1
sg5
I01
sg6
g366
sg7
S'TProgressCallback'
p369
sg9
(lp370
sg11
I00
sg12
(lp371
sbsS'TImputeClassifier'
p372
(i__main__
ClassDefinition
p373
(dp374
g4
I1
sg5
I01
sg6
g372
sg7
S'TClassifier'
p375
sg9
(lp376
sg11
I00
sg12
(lp377
(S'TClassifierFromVar'
p378
S'classifierFromVar'
p379
g379
S'ClassifierFromVar that is used to retrieve defined values'
p380
I0
I0
I00
tp381
a(S'TClassifier'
p382
S'imputer'
p383
g383
S'classifier that is used to determine the missing values '
p384
I0
I0
I00
tp385
ag83
ag87
asbsS'TRuleCovererAndRemover'
p386
(i__main__
ClassDefinition
p387
(dp388
g4
I1
sg5
I01
sg6
g386
sg7
S'TOrange'
p389
sg9
(lp390
sg11
I01
sg12
(lp391
sbsS'TPythonValue'
p392
(i__main__
ClassDefinition
p393
(dp394
g4
I1
sg5
I01
sg6
g392
sg7
S'TSomeValue'
p395
sg9
(lp396
sg11
I00
sg12
(lp397
sbsS'TAssociationRulesSparseInducer'
p398
(i__main__
ClassDefinition
p399
(dp400
g4
I1
sg5
I01
sg6
g398
sg7
S'TOrange'
p401
sg9
(lp402
sg11
I00
sg12
(lp403
(S'int'
p404
S'maxItemSets'
p405
g405
S'maximal number of itemsets (increase if you want)'
p406
I0
I0
I01
tp407
a(S'float'
p408
S'confidence'
p409
g409
S'required confidence'
p410
I0
I0
I01
tp411
a(S'float'
p412
S'support'
p413
g413
S'required support'
p414
I0
I0
I01
tp415
asbsS'TFilter_sameExample'
p416
(i__main__
ClassDefinition
p417
(dp418
g4
I1
sg5
I01
sg6
g416
sg7
S'TFilter'
p419
sg9
(lp420
sg11
I00
sg12
(lp421
(S'TExample'
p422
S'example'
p423
g423
S'example with which examples are compared'
p424
I0
I0
I00
tp425
a(S'bool'
p426
S'negate'
p427
g427
S'if true, filter output should be negated.'
p428
I0
I0
I01
tp429
a(S'TDomain'
p430
S'domain'
p431
g431
S'domain to which the examples are converted (if needed)'
p432
I0
I0
I00
tp433
asbsS'TRuleClassifierConstructor'
p434
(i__main__
ClassDefinition
p435
(dp436
g4
I1
sg5
I01
sg6
g434
sg7
S'TOrange'
p437
sg9
(lp438
sg11
I01
sg12
(lp439
sbsS'TKaplanMeier'
p440
(i__main__
ClassDefinition
p441
(dp442
g4
I1
sg5
I01
sg6
g440
sg7
S'TOrange'
p443
sg9
(lp444
sg11
I00
sg12
(lp445
sbsS'TMakeRandomIndicesMultiple'
p446
(i__main__
ClassDefinition
p447
(dp448
g4
I1
sg5
I01
sg6
g446
sg7
S'TMakeRandomIndices'
p449
sg9
(lp450
sg11
I00
sg12
(lp451
(S'int'
p452
S'stratified'
p453
g453
S'requests stratified distributions'
p454
I0
I0
I01
tp455
a(S'int'
p456
S'randseed'
p457
g457
S'a seed for random generator'
p458
I0
I0
I01
tp459
a(S'TRandomGenerator'
p460
S'randomGenerator'
p461
g461
S'a random generator'
p462
I0
I0
I00
tp463
asbsS'TLearnerFD'
p464
(i__main__
ClassDefinition
p465
(dp466
g4
I1
sg5
I01
sg6
g464
sg7
S'TLearner'
p467
sg9
(lp468
sg11
I00
sg12
(lp469
(S'TDomain'
p470
S'domain'
p471
g471
S'domain'
p472
I0
I0
I00
tp473
ag97
asbsS'TFeatureInducer'
p474
(i__main__
ClassDefinition
p475
(dp476
g4
I1
sg5
I01
sg6
g474
sg7
S'TOrange'
p477
sg9
(lp478
sg11
I01
sg12
(lp479
sbsS'TMapIntValue'
p480
(i__main__
ClassDefinition
p481
(dp482
g4
I1
sg5
I01
sg6
g480
sg7
S'TTransformValue'
p483
sg9
(lp484
sg11
I00
sg12
(lp485
(S'TIntList'
p486
S'mapping'
p487
g487
S'a lookup table'
p488
I0
I0
I00
tp489
a(S'TTransformValue'
p490
S'subTransform'
p491
g491
S'transformation executed prior to this'
p492
I0
I0
I00
tp493
asbsS'TDistributionAssessor_Kramer'
p494
(i__main__
ClassDefinition
p495
(dp496
g4
I1
sg5
I01
sg6
g494
sg7
S'TDistributionAssessor'
p497
sg9
(lp498
sg11
I00
sg12
(lp499
sbsS'TTreeExampleSplitter_UnknownsToBranch'
p500
(i__main__
ClassDefinition
p501
(dp502
g4
I1
sg5
I01
sg6
g500
sg7
S'TTreeExampleSplitter'
p503
sg9
(lp504
sg11
I00
sg12
(lp505
sbsS'TMajorityLearner'
p506
(i__main__
ClassDefinition
p507
(dp508
g4
I1
sg5
I01
sg6
g506
sg7
S'TLearner'
p509
sg9
(lp510
sg11
I00
sg12
(lp511
(S'TProbabilityEstimatorConstructor'
p512
S'estimatorConstructor'
p513
g513
S'constructs probability estimator'
p514
I0
I0
I00
tp515
a(S'TDistribution'
p516
S'aprioriDistribution'
p517
g517
S'apriori class distribution'
p518
I0
I0
I00
tp519
ag97
asbsS'TFeatureByIM'
p520
(i__main__
ClassDefinition
p521
(dp522
g4
I1
sg5
I01
sg6
g520
sg7
S'TFeatureInducer'
p523
sg9
(lp524
sg11
I00
sg12
(lp525
(S'TIMConstructor'
p526
S'IMconstructor'
p527
g527
S'incompatibility matrix constructor'
p528
I0
I0
I00
tp529
a(S'TClustersFromIM'
p530
S'clustersFromIM'
p531
g531
S'clustering algorithm'
p532
I0
I0
I00
tp533
a(S'int'
p534
S'completion'
p535
g535
S'decides how to determine the class for points not covered by any cluster'
p536
I0
I0
I01
tp537
asbsS'TMeasureAttributeFromProbabilities'
p538
(i__main__
ClassDefinition
p539
(dp540
g4
I1
sg5
I01
sg6
g538
sg7
S'TMeasureAttribute'
p541
sg9
(lp542
sg11
I01
sg12
(lp543
(S'TProbabilityEstimatorConstructor'
p544
S'estimatorConstructor'
p545
g545
S'probability estimator (none by default)'
p546
I0
I0
I00
tp547
a(S'TConditionalProbabilityEstimatorConstructor'
p548
S'conditionalEstimatorConstructor'
p549
g549
S'conditional probability estimator (none by default)'
p550
I0
I0
I00
tp551
a(S'int'
p552
S'unknownsTreatment'
p553
g553
S'treatment of unknown values'
p554
I0
I0
I01
tp555
a(S'int'
p556
S'needs'
p557
g557
S'describes what kind of data is needed for computation'
p558
I0
I0
I01
tp559
a(S'bool'
p560
S'handlesDiscrete'
p561
g561
S'tells whether the measure can handle discrete attributes'
p562
I01
I0
I01
tp563
a(S'bool'
p564
S'handlesContinuous'
p565
g565
S'tells whether the measure can handle continuous attributes'
p566
I01
I0
I01
tp567
asbsS'TProbabilityEstimatorConstructor_relative'
p568
(i__main__
ClassDefinition
p569
(dp570
g4
I1
sg5
I01
sg6
g568
sg7
S'TProbabilityEstimatorConstructor'
p571
sg9
(lp572
sg11
I00
sg12
(lp573
sbsS'TClassifierByLookupTable3'
p574
(i__main__
ClassDefinition
p575
(dp576
g4
I1
sg5
I01
sg6
g574
sg7
S'TClassifierByLookupTable'
p577
sg9
(lp578
sg11
I00
sg12
(lp579
(S'TVariable'
p580
S'variable1'
p581
g581
S'the first attribute used for classification'
p582
I01
I0
I00
tp583
a(S'TVariable'
p584
S'variable2'
p585
g585
S'the second attribute used for classification'
p586
I01
I0
I00
tp587
a(S'TVariable'
p588
S'variable3'
p589
g589
S'the third attribute used for classification'
p590
I01
I0
I00
tp591
a(S'int'
p592
S'noOfValues1'
p593
g593
S'number of values of the first attribute'
p594
I01
I0
I01
tp595
a(S'int'
p596
S'noOfValues2'
p597
g597
S'number of values of the second attribute'
p598
I01
I0
I01
tp599
a(S'int'
p600
S'noOfValues3'
p601
g601
S'number of values of the third attribute'
p602
I01
I0
I01
tp603
a(S'TEFMDataDescription'
p604
S'dataDescription'
p605
g605
S'data description'
p606
I0
I0
I00
tp607
ag75
ag79
ag83
ag87
asbsS'TImputerConstructor_maximal'
p608
(i__main__
ClassDefinition
p609
(dp610
g4
I1
sg5
I01
sg6
g608
sg7
S'TImputerConstructor'
p611
sg9
(lp612
sg11
I00
sg12
(lp613
g151
asbsS'TRuleBeamRefiner'
p614
(i__main__
ClassDefinition
p615
(dp616
g4
I1
sg5
I01
sg6
g614
sg7
S'TOrange'
p617
sg9
(lp618
sg11
I01
sg12
(lp619
sbsS'TEquiDistDiscretizer'
p620
(i__main__
ClassDefinition
p621
(dp622
g4
I1
sg5
I01
sg6
g620
sg7
S'TDiscretizer'
p623
sg9
(lp624
sg11
I00
sg12
(lp625
(S'int'
p626
S'numberOfIntervals'
p627
g627
S'number of intervals'
p628
I0
I0
I01
tp629
a(S'float'
p630
S'firstCut'
p631
g631
S'the first cut-off point'
p632
I0
I0
I01
tp633
a(S'float'
p634
S'step'
p635
g635
S'step (width of interval)'
p636
I0
I0
I01
tp637
ag493
asbsS'TValueFilter_string'
p638
(i__main__
ClassDefinition
p639
(dp640
g4
I1
sg5
I01
sg6
g638
sg7
S'TValueFilter'
p641
sg9
(lp642
sg11
I00
sg12
(lp643
(S'string'
p644
S'min'
p645
(g645
S'ref'
p646
tp647
S' reference value (lower bound for interval operators)'
p648
I0
I0
I01
tp649
a(S'string'
p650
S'max'
p651
g651
S'upper bound for interval operators'
p652
I0
I0
I01
tp653
a(S'int'
p654
S'oper'
p655
g655
S'operator'
p656
I0
I0
I01
tp657
a(S'bool'
p658
S'caseSensitive'
p659
g659
S'if true (default), the operator is case sensitive'
p660
I0
I0
I01
tp661
a(S'int'
p662
S'position'
p663
g663
S"attribute's position in domain"
p664
I0
I0
I01
tp665
a(S'int'
p666
S'acceptSpecial'
p667
g667
S'tells whether a special value (DK, DC...) is accepted (1), rejected (0) or ignored (-1)'
p668
I0
I0
I01
tp669
asbsS'TFindNearest_BruteForce'
p670
(i__main__
ClassDefinition
p671
(dp672
g4
I1
sg5
I01
sg6
g670
sg7
S'TFindNearest'
p673
sg9
(lp674
sg11
I00
sg12
(lp675
(S'TExamplesDistance'
p676
S'distance'
p677
g677
S'metrics'
p678
I0
I0
I00
tp679
a(S'TExampleGenerator'
p680
S'examples'
p681
g681
S'a list of stored examples'
p682
I0
I0
I00
tp683
a(S'int'
p684
S'weightID'
p685
g685
S'weight to use when counting examples'
p686
I0
I0
I01
tp687
a(S'int'
p688
S'distanceID'
p689
g689
S'id of meta attribute where the distance should be stored (0 = no storing)'
p690
I0
I0
I01
tp691
a(S'bool'
p692
S'includeSame'
p693
g693
S'tells whether to include examples that are same as the reference example'
p694
I0
I0
I01
tp695
asbsS'TRuleBeamInitializer'
p696
(i__main__
ClassDefinition
p697
(dp698
g4
I1
sg5
I01
sg6
g696
sg7
S'TOrange'
p699
sg9
(lp700
sg11
I01
sg12
(lp701
sbsS'TMeasureAttribute_relevance'
p702
(i__main__
ClassDefinition
p703
(dp704
g4
I1
sg5
I01
sg6
g702
sg7
S'TMeasureAttributeFromProbabilities'
p705
sg9
(lp706
sg11
I00
sg12
(lp707
g547
ag551
ag555
ag559
ag563
ag567
asbsS'TFilter_hasSpecial'
p708
(i__main__
ClassDefinition
p709
(dp710
g4
I1
sg5
I01
sg6
g708
sg7
S'TFilter'
p711
sg9
(lp712
sg11
I00
sg12
(lp713
g429
ag433
asbsS'TDiscDistribution'
p714
(i__main__
ClassDefinition
p715
(dp716
g4
I1
sg5
I01
sg6
g714
sg7
S'TDistribution'
p717
sg9
(lp718
sg11
I00
sg12
(lp719
(S'TFloatList'
p720
S'variances'
p721
g721
S'variances'
p722
I0
I0
I00
tp723
a(S'TVariable'
p724
S'variable'
p725
g725
S'attribute descriptor (optional)'
p726
I0
I0
I00
tp727
a(S'float'
p728
S'unknowns'
p729
g729
S'number of unknown values'
p730
I0
I0
I01
tp731
a(S'float'
p732
S'abs'
p733
g733
S'sum of frequencies (not including unknown values!)'
p734
I0
I0
I01
tp735
a(S'float'
p736
S'cases'
p737
g737
S"number of cases; as abs, but doesn't change at *= and normalize()"
p738
I0
I0
I01
tp739
a(S'bool'
p740
S'normalized'
p741
g741
S'distribution is normalized'
p742
I0
I0
I01
tp743
a(S'bool'
p744
S'supportsDiscrete'
p745
g745
S'distribution supports discrete interface'
p746
I01
I0
I01
tp747
a(S'bool'
p748
S'supportsContinuous'
p749
g749
S'distribution supports continuous interface'
p750
I01
I0
I01
tp751
a(S'TRandomGenerator'
p752
S'randomGenerator'
p753
g753
S'random generator; initialized when needed, if not given earlier'
p754
I0
I0
I00
tp755
asbsS'TBayesLearner'
p756
(i__main__
ClassDefinition
p757
(dp758
g4
I1
sg5
I01
sg6
g756
sg7
S'TLearner'
p759
sg9
(lp760
sg11
I00
sg12
(lp761
(S'TProbabilityEstimatorConstructor'
p762
S'estimatorConstructor'
p763
g763
S'constructs a probability estimator for P(C)'
p764
I0
I0
I00
tp765
a(S'TConditionalProbabilityEstimatorConstructor'
p766
S'conditionalEstimatorConstructor'
p767
g767
S'constructs a probability estimator for P(C|A) '
p768
I0
I0
I00
tp769
a(S'TConditionalProbabilityEstimatorConstructor'
p770
S'conditionalEstimatorConstructorContinuous'
p771
g771
S'constructs a probability estimator for P(C|A) for continuous attributes'
p772
I0
I0
I00
tp773
a(S'bool'
p774
S'normalizePredictions'
p775
g775
S'instructs learner to construct a classifier that normalizes probabilities'
p776
I0
I0
I01
tp777
a(S'bool'
p778
S'adjustThreshold'
p779
g779
S'adjust probability thresholds (for binary classes only)'
p780
I0
I0
I01
tp781
ag97
asbsS'TIMByRelief'
p782
(i__main__
ClassDefinition
p783
(dp784
g4
I1
sg5
I01
sg6
g782
sg7
S'TIMConstructor'
p785
sg9
(lp786
sg11
I00
sg12
(lp787
(S'TExamplesDistance_Relief'
p788
S'distance'
p789
g789
S'distance measure'
p790
I0
I0
I00
tp791
a(S'float'
p792
S'k'
p793
g793
S'number of neighbours'
p794
I0
I0
I01
tp795
a(S'float'
p796
S'm'
p797
g797
S'number of reference examples'
p798
I0
I0
I01
tp799
a(S'float'
p800
S'kFromColumns'
p801
g801
S'if positive, number of neighbours is #columns*kFromColumns'
p802
I0
I0
I01
tp803
a(S'bool'
p804
S'ignoreSameExample'
p805
g805
S'does not put reference example into M'
p806
I0
I0
I01
tp807
a(S'bool'
p808
S'convertToBinary'
p809
g809
S'convert to binary class (hit-miss)'
p810
I0
I0
I01
tp811
a(S'bool'
p812
S'correctClassFirst'
p813
g813
S'puts the correct class proportion to the first place'
p814
I0
I0
I01
tp815
a(S'bool'
p816
S'allExamples'
p817
g817
S'uses all examples for reference examples'
p818
I0
I0
I01
tp819
a(S'bool'
p820
S'allSameNeighbours'
p821
g821
S'uses all the examples same to the reference as neighbours'
p822
I0
I0
I01
tp823
a(S'bool'
p824
S'recordRowExamples'
p825
g825
S'enables creation of rowExample list'
p826
I0
I0
I01
tp827
asbsS'TConditionalProbabilityEstimator'
p828
(i__main__
ClassDefinition
p829
(dp830
g4
I1
sg5
I01
sg6
g828
sg7
S'TOrange'
p831
sg9
(lp832
sg11
I01
sg12
(lp833
g111
ag115
asbsS'TColumnAssessor_Laplace'
p834
(i__main__
ClassDefinition
p835
(dp836
g4
I1
sg5
I01
sg6
g834
sg7
S'TColumnAssessor'
p837
sg9
(lp838
sg11
I00
sg12
(lp839
sbsS'TPreprocessor_addGaussianNoise'
p840
(i__main__
ClassDefinition
p841
(dp842
g4
I1
sg5
I01
sg6
g840
sg7
S'TPreprocessor'
p843
sg9
(lp844
sg11
I00
sg12
(lp845
(S'TVariableFloatMap'
p846
S'deviations'
p847
g847
S'deviations individual attribute values'
p848
I0
I0
I00
tp849
a(S'float'
p850
S'defaultDeviation'
p851
g851
S'default deviation'
p852
I0
I0
I01
tp853
a(S'TRandomGenerator'
p854
S'randomGenerator'
p855
g855
S'random number generator'
p856
I0
I0
I00
tp857
asbsS'TRuleStoppingCriteria_NegativeDistribution'
p858
(i__main__
ClassDefinition
p859
(dp860
g4
I1
sg5
I01
sg6
g858
sg7
S'TRuleStoppingCriteria'
p861
sg9
(lp862
sg11
I00
sg12
(lp863
sbsS'TTreeSplitConstructor_ExhaustiveBinary'
p864
(i__main__
ClassDefinition
p865
(dp866
g4
I1
sg5
I01
sg6
g864
sg7
S'TTreeSplitConstructor_Measure'
p867
sg9
(lp868
sg11
I00
sg12
(lp869
(S'TMeasureAttribute'
p870
S'measure'
p871
g871
S'attribute quality measure'
p872
I0
I0
I00
tp873
a(S'float'
p874
S'worstAcceptable'
p875
g875
S'the worst acceptable quality of the attribute'
p876
I0
I0
I01
tp877
a(S'float'
p878
S'minSubset'
p879
g879
S'minimal number of examples in a subset'
p880
I0
I0
I01
tp881
asbsS'TTreeClassifier'
p882
(i__main__
ClassDefinition
p883
(dp884
g4
I1
sg5
I01
sg6
g882
sg7
S'TClassifierFD'
p885
sg9
(lp886
sg11
I00
sg12
(lp887
(S'TTreeNode'
p888
S'tree'
p889
g889
S'decision tree'
p890
I0
I0
I00
tp891
a(S'TTreeDescender'
p892
S'descender'
p893
g893
S'object that descends down the tree'
p894
I0
I0
I00
tp895
ag205
ag83
ag87
asbsS'TFilter_compatibleExample'
p896
(i__main__
ClassDefinition
p897
(dp898
g4
I1
sg5
I01
sg6
g896
sg7
S'TFilter'
p899
sg9
(lp900
sg11
I00
sg12
(lp901
(S'TExample'
p902
S'example'
p903
g903
S'example with which examples are compared'
p904
I0
I0
I00
tp905
ag429
ag433
asbsS'TRemoveRedundant'
p906
(i__main__
ClassDefinition
p907
(dp908
g4
I1
sg5
I01
sg6
g906
sg7
S'TOrange'
p909
sg9
(lp910
sg11
I01
sg12
(lp911
(S'bool'
p912
S'keepValues'
p913
g913
S'keep an attribute if number values is only smaller, not one'
p914
I0
I0
I01
tp915
asbsS'TSomeValue'
p916
(i__main__
ClassDefinition
p917
(dp918
g4
I1
sg5
I01
sg6
g916
sg7
S'TOrange'
p919
sg9
(lp920
sg11
I01
sg12
(lp921
sbsS'TRuleClassifierConstructor_firstRule'
p922
(i__main__
ClassDefinition
p923
(dp924
g4
I1
sg5
I01
sg6
g922
sg7
S'TRuleClassifierConstructor'
p925
sg9
(lp926
sg11
I00
sg12
(lp927
sbsS'TLinRegLearner'
p928
(i__main__
ClassDefinition
p929
(dp930
g4
I1
sg5
I01
sg6
g928
sg7
S'TLearner'
p931
sg9
(lp932
sg11
I00
sg12
(lp933
(S'int'
p934
S'iterativeSelection'
p935
g935
S'0 all, 1 forward, 2 backward, 3 stepwise'
p936
I0
I0
I01
tp937
a(S'float'
p938
S'Fin'
p939
g939
S'significance limit for an attribute to enter the model'
p940
I0
I0
I01
tp941
a(S'float'
p942
S'Fout'
p943
g943
S'significance limit for the attribute to be removed'
p944
I0
I0
I01
tp945
a(S'int'
p946
S'maxIterations'
p947
g947
S'maximal number of iterations for stepwise'
p948
I0
I0
I01
tp949
a(S'TImputerConstructor'
p950
S'imputerConstructor'
p951
g951
S'if present, it constructs an imputer for unknown values'
p952
I0
I0
I00
tp953
a(S'TDomainContinuizer'
p954
S'continuizer'
p955
g955
S'if present, specifies the way in which discrete attributes are converted to continuous'
p956
I0
I0
I00
tp957
ag97
asbsS'TStopDistributionClustering_noProfit'
p958
(i__main__
ClassDefinition
p959
(dp960
g4
I1
sg5
I01
sg6
g958
sg7
S'TStopDistributionClustering'
p961
sg9
(lp962
sg11
I00
sg12
(lp963
(S'float'
p964
S'minProfitProportion'
p965
g965
S'minimal allowable profit proportion'
p966
I0
I0
I01
tp967
asbsS'TBiModalDiscretization'
p968
(i__main__
ClassDefinition
p969
(dp970
g4
I1
sg5
I01
sg6
g968
sg7
S'TDiscretization'
p971
sg9
(lp972
sg11
I00
sg12
(lp973
(S'bool'
p974
S'splitInTwo'
p975
g975
S'if true (default), flanks are merged into a single interval'
p976
I0
I0
I01
tp977
asbsS'TIntVariable'
p978
(i__main__
ClassDefinition
p979
(dp980
g4
I1
sg5
I01
sg6
g978
sg7
S'TVariable'
p981
sg9
(lp982
sg11
I00
sg12
(lp983
(S'int'
p984
S'startValue'
p985
g985
S'lowest value'
p986
I0
I0
I01
tp987
a(S'int'
p988
S'endValue'
p989
g989
S'highest value'
p990
I0
I0
I01
tp991
ag233
ag237
ag241
ag245
ag249
ag253
ag257
asbsS'TColoredIG'
p992
(i__main__
ClassDefinition
p993
(dp994
g4
I1
sg5
I01
sg6
g992
sg7
S'TGeneralExampleClustering'
p995
sg9
(lp996
sg11
I00
sg12
(lp997
(S'TIG'
p998
S'ig'
p999
g999
S'incompatibility graph'
p1000
I0
I0
I00
tp1001
a(S'TIntList'
p1002
S'colors'
p1003
g1003
S'colors (one element corresponding to each ig node)'
p1004
I0
I0
I00
tp1005
asbsS'TMeasureAttribute'
p1006
(i__main__
ClassDefinition
p1007
(dp1008
g4
I1
sg5
I01
sg6
g1006
sg7
S'TOrange'
p1009
sg9
(lp1010
sg11
I00
sg12
(lp1011
g559
ag563
ag567
asbsS'TRuleEvaluator'
p1012
(i__main__
ClassDefinition
p1013
(dp1014
g4
I1
sg5
I01
sg6
g1012
sg7
S'TOrange'
p1015
sg9
(lp1016
sg11
I01
sg12
(lp1017
sbsS'TStringVariable'
p1018
(i__main__
ClassDefinition
p1019
(dp1020
g4
I1
sg5
I01
sg6
g1018
sg7
S'TVariable'
p1021
sg9
(lp1022
sg11
I00
sg12
(lp1023
g233
ag237
ag241
ag245
ag249
ag253
ag257
asbsS'TAssessIMQuality'
p1024
(i__main__
ClassDefinition
p1025
(dp1026
g4
I1
sg5
I01
sg6
g1024
sg7
S'TOrange'
p1027
sg9
(lp1028
sg11
I00
sg12
(lp1029
(S'TColumnAssessor'
p1030
S'columnAssessor'
p1031
g1031
S'column quality assessor'
p1032
I0
I0
I00
tp1033
asbsS'TGraphAsTree'
p1034
(i__main__
ClassDefinition
p1035
(dp1036
g4
I1
sg5
I01
sg6
g1034
sg7
S'TGraph'
p1037
sg9
(lp1038
sg11
I00
sg12
(lp1039
(S'int'
p1040
S'nVertices'
p1041
g1041
S'the number of vertices'
p1042
I01
I0
I01
tp1043
a(S'int'
p1044
S'nEdgeTypes'
p1045
g1045
S'the number of edge types'
p1046
I01
I0
I01
tp1047
a(S'bool'
p1048
S'directed'
p1049
g1049
S'directed'
p1050
I01
I0
I01
tp1051
asbsS'TTreeExampleSplitter_IgnoreUnknowns'
p1052
(i__main__
ClassDefinition
p1053
(dp1054
g4
I1
sg5
I01
sg6
g1052
sg7
S'TTreeExampleSplitter'
p1055
sg9
(lp1056
sg11
I00
sg12
(lp1057
sbsS'TProbabilityEstimator_FromDistribution'
p1058
(i__main__
ClassDefinition
p1059
(dp1060
g4
I1
sg5
I01
sg6
g1058
sg7
S'TProbabilityEstimator'
p1061
sg9
(lp1062
sg11
I00
sg12
(lp1063
(S'TDistribution'
p1064
S'probabilities'
p1065
g1065
S'probabilities'
p1066
I0
I0
I00
tp1067
a(S'bool'
p1068
S'supportsDiscrete'
p1069
g1069
S'can estimate probabilities of discrete attributes'
p1070
I01
I0
I01
tp1071
a(S'bool'
p1072
S'supportsContinuous'
p1073
g1073
S'can estimate probabilities of continuous attributes'
p1074
I01
I0
I01
tp1075
asbsS'TTreeDescender_UnknownMergeAsBranchSizes'
p1076
(i__main__
ClassDefinition
p1077
(dp1078
g4
I1
sg5
I01
sg6
g1076
sg7
S'TTreeDescender'
p1079
sg9
(lp1080
sg11
I0
sg12
(lp1081
sbsS'TExamplesDistance'
p1082
(i__main__
ClassDefinition
p1083
(dp1084
g4
I1
sg5
I01
sg6
g1082
sg7
S'TOrange'
p1085
sg9
(lp1086
sg11
I01
sg12
(lp1087
sbsS'TFileExampleGenerator'
p1088
(i__main__
ClassDefinition
p1089
(dp1090
g4
I1
sg5
I01
sg6
g1088
sg7
S'TExampleGenerator'
p1091
sg9
(lp1092
sg11
I01
sg12
(lp1093
g125
ag129
ag133
ag137
ag141
asbsS'TMeasureAttribute_gainRatio'
p1094
(i__main__
ClassDefinition
p1095
(dp1096
g4
I1
sg5
I01
sg6
g1094
sg7
S'TMeasureAttributeFromProbabilities'
p1097
sg9
(lp1098
sg11
I00
sg12
(lp1099
g547
ag551
ag555
ag559
ag563
ag567
asbsS'TRandomForestLearner'
p1100
(i__main__
ClassDefinition
p1101
(dp1102
S'extended'
p1103
I1
sS'imported'
p1104
I0
sS'name'
p1105
g1100
sS'parent'
p1106
S'TLearner'
p1107
sS'abstract'
p1108
I00
sS'components'
p1109
(lp1110
sS'properties'
p1111
(lp1112
(S'int'
p1113
S'randomSeed'
p1114
g1114
S'seed for the random generator'
p1115
I0
I0
I01
tp1116
ag97
asbsS'TLinRegClassifier'
p1117
(i__main__
ClassDefinition
p1118
(dp1119
g4
I1
sg5
I01
sg6
g1117
sg7
S'TClassifierFD'
p1120
sg9
(lp1121
sg11
I00
sg12
(lp1122
(S'TAttributedFloatList'
p1123
S'coefficients'
p1124
g1124
S'coefficients of regression plane'
p1125
I0
I0
I00
tp1126
a(S'TAttributedFloatList'
p1127
S'coefficients_se'
p1128
g1128
S'standard errors of coefficients'
p1129
I0
I0
I00
tp1130
a(S'float'
p1131
S'N'
p1132
g1132
S'number of examples'
p1133
I0
I0
I01
tp1134
a(S'float'
p1135
S'SStot'
p1136
g1136
S'total sum of squares'
p1137
I0
I0
I01
tp1138
a(S'float'
p1139
S'SSres'
p1140
g1140
S'residual sum of squares'
p1141
I0
I0
I01
tp1142
a(S'float'
p1143
S'SSreg'
p1144
g1144
S'sum of squares due to regression'
p1145
I0
I0
I01
tp1146
a(S'float'
p1147
S'MStot'
p1148
g1148
S'total mean squares'
p1149
I0
I0
I01
tp1150
a(S'float'
p1151
S'MSres'
p1152
g1152
S'residual mean square'
p1153
I0
I0
I01
tp1154
a(S'float'
p1155
S'MSreg'
p1156
g1156
S'mean square regression'
p1157
I0
I0
I01
tp1158
a(S'float'
p1159
S'F'
p1160
g1160
S'F statistics for the model'
p1161
I0
I0
I01
tp1162
a(S'float'
p1163
S'Fprob'
p1164
g1164
S'significance of the model (F)'
p1165
I0
I0
I01
tp1166
a(S'float'
p1167
S'R2'
p1168
g1168
S'determination'
p1169
I0
I0
I01
tp1170
a(S'float'
p1171
S'adjR2'
p1172
g1172
S'adjusted determination'
p1173
I0
I0
I01
tp1174
a(S'TImputer'
p1175
S'imputer'
p1176
g1176
S'if present, it imputes unknown values'
p1177
I0
I0
I00
tp1178
a(S'float'
p1179
S'threshold'
p1180
g1180
S'classification threshold (for discrete classes)'
p1181
I0
I0
I01
tp1182
ag205
ag83
ag87
asbsS'TContingencyClassAttr'
p1183
(i__main__
ClassDefinition
p1184
(dp1185
g4
I1
sg5
I01
sg6
g1183
sg7
S'TContingencyClass'
p1186
sg9
(lp1187
sg11
I00
sg12
(lp1188
(S'TVariable'
p1189
S'outerVariable'
p1190
g1190
S'outer attribute'
p1191
I0
I0
I00
tp1192
a(S'TVariable'
p1193
S'innerVariable'
p1194
(g1194
S'variable'
p1195
tp1196
S' inner attribute'
p1197
I0
I0
I00
tp1198
a(S'int'
p1199
S'varType'
p1200
g1200
S'outer attribute type'
p1201
I01
I0
I01
tp1202
a(S'TDistribution'
p1203
S'outerDistribution'
p1204
g1204
S'distribution of values of outer attributes'
p1205
I0
I0
I00
tp1206
a(S'TDistribution'
p1207
S'innerDistribution'
p1208
g1208
S'distribution of values of inner attributes'
p1209
I0
I0
I00
tp1210
asbsS'TMissValuesGenerator'
p1211
(i__main__
ClassDefinition
p1212
(dp1213
g4
I1
sg5
I01
sg6
g1211
sg7
S'TChangeExampleGenerator'
p1214
sg9
(lp1215
sg11
I00
sg12
(lp1216
(S'TIntFloatList'
p1217
S'replaceProbabilities'
p1218
g1218
S"probabilities for replacing attributes' values"
p1219
I0
I0
I00
tp1220
a(S'TRandomGenerator'
p1221
S'randomGenerator'
p1222
g1222
S'random generator'
p1223
I0
I0
I00
tp1224
ag137
ag141
asbsS'TLogRegClassifier'
p1225
(i__main__
ClassDefinition
p1226
(dp1227
g4
I1
sg5
I01
sg6
g1225
sg7
S'TClassifierFD'
p1228
sg9
(lp1229
sg11
I00
sg12
(lp1230
(S'TDomain'
p1231
S'continuizedDomain'
p1232
g1232
S'if absent, there is no continuous attributes in original domain'
p1233
I0
I0
I00
tp1234
a(S'TEFMDataDescription'
p1235
S'dataDescription'
p1236
g1236
S'Data needed for classification in presence of undefined values'
p1237
I0
I0
I00
tp1238
a(S'TAttributedFloatList'
p1239
S'beta'
p1240
g1240
S'estimated beta coefficients for logistic regression'
p1241
I0
I0
I00
tp1242
a(S'TAttributedFloatList'
p1243
S'beta_se'
p1244
g1244
S'estimated standard errors for beta coefficients'
p1245
I0
I0
I00
tp1246
a(S'TAttributedFloatList'
p1247
S'wald_Z'
p1248
g1248
S'Wald Z statstic for beta coefficients'
p1249
I0
I0
I00
tp1250
a(S'TAttributedFloatList'
p1251
S'P'
p1252
g1252
S'estimated significances for beta coefficients'
p1253
I0
I0
I00
tp1254
a(S'float'
p1255
S'likelihood'
p1256
g1256
S"Likelihood: The likelihood function is the function which specifies the probability of the sample observed on the basis of a known model, as a function of the model's parameters. "
p1257
I0
I0
I01
tp1258
a(S'int'
p1259
S'fit_status'
p1260
g1260
S"Tells how the model fitting ended - either regularly (LogRegFitter.OK), or it was interrupted due to one of beta coefficients escaping towards infinity (LogRegFitter.Infinity) or since the values didn't converge (LogRegFitter.Divergence)."
p1261
I0
I0
I01
tp1262
a(S'TImputer'
p1263
S'imputer'
p1264
g1264
S'if present, it imputes unknown values'
p1265
I0
I0
I00
tp1266
ag205
ag83
ag87
asbsS'TEquiDistDiscretization'
p1267
(i__main__
ClassDefinition
p1268
(dp1269
g4
I1
sg5
I01
sg6
g1267
sg7
S'TDiscretization'
p1270
sg9
(lp1271
sg11
I00
sg12
(lp1272
(S'int'
p1273
S'numberOfIntervals'
p1274
g1274
S'number of intervals'
p1275
I0
I0
I01
tp1276
asbsS'TPreprocessor_select'
p1277
(i__main__
ClassDefinition
p1278
(dp1279
g4
I1
sg5
I01
sg6
g1277
sg7
S'TPreprocessor'
p1280
sg9
(lp1281
sg11
I00
sg12
(lp1282
(S'TVarList'
p1283
S'attributes'
p1284
g1284
S'tells which attributes to select'
p1285
I0
I0
I00
tp1286
asbsS'TBasicAttrStat'
p1287
(i__main__
ClassDefinition
p1288
(dp1289
g4
I1
sg5
I01
sg6
g1287
sg7
S'TOrange'
p1290
sg9
(lp1291
sg11
I00
sg12
(lp1292
(S'float'
p1293
S'sum'
p1294
g1294
S'sum of values'
p1295
I01
I0
I01
tp1296
a(S'float'
p1297
S'sum2'
p1298
g1298
S'sum of squares of values'
p1299
I01
I0
I01
tp1300
a(S'float'
p1301
S'n'
p1302
g1302
S'number of examples for which the attribute is defined'
p1303
I01
I0
I01
tp1304
a(S'float'
p1305
S'min'
p1306
g1306
S'the lowest value of the attribute'
p1307
I0
I0
I01
tp1308
a(S'float'
p1309
S'max'
p1310
g1310
S'the highest value of the attribute'
p1311
I0
I0
I01
tp1312
a(S'float'
p1313
S'avg'
p1314
g1314
S'the average value of the attribute'
p1315
I0
I0
I01
tp1316
a(S'float'
p1317
S'dev'
p1318
g1318
S'the deviation of the value of the attribute'
p1319
I0
I0
I01
tp1320
a(S'TVariable'
p1321
S'variable'
p1322
g1322
S'the attribute to which the data applies'
p1323
I0
I0
I00
tp1324
a(S'bool'
p1325
S'holdRecomputation'
p1326
g1326
S'temporarily disables recomputation of avg and dev while adding values'
p1327
I0
I0
I01
tp1328
asbsS'TFilter_disjunction'
p1329
(i__main__
ClassDefinition
p1330
(dp1331
g4
I1
sg5
I01
sg6
g1329
sg7
S'TFilter'
p1332
sg9
(lp1333
sg11
I00
sg12
(lp1334
(S'TFilterList'
p1335
S'filters'
p1336
g1336
S'a list of filters;'
p1337
I0
I0
I00
tp1338
ag429
ag433
asbsS'TMeasureAttribute_gini'
p1339
(i__main__
ClassDefinition
p1340
(dp1341
g4
I1
sg5
I01
sg6
g1339
sg7
S'TMeasureAttributeFromProbabilities'
p1342
sg9
(lp1343
sg11
I00
sg12
(lp1344
g547
ag551
ag555
ag559
ag563
ag567
asbsS'TAttributedFloatList'
p1345
(i__main__
ClassDefinition
p1346
(dp1347
g4
I1
sg5
I01
sg6
g1345
sg7
S'TOrange'
p1348
sg9
(lp1349
sg11
I00
sg12
(lp1350
(S'TVarList'
p1351
S'attributes'
p1352
g1352
S'list of attributes (for indexing)'
p1353
I0
I0
I00
tp1354
asbsS'TIMByRowsByRelief'
p1355
(i__main__
ClassDefinition
p1356
(dp1357
g4
I1
sg5
I01
sg6
g1355
sg7
S'TIMByRowsConstructor'
p1358
sg9
(lp1359
sg11
I00
sg12
(lp1360
(S'float'
p1361
g793
g793
S'number of neighbours'
p1362
I0
I0
I01
tp1363
a(S'float'
p1364
g797
g797
S'number of reference examples'
p1365
I0
I0
I01
tp1366
a(S'float'
p1367
S'kFromColumns'
p1368
g1368
S'if positive, number of neighbours is #columns*kFromColumns'
p1369
I0
I0
I01
tp1370
a(S'bool'
p1371
S'ignoreSameExample'
p1372
g1372
S'does not put reference example into M'
p1373
I0
I0
I01
tp1374
a(S'bool'
p1375
S'convertToBinary'
p1376
g1376
S'convert to binary class (hit-miss)'
p1377
I0
I0
I01
tp1378
a(S'bool'
p1379
S'correctClassFirst'
p1380
g1380
S'puts the correct class proportion to the first place'
p1381
I0
I0
I01
tp1382
a(S'bool'
p1383
S'allExamples'
p1384
g1384
S'uses all examples for reference examples'
p1385
I0
I0
I01
tp1386
a(S'bool'
p1387
S'allSameNeighbours'
p1388
g1388
S'uses all the examples same to the reference as neighbours'
p1389
I0
I0
I01
tp1390
asbsS'TFindNearestConstructor'
p1391
(i__main__
ClassDefinition
p1392
(dp1393
g4
I1
sg5
I01
sg6
g1391
sg7
S'TOrange'
p1394
sg9
(lp1395
sg11
I01
sg12
(lp1396
(S'TExamplesDistanceConstructor'
p1397
S'distanceConstructor'
p1398
g1398
S'metrics'
p1399
I0
I0
I00
tp1400
a(S'bool'
p1401
S'includeSame'
p1402
g1402
S'tells whether to include examples that are same as the reference example'
p1403
I0
I0
I01
tp1404
asbsS'TRuleClassifier_firstRule'
p1405
(i__main__
ClassDefinition
p1406
(dp1407
g4
I1
sg5
I01
sg6
g1405
sg7
S'TRuleClassifier'
p1408
sg9
(lp1409
sg11
I00
sg12
(lp1410
(S'TDistribution'
p1411
S'prior'
p1412
g1412
S'prior distribution'
p1413
I0
I0
I00
tp1414
a(S'TRuleList'
p1415
S'rules'
p1416
g1416
S''
p1417
I0
I0
I00
tp1418
a(S'TExampleTable'
p1419
S'examples'
p1420
g1420
g1417
I0
I0
I00
tp1421
ag83
ag87
asbsS'TColumnAssessor'
p1422
(i__main__
ClassDefinition
p1423
(dp1424
g4
I1
sg5
I01
sg6
g1422
sg7
S'TOrange'
p1425
sg9
(lp1426
sg11
I01
sg12
(lp1427
sbsS'TComputeDomainContingency_Preprocessor'
p1428
(i__main__
ClassDefinition
p1429
(dp1430
g4
I1
sg5
I01
sg6
g1428
sg7
S'TComputeDomainContingency'
p1431
sg9
(lp1432
sg11
I00
sg12
(lp1433
(S'TPreprocessor'
p1434
S'preprocessor'
p1435
g1435
S'preprocesses the exmaples (see the manual for restrictions!)'
p1436
I0
I0
I00
tp1437
a(S'bool'
p1438
S'resultInOriginalDomain'
p1439
g1439
S'tells whether the resulting DomainContingency should consist of original attributes'
p1440
I0
I0
I01
tp1441
ag25
asbsS'TMeasureAttribute_MSE'
p1442
(i__main__
ClassDefinition
p1443
(dp1444
g4
I1
sg5
I01
sg6
g1442
sg7
S'TMeasureAttribute'
p1445
sg9
(lp1446
sg11
I00
sg12
(lp1447
(S'float'
p1448
g797
g797
S'm for m-estimate'
p1449
I0
I0
I01
tp1450
a(S'int'
p1451
S'unknownsTreatment'
p1452
g1452
S'treatment of unknown values'
p1453
I0
I0
I01
tp1454
ag559
ag563
ag567
asbsS'TIntervalDiscretizer'
p1455
(i__main__
ClassDefinition
p1456
(dp1457
g4
I1
sg5
I01
sg6
g1455
sg7
S'TDiscretizer'
p1458
sg9
(lp1459
sg11
I00
sg12
(lp1460
(S'TFloatList'
p1461
S'points'
p1462
g1462
S'cut-off points'
p1463
I0
I0
I00
tp1464
ag493
asbsS'TImputer_asValue'
p1465
(i__main__
ClassDefinition
p1466
(dp1467
g4
I1
sg5
I01
sg6
g1465
sg7
S'TImputer'
p1468
sg9
(lp1469
sg11
I00
sg12
(lp1470
(S'TDomain'
p1471
S'domain'
p1472
g1472
S'domain to which the values are converted'
p1473
I0
I0
I00
tp1474
a(S'TExample'
p1475
S'defaults'
p1476
g1476
S'values to impute instead of missing ones - for continuous attributes only!'
p1477
I0
I0
I00
tp1478
asbsS'TDomainContinuizer'
p1479
(i__main__
ClassDefinition
p1480
(dp1481
g4
I1
sg5
I01
sg6
g1479
sg7
S'TOrange'
p1482
sg9
(lp1483
sg11
I00
sg12
(lp1484
(S'bool'
p1485
S'zeroBased'
p1486
g1486
S'if true (default) it gives values 0.0 and 1.0; else -1.0 and 1.0, 0.0 for undefined'
p1487
I0
I0
I01
tp1488
a(S'int'
p1489
S'continuousTreatment'
p1490
g1490
S'0-leave as they are, 1-divide by span, 1-normalize'
p1491
I0
I0
I01
tp1492
a(S'int'
p1493
S'multinomialTreatment'
p1494
g1494
S'0-lowest value, 1-most frequent (or baseValue), 2-n binary, 3-ignore, 4-error, 5-convert as ordinal, 6-ordinal,normalized'
p1495
I0
I0
I01
tp1496
a(S'int'
p1497
S'classTreatment'
p1498
g1498
S'3-leave as is unless target is given, 4-error if not continuous nor binary nor target given, 5-convert as ordinal (unless target given)'
p1499
I0
I0
I01
tp1500
asbsS'TNormalizeContinuous'
p1501
(i__main__
ClassDefinition
p1502
(dp1503
g4
I1
sg5
I01
sg6
g1501
sg7
S'TTransformValue'
p1504
sg9
(lp1505
sg11
I00
sg12
(lp1506
(S'float'
p1507
S'average'
p1508
g1508
S'the average value'
p1509
I0
I0
I01
tp1510
a(S'float'
p1511
S'span'
p1512
g1512
S'the value span'
p1513
I0
I0
I01
tp1514
ag493
asbsS'TPNN'
p1515
(i__main__
ClassDefinition
p1516
(dp1517
g4
I1
sg5
I01
sg6
g1515
sg7
S'TClassifierFD'
p1518
sg9
(lp1519
sg11
I00
sg12
(lp1520
(S'int'
p1521
S'dimensions'
p1522
g1522
S'the number of dimensions'
p1523
I01
I0
I01
tp1524
a(S'TFloatList'
p1525
S'offsets'
p1526
g1526
S'offsets to subtract from the attribute values'
p1527
I0
I0
I00
tp1528
a(S'TFloatList'
p1529
S'normalizers'
p1530
g1530
S'number to divide the values by'
p1531
I0
I0
I00
tp1532
a(S'TFloatList'
p1533
S'averages'
p1534
g1534
S'numbers to use instead of the missing'
p1535
I0
I0
I00
tp1536
a(S'bool'
p1537
S'normalizeExamples'
p1538
g1538
S'if true, attribute values are divided to sum up to 1'
p1539
I0
I0
I01
tp1540
a(S'int'
p1541
S'nExamples'
p1542
g1542
S'the number of examples'
p1543
I01
I0
I01
tp1544
a(S'int'
p1545
S'law'
p1546
g1546
S'law'
p1547
I0
I0
I01
tp1548
ag205
ag83
ag87
asbsS'TBiModalDiscretizer'
p1549
(i__main__
ClassDefinition
p1550
(dp1551
g4
I1
sg5
I01
sg6
g1549
sg7
S'TDiscretizer'
p1552
sg9
(lp1553
sg11
I00
sg12
(lp1554
(S'float'
p1555
S'low'
p1556
g1556
S'low threshold'
p1557
I0
I0
I01
tp1558
a(S'float'
p1559
S'high'
p1560
g1560
S'high threshold'
p1561
I0
I0
I01
tp1562
ag493
asbsS'TExamplesDistanceConstructor_Euclidean'
p1563
(i__main__
ClassDefinition
p1564
(dp1565
g4
I1
sg5
I01
sg6
g1563
sg7
S'TExamplesDistanceConstructor_Normalized'
p1566
sg9
(lp1567
sg11
I00
sg12
(lp1568
(S'bool'
p1569
S'normalize'
p1570
g1570
S'tells whether to normalize distances between attributes'
p1571
I0
I0
I01
tp1572
a(S'bool'
p1573
S'ignoreUnknowns'
p1574
g1574
S'if true (default: false) unknown values are ignored in computation'
p1575
I0
I0
I01
tp1576
a(S'bool'
p1577
S'ignoreClass'
p1578
g1578
S'if true (default), class value is ignored when computing distances'
p1579
I0
I0
I01
tp1580
asbsS'TContingencyAttrAttr'
p1581
(i__main__
ClassDefinition
p1582
(dp1583
g4
I1
sg5
I01
sg6
g1581
sg7
S'TContingency'
p1584
sg9
(lp1585
sg11
I00
sg12
(lp1586
g1192
ag1198
ag1202
ag1206
ag1210
asbsS'TRuleBeamRefiner_Selector'
p1587
(i__main__
ClassDefinition
p1588
(dp1589
g4
I1
sg5
I01
sg6
g1587
sg7
S'TRuleBeamRefiner'
p1590
sg9
(lp1591
sg11
I00
sg12
(lp1592
(S'TDiscretization'
p1593
S'discretization'
p1594
g1594
S'discretization for continuous attributes'
p1595
I0
I0
I00
tp1596
asbsS'TProbabilityEstimatorConstructor_Laplace'
p1597
(i__main__
ClassDefinition
p1598
(dp1599
g4
I1
sg5
I01
sg6
g1597
sg7
S'TProbabilityEstimatorConstructor'
p1600
sg9
(lp1601
sg11
I00
sg12
(lp1602
(S'float'
p1603
S'l'
p1604
g1604
S'number of examples added to each class (default: 1)'
p1605
I0
I0
I01
tp1606
a(S'bool'
p1607
S'renormalize'
p1608
g1608
S'computes the estimate on the original (not the normalized) distribution'
p1609
I0
I0
I01
tp1610
asbsS'TClassifierForLinearWeight'
p1611
(i__main__
ClassDefinition
p1612
(dp1613
g4
I1
sg5
I01
sg6
g1611
sg7
S'TClassifier'
p1614
sg9
(lp1615
sg11
I00
sg12
(lp1616
(S'int'
p1617
S'whichID'
p1618
g1618
S'Id of meta variable for time'
p1619
I0
I0
I01
tp1620
a(S'TVariable'
p1621
S'outcomeVar'
p1622
g1622
S'outcome variable'
p1623
I0
I0
I00
tp1624
a(S'int'
p1625
S'failIndex'
p1626
g1626
S"index of 'fail' value"
p1627
I0
I0
I01
tp1628
a(S'float'
p1629
S'maxTime'
p1630
g1630
S'maximal time'
p1631
I0
I0
I01
tp1632
ag83
ag87
asbsS'TExamplesDistance_Relief'
p1633
(i__main__
ClassDefinition
p1634
(dp1635
g4
I1
sg5
I01
sg6
g1633
sg7
S'TExamplesDistance'
p1636
sg9
(lp1637
sg11
I00
sg12
(lp1638
(S'TDomainDistributions'
p1639
S'distributions'
p1640
g1640
S"distributions of attributes' values"
p1641
I0
I0
I00
tp1642
a(S'TAttributedFloatList'
p1643
S'averages'
p1644
g1644
S'average values of attributes'
p1645
I0
I0
I00
tp1646
a(S'TAttributedFloatList'
p1647
S'normalizations'
p1648
g1648
S"ranges of attributes' values"
p1649
I0
I0
I00
tp1650
a(S'TAttributedFloatList'
p1651
S'bothSpecial'
p1652
g1652
S'distance if both values of both attributes are undefined'
p1653
I0
I0
I00
tp1654
asbsS'TExamplesDistance_Manhattan'
p1655
(i__main__
ClassDefinition
p1656
(dp1657
g4
I1
sg5
I01
sg6
g1655
sg7
S'TExamplesDistance_Normalized'
p1658
sg9
(lp1659
sg11
I00
sg12
(lp1660
g323
ag327
ag331
ag335
ag339
ag343
ag347
asbsS'TExamplesDistanceConstructor_Manhattan'
p1661
(i__main__
ClassDefinition
p1662
(dp1663
g4
I1
sg5
I01
sg6
g1661
sg7
S'TExamplesDistanceConstructor_Normalized'
p1664
sg9
(lp1665
sg11
I00
sg12
(lp1666
g1572
ag1576
ag1580
asbsS'TTreeDescender'
p1667
(i__main__
ClassDefinition
p1668
(dp1669
g4
I1
sg5
I01
sg6
g1667
sg7
S'TOrange'
p1670
sg9
(lp1671
sg11
I01
sg12
(lp1672
sbsS'TColumnAssessor_Measure'
p1673
(i__main__
ClassDefinition
p1674
(dp1675
g4
I1
sg5
I01
sg6
g1673
sg7
S'TColumnAssessor'
p1676
sg9
(lp1677
sg11
I00
sg12
(lp1678
(S'TMeasureAttribute'
p1679
S'measure'
p1680
g1680
S'attribute quality measure'
p1681
I0
I0
I00
tp1682
asbsS'TIMBlurer'
p1683
(i__main__
ClassDefinition
p1684
(dp1685
g4
I1
sg5
I01
sg6
g1683
sg7
S'TIMByRowsPreprocessor'
p1686
sg9
(lp1687
sg11
I00
sg12
(lp1688
(S'float'
p1689
S'weight'
p1690
g1690
S'weight of neighbours'
p1691
I0
I0
I01
tp1692
a(S'float'
p1693
S'origWeight'
p1694
g1694
S'weight of original row'
p1695
I0
I0
I01
tp1696
a(S'TFloatList'
p1697
S'attrWeights'
p1698
g1698
S'weights by individual (different) attributes'
p1699
I0
I0
I00
tp1700
a(S'bool'
p1701
S'adjustOrigWeight'
p1702
g1702
S'uses 1-weight(s) for weight of original row'
p1703
I0
I0
I01
tp1704
a(S'bool'
p1705
S'onlyEmpty'
p1706
g1706
S'blurs only empty cells'
p1707
I0
I0
I01
tp1708
asbsS'TStopIMClusteringByAssessor_noBigChange'
p1709
(i__main__
ClassDefinition
p1710
(dp1711
g4
I1
sg5
I01
sg6
g1709
sg7
S'TStopIMClusteringByAssessor'
p1712
sg9
(lp1713
sg11
I00
sg12
(lp1714
sbsS'TDiscretizedDomain'
p1715
(i__main__
ClassDefinition
p1716
(dp1717
g4
I1
sg5
I01
sg6
g1715
sg7
S'TDomain'
p1718
sg9
(lp1719
sg11
I00
sg12
(lp1720
(S'TDiscretization'
p1721
S'defaultDiscretization'
p1722
g1722
S'default discretization'
p1723
I0
I0
I00
tp1724
a(S'int'
p1725
S'defaultInt'
p1726
g1726
S'default number of intervals'
p1727
I0
I0
I01
tp1728
a(S'int'
p1729
S'weight'
p1730
g1730
S'id of attribute with weight'
p1731
I0
I0
I01
tp1732
a(S'TVariable'
p1733
S'classVar'
p1734
g1734
S'class variable'
p1735
I01
I0
I00
tp1736
a(S'TVarList'
p1737
S'attributes'
p1738
g1738
S'list of attributes, excluding the class'
p1739
I01
I0
I00
tp1740
a(S'TVarList'
p1741
S'variables'
p1742
g1742
S'list of attributes, including the class at the end of the list'
p1743
I01
I0
I00
tp1744
a(S'int'
p1745
S'version'
p1746
g1746
S"unique version identifier; it's changed each time a domain is changed"
p1747
I01
I0
I01
tp1748
asbsS'TC45Learner'
p1749
(i__main__
ClassDefinition
p1750
(dp1751
g4
I1
sg5
I01
sg6
g1749
sg7
S'TLearner'
p1752
sg9
(lp1753
sg11
I00
sg12
(lp1754
(S'bool'
p1755
S'gainRatio'
p1756
(g1756
S'g'
p1757
tp1758
S' use gain ratio (instead of information gain)'
p1759
I0
I0
I01
tp1760
a(S'bool'
p1761
S'subset'
p1762
(g1762
S's'
p1763
tp1764
S' use subsetting'
p1765
I0
I0
I01
tp1766
a(S'bool'
p1767
S'batch'
p1768
(g1768
S'b'
p1769
tp1770
S' batch'
p1771
I0
I0
I01
tp1772
a(S'bool'
p1773
S'probThresh'
p1774
(g1774
S'p'
p1775
tp1776
S' probability threshold'
p1777
I0
I0
I01
tp1778
a(S'int'
p1779
S'minObjs'
p1780
(g1780
g797
tp1781
S' minimal number of objects (examples) in leaves'
p1782
I0
I0
I01
tp1783
a(S'int'
p1784
S'window'
p1785
(g1785
S'w'
p1786
tp1787
S' window'
p1788
I0
I0
I01
tp1789
a(S'int'
p1790
S'increment'
p1791
(g1791
S'i'
p1792
tp1793
S' increment'
p1794
I0
I0
I01
tp1795
a(S'float'
p1796
S'cf'
p1797
(g1797
S'c'
p1798
tp1799
S' cf'
p1800
I0
I0
I01
tp1801
a(S'int'
p1802
S'trials'
p1803
(g1803
S't'
p1804
tp1805
S' trials'
p1806
I0
I0
I01
tp1807
a(S'bool'
p1808
S'prune'
p1809
g1809
S'return pruned tree'
p1810
I0
I0
I01
tp1811
a(S'bool'
p1812
S'convertToOrange'
p1813
g1813
S'return TreeClassifier instead of C45TreeClassifier'
p1814
I0
I0
I01
tp1815
a(S'bool'
p1816
S'storeExamples'
p1817
g1817
S'stores examples when (if) converting to TreeClassifier'
p1818
I0
I0
I01
tp1819
a(S'bool'
p1820
S'storeContingencies'
p1821
g1821
S'stores contingencies when (if) converting to TreeClassifier'
p1822
I0
I0
I01
tp1823
ag97
asbsS'TAttributedBoolList'
p1824
(i__main__
ClassDefinition
p1825
(dp1826
g4
I1
sg5
I01
sg6
g1824
sg7
g1348
sg9
(lp1827
sg11
I00
sg12
(lp1828
(S'TVarList'
p1829
S'attributes'
p1830
g1830
S'list of attributes (for indexing)'
p1831
I0
I0
I00
tp1832
asbsS'TRuleStoppingCriteria'
p1833
(i__main__
ClassDefinition
p1834
(dp1835
g4
I1
sg5
I01
sg6
g1833
sg7
S'TOrange'
p1836
sg9
(lp1837
sg11
I01
sg12
(lp1838
sbsS'TPreprocessor_dropMissingClasses'
p1839
(i__main__
ClassDefinition
p1840
(dp1841
g4
I1
sg5
I01
sg6
g1839
sg7
S'TPreprocessor'
p1842
sg9
(lp1843
sg11
I00
sg12
(lp1844
sbsS'TkNNClassifier'
p1845
(i__main__
ClassDefinition
p1846
(dp1847
g4
I1
sg5
I01
sg6
g1845
sg7
S'TClassifierFD'
p1848
sg9
(lp1849
sg11
I00
sg12
(lp1850
(S'TFindNearest'
p1851
S'findNearest'
p1852
g1852
g1417
I0
I0
I00
tp1853
a(S'float'
p1854
g793
g793
S'number of neighbours'
p1855
I0
I0
I01
tp1856
a(S'bool'
p1857
S'rankWeight'
p1858
g1858
S'enable weighting by ranks'
p1859
I0
I0
I01
tp1860
a(S'int'
p1861
S'weightID'
p1862
g1862
S'id of meta-attribute with weight'
p1863
I0
I0
I01
tp1864
ag205
ag83
ag87
asbsS'TMeasureAttribute_info'
p1865
(i__main__
ClassDefinition
p1866
(dp1867
g4
I1
sg5
I01
sg6
g1865
sg7
S'TMeasureAttributeFromProbabilities'
p1868
sg9
(lp1869
sg11
I00
sg12
(lp1870
g547
ag551
ag555
ag559
ag563
ag567
asbsS'TRuleBeamCandidateSelector_TakeAll'
p1871
(i__main__
ClassDefinition
p1872
(dp1873
g4
I1
sg5
I01
sg6
g1871
sg7
S'TRuleBeamCandidateSelector'
p1874
sg9
(lp1875
sg11
I00
sg12
(lp1876
sbsS'TExamplesDistanceConstructor_Relief'
p1877
(i__main__
ClassDefinition
p1878
(dp1879
g4
I1
sg5
I01
sg6
g1877
sg7
S'TExamplesDistanceConstructor'
p1880
sg9
(lp1881
sg11
I00
sg12
(lp1882
g1580
asbsS'TOrange'
p1883
(i__main__
ClassDefinition
p1884
(dp1885
g4
I1
sg5
I01
sg6
g1883
sg7
Nsg9
(lp1886
sg11
I00
sg12
(lp1887
sbsS'TRuleValidator'
p1888
(i__main__
ClassDefinition
p1889
(dp1890
g4
I1
sg5
I01
sg6
g1888
sg7
S'TOrange'
p1891
sg9
(lp1892
sg11
I01
sg12
(lp1893
sbsS'TColorIG'
p1894
(i__main__
ClassDefinition
p1895
(dp1896
g4
I1
sg5
I01
sg6
g1894
sg7
S'TOrange'
p1897
sg9
(lp1898
sg11
I01
sg12
(lp1899
sbsS'TRuleValidator_Python'
p1900
(i__main__
ClassDefinition
p1901
(dp1902
g4
I1
sg5
I01
sg6
g1900
sg7
S'TRuleValidator'
p1903
sg9
(lp1904
sg11
I00
sg12
(lp1905
sbsS'TIMByRowsBySorting'
p1906
(i__main__
ClassDefinition
p1907
(dp1908
g4
I1
sg5
I01
sg6
g1906
sg7
S'TIMByRowsConstructor'
p1909
sg9
(lp1910
sg11
I00
sg12
(lp1911
sbsS'TAssociationLearner'
p1912
(i__main__
ClassDefinition
p1913
(dp1914
g4
I1
sg5
I01
sg6
g1912
sg7
S'TLearner'
p1915
sg9
(lp1916
sg11
I00
sg12
(lp1917
(S'float'
p1918
S'confidence'
p1919
g1919
S'required confidence'
p1920
I0
I0
I01
tp1921
a(S'float'
p1922
S'support'
p1923
g1923
S'required support'
p1924
I0
I0
I01
tp1925
a(S'int'
p1926
S'voteWeight'
p1927
g1927
S'vote weight (s=support, c=confidence, p=product)'
p1928
I0
I0
I01
tp1929
a(S'int'
p1930
S'maxItemSets'
p1931
g1931
S'maximal number of itemsets (increase if you want)'
p1932
I0
I0
I01
tp1933
ag97
asbsS'TRuleBeamInitializer_Python'
p1934
(i__main__
ClassDefinition
p1935
(dp1936
g4
I1
sg5
I01
sg6
g1934
sg7
S'TRuleBeamInitializer'
p1937
sg9
(lp1938
sg11
I00
sg12
(lp1939
sbsS'TDistributionAssessor'
p1940
(i__main__
ClassDefinition
p1941
(dp1942
g4
I1
sg5
I01
sg6
g1940
sg7
S'TOrange'
p1943
sg9
(lp1944
sg11
I01
sg12
(lp1945
sbsS'TRuleCovererAndRemover_Python'
p1946
(i__main__
ClassDefinition
p1947
(dp1948
g4
I1
sg5
I01
sg6
g1946
sg7
S'TRuleCovererAndRemover'
p1949
sg9
(lp1950
sg11
I00
sg12
(lp1951
sbsS'TMeasureAttribute_gainRatioA'
p1952
(i__main__
ClassDefinition
p1953
(dp1954
g4
I1
sg5
I01
sg6
g1952
sg7
S'TMeasureAttribute_gainRatio'
p1955
sg9
(lp1956
sg11
I00
sg12
(lp1957
g547
ag551
ag555
ag559
ag563
ag567
asbsS'TConditionalProbabilityEstimatorConstructor_ByRows'
p1958
(i__main__
ClassDefinition
p1959
(dp1960
g4
I1
sg5
I01
sg6
g1958
sg7
S'TConditionalProbabilityEstimatorConstructor'
p1961
sg9
(lp1962
sg11
I00
sg12
(lp1963
(S'TProbabilityEstimatorConstructor'
p1964
S'estimatorConstructor'
p1965
g1965
S'ProbabilityEstimator to be used '
p1966
I0
I0
I00
tp1967
asbsS'TCartesianClassifier'
p1968
(i__main__
ClassDefinition
p1969
(dp1970
g4
I1
sg5
I01
sg6
g1968
sg7
S'TClassifierFD'
p1971
sg9
(lp1972
sg11
I00
sg12
(lp1973
g205
ag83
ag87
asbsS'TTreeSplitConstructor'
p1974
(i__main__
ClassDefinition
p1975
(dp1976
g4
I1
sg5
I01
sg6
g1974
sg7
S'TOrange'
p1977
sg9
(lp1978
sg11
I01
sg12
(lp1979
g881
asbsS'TTreeDescender_UnknownToBranch'
p1980
(i__main__
ClassDefinition
p1981
(dp1982
g4
I1
sg5
I01
sg6
g1980
sg7
g1079
sg9
(lp1983
sg11
I0
sg12
(lp1984
sbsS'TSubsetsGenerator_constSize'
p1985
(i__main__
ClassDefinition
p1986
(dp1987
g4
I1
sg5
I01
sg6
g1985
sg7
S'TSubsetsGenerator'
p1988
sg9
(lp1989
sg11
I00
sg12
(lp1990
(S'int'
p1991
S'B'
p1992
g1992
S'subset size'
p1993
I0
I0
I01
tp1994
ag183
asbsS'TColorIG_MCF'
p1995
(i__main__
ClassDefinition
p1996
(dp1997
g4
I1
sg5
I01
sg6
g1995
sg7
S'TColorIG'
p1998
sg9
(lp1999
sg11
I00
sg12
(lp2000
sbsS'TTreeSplitConstructor_Attribute'
p2001
(i__main__
ClassDefinition
p2002
(dp2003
g4
I1
sg5
I01
sg6
g2001
sg7
S'TTreeSplitConstructor_Measure'
p2004
sg9
(lp2005
sg11
I00
sg12
(lp2006
g873
ag877
ag881
asbsS'TRemoveRedundantByInduction'
p2007
(i__main__
ClassDefinition
p2008
(dp2009
g4
I1
sg5
I01
sg6
g2007
sg7
S'TRemoveRedundant'
p2010
sg9
(lp2011
sg11
I00
sg12
(lp2012
(S'TFeatureInducer'
p2013
S'featureReducer'
p2014
g2014
S'feature construction algorithm'
p2015
I0
I0
I00
tp2016
a(S'TMeasureAttribute'
p2017
S'measure'
p2018
g2018
S'measure for initial ordering of attributes'
p2019
I0
I0
I00
tp2020
a(S'TDiscretization'
p2021
S'discretization'
p2022
g2022
S'discretization method'
p2023
I0
I0
I00
tp2024
ag915
asbsS'TFilter_conjunction'
p2025
(i__main__
ClassDefinition
p2026
(dp2027
g4
I1
sg5
I01
sg6
g2025
sg7
S'TFilter'
p2028
sg9
(lp2029
sg11
I00
sg12
(lp2030
(S'TFilterList'
p2031
S'filters'
p2032
g2032
S'a list of filters;'
p2033
I0
I0
I00
tp2034
ag429
ag433
asbsS'TExampleForMissing'
p2035
(i__main__
ClassDefinition
p2036
(dp2037
g4
I1
sg5
I01
sg6
g2035
sg7
S'TExample'
p2038
sg9
(lp2039
sg11
I00
sg12
(lp2040
(S'TEFMDataDescription'
p2041
S'dataDescription'
p2042
g2042
S'data description'
p2043
I0
I0
I00
tp2044
a(S'TDomain'
p2045
S'domain'
p2046
g2046
S"Example's domain"
p2047
I01
I0
I00
tp2048
asbsS'TRuleBeamFilter'
p2049
(i__main__
ClassDefinition
p2050
(dp2051
g4
I1
sg5
I01
sg6
g2049
sg7
S'TOrange'
p2052
sg9
(lp2053
sg11
I01
sg12
(lp2054
sbsS'TBayesClassifier'
p2055
(i__main__
ClassDefinition
p2056
(dp2057
g4
I1
sg5
I01
sg6
g2055
sg7
S'TClassifierFD'
p2058
sg9
(lp2059
sg11
I00
sg12
(lp2060
(S'TDistribution'
p2061
S'distribution'
p2062
g2062
S'class distributions (P(C))'
p2063
I0
I0
I00
tp2064
a(S'TDomainContingency'
p2065
S'conditionalDistributions'
p2066
g2066
S'conditional distributions, P(C|A)'
p2067
I0
I0
I00
tp2068
a(S'TProbabilityEstimator'
p2069
S'estimator'
p2070
g2070
S'a probability estimator for P(C)'
p2071
I0
I0
I00
tp2072
a(S'TConditionalProbabilityEstimatorList'
p2073
S'conditionalEstimators'
p2074
g2074
S'a probability estimator for P(C|A)'
p2075
I0
I0
I00
tp2076
a(S'bool'
p2077
S'normalizePredictions'
p2078
g2078
S'if true, classifier will normalize predictions'
p2079
I0
I0
I01
tp2080
a(S'float'
p2081
S'threshold'
p2082
g2082
S'threshold probability for class 1 (for binary classes only)'
p2083
I0
I0
I01
tp2084
ag205
ag83
ag87
asbsS'TGraph'
p2085
(i__main__
ClassDefinition
p2086
(dp2087
g4
I1
sg5
I01
sg6
g2085
sg7
S'TOrange'
p2088
sg9
(lp2089
sg11
I01
sg12
(lp2090
g1043
ag1047
ag1051
asbsS'TPreprocessor_addClassWeight'
p2091
(i__main__
ClassDefinition
p2092
(dp2093
g4
I1
sg5
I01
sg6
g2091
sg7
S'TPreprocessor'
p2094
sg9
(lp2095
sg11
I00
sg12
(lp2096
(S'TFloatList'
p2097
S'classWeights'
p2098
g2098
S'weights of examples of particular classes'
p2099
I0
I0
I00
tp2100
a(S'bool'
p2101
S'equalize'
p2102
g2102
S'reweight examples to equalize class proportions'
p2103
I0
I0
I01
tp2104
a(S'TRandomGenerator'
p2105
S'randomGenerator'
p2106
g2106
S'random number generator'
p2107
I0
I0
I00
tp2108
asbsS'TStopIMClusteringByAssessor'
p2109
(i__main__
ClassDefinition
p2110
(dp2111
g4
I1
sg5
I01
sg6
g2109
sg7
S'TOrange'
p2112
sg9
(lp2113
sg11
I01
sg12
(lp2114
sbsS'TValueFilter_continuous'
p2115
(i__main__
ClassDefinition
p2116
(dp2117
g4
I1
sg5
I01
sg6
g2115
sg7
S'TValueFilter'
p2118
sg9
(lp2119
sg11
I00
sg12
(lp2120
(S'float'
p2121
S'min'
p2122
(g2122
S'ref'
p2123
tp2124
S' reference value (lower bound for interval operators)'
p2125
I0
I0
I01
tp2126
a(S'float'
p2127
S'max'
p2128
g2128
S'upper bound for interval operators'
p2129
I0
I0
I01
tp2130
a(S'bool'
p2131
S'outside'
p2132
g2132
S'obsolete: if true, the filter accepts the values outside the interval, not inside'
p2133
I0
I0
I01
tp2134
a(S'int'
p2135
S'oper'
p2136
g2136
S'operator'
p2137
I0
I0
I01
tp2138
ag665
ag669
asbsS'TAssociationRule'
p2139
(i__main__
ClassDefinition
p2140
(dp2141
g4
I1
sg5
I01
sg6
g2139
sg7
S'TOrange'
p2142
sg9
(lp2143
sg11
I00
sg12
(lp2144
(S'TExample'
p2145
S'left'
p2146
g2146
S'left side of the rule'
p2147
I0
I0
I00
tp2148
a(S'TExample'
p2149
S'right'
p2150
g2150
S'right side of the rule'
p2151
I0
I0
I00
tp2152
a(S'float'
p2153
S'support'
p2154
g2154
S'support for the rule'
p2155
I0
I0
I01
tp2156
a(S'float'
p2157
S'confidence'
p2158
g2158
S'confidence of the rule'
p2159
I0
I0
I01
tp2160
a(S'float'
p2161
S'coverage'
p2162
g2162
S"rule's coverage"
p2163
I0
I0
I01
tp2164
a(S'float'
p2165
S'strength'
p2166
g2166
S"rule's strength"
p2167
I0
I0
I01
tp2168
a(S'float'
p2169
S'lift'
p2170
g2170
S"rule's lift"
p2171
I0
I0
I01
tp2172
a(S'float'
p2173
S'leverage'
p2174
g2174
S"rule's leverage"
p2175
I0
I0
I01
tp2176
a(S'float'
p2177
S'nAppliesLeft'
p2178
g2178
S"number of examples covered by the rule's left side "
p2179
I0
I0
I01
tp2180
a(S'float'
p2181
S'nAppliesRight'
p2182
g2182
S"number of examples covered by the rule's right side "
p2183
I0
I0
I01
tp2184
a(S'float'
p2185
S'nAppliesBoth'
p2186
g2186
S'number of examples covered by the rule'
p2187
I0
I0
I01
tp2188
a(S'float'
p2189
S'nExamples'
p2190
g2190
S'number of learning examples'
p2191
I0
I0
I01
tp2192
a(S'int'
p2193
S'nLeft'
p2194
g2194
S"number of items on the rule's left side"
p2195
I0
I0
I01
tp2196
a(S'int'
p2197
S'nRight'
p2198
g2198
S"number of items on the rule's right side"
p2199
I0
I0
I01
tp2200
asbsS'TValueFilter'
p2201
(i__main__
ClassDefinition
p2202
(dp2203
g4
I1
sg5
I01
sg6
g2201
sg7
S'TOrange'
p2204
sg9
(lp2205
sg11
I01
sg12
(lp2206
g665
ag669
asbsS'TClustersFromDistributions'
p2207
(i__main__
ClassDefinition
p2208
(dp2209
g4
I1
sg5
I01
sg6
g2207
sg7
S'TOrange'
p2210
sg9
(lp2211
sg11
I01
sg12
(lp2212
sbsS'TVariable'
p2213
(i__main__
ClassDefinition
p2214
(dp2215
g4
I1
sg5
I01
sg6
g2213
sg7
S'TOrange'
p2216
sg9
(lp2217
sg11
I01
sg12
(lp2218
g233
ag237
ag241
ag245
ag249
ag253
ag257
asbsS'TNoiseValuesGenerator'
p2219
(i__main__
ClassDefinition
p2220
(dp2221
g4
I1
sg5
I01
sg6
g2219
sg7
S'TChangeExampleGenerator'
p2222
sg9
(lp2223
sg11
I00
sg12
(lp2224
(S'TIntFloatList'
p2225
S'replaceProbabilities'
p2226
g2226
S"probabilities for replacing attributes' values"
p2227
I0
I0
I00
tp2228
a(S'TRandomGenerator'
p2229
S'randomGenerator'
p2230
g2230
S'random generator'
p2231
I0
I0
I00
tp2232
ag137
ag141
asbsS'TFilter_sameValue'
p2233
(i__main__
ClassDefinition
p2234
(dp2235
g4
I1
sg5
I01
sg6
g2233
sg7
S'TFilter'
p2236
sg9
(lp2237
sg11
I00
sg12
(lp2238
(S'int'
p2239
S'position'
p2240
g2240
S'position of the observed attribute'
p2241
I0
I0
I01
tp2242
a(S'TValue'
p2243
S'value'
p2244
g2244
S'value that the selected examples should have'
p2245
I0
I0
I01
tp2246
ag429
ag433
asbsS'TEquiNDiscretization'
p2247
(i__main__
ClassDefinition
p2248
(dp2249
g4
I1
sg5
I01
sg6
g2247
sg7
S'TDiscretization'
p2250
sg9
(lp2251
sg11
I00
sg12
(lp2252
(S'int'
p2253
S'numberOfIntervals'
p2254
g2254
S'number of intervals'
p2255
I0
I0
I01
tp2256
a(S'bool'
p2257
S'recursiveDivision'
p2258
g2258
S'find cut-off points by recursive division (default = true)'
p2259
I0
I0
I01
tp2260
asbsS'TImputerConstructor_average'
p2261
(i__main__
ClassDefinition
p2262
(dp2263
g4
I1
sg5
I01
sg6
g2261
sg7
S'TImputerConstructor'
p2264
sg9
(lp2265
sg11
I00
sg12
(lp2266
g151
asbsS'TDomainBasicAttrStat'
p2267
(i__main__
ClassDefinition
p2268
(dp2269
g4
I1
sg5
I01
sg6
g2267
sg7
g1348
sg9
(lp2270
sg11
I00
sg12
(lp2271
sbsS'TStopDistributionClustering'
p2272
(i__main__
ClassDefinition
p2273
(dp2274
g4
I1
sg5
I01
sg6
g2272
sg7
S'TOrange'
p2275
sg9
(lp2276
sg11
I01
sg12
(lp2277
sbsS'TImputerConstructor_random'
p2278
(i__main__
ClassDefinition
p2279
(dp2280
g4
I1
sg5
I01
sg6
g2278
sg7
S'TImputerConstructor'
p2281
sg9
(lp2282
sg11
I00
sg12
(lp2283
(S'bool'
p2284
S'deterministic'
p2285
g2285
S"tells whether to initialize random by example's CRC (default: false)"
p2286
I0
I0
I01
tp2287
ag151
asbsS'TCostWrapperClassifier'
p2288
(i__main__
ClassDefinition
p2289
(dp2290
g4
I1
sg5
I01
sg6
g2288
sg7
S'TClassifier'
p2291
sg9
(lp2292
sg11
I00
sg12
(lp2293
(S'TClassifier'
p2294
S'classifier'
p2295
g2295
S'basic classifier'
p2296
I0
I0
I00
tp2297
a(S'TCostMatrix'
p2298
S'costMatrix'
p2299
g2299
S'cost matrix'
p2300
I0
I0
I00
tp2301
ag83
ag87
asbsS'TPreprocessor_ignore'
p2302
(i__main__
ClassDefinition
p2303
(dp2304
g4
I1
sg5
I01
sg6
g2302
sg7
S'TPreprocessor'
p2305
sg9
(lp2306
sg11
I00
sg12
(lp2307
(S'TVarList'
p2308
S'attributes'
p2309
g2309
S'tells which attributes to remove'
p2310
I0
I0
I00
tp2311
asbsS'TC45TreeNode'
p2312
(i__main__
ClassDefinition
p2313
(dp2314
g4
I1
sg5
I01
sg6
g2312
sg7
S'TOrange'
p2315
sg9
(lp2316
sg11
I00
sg12
(lp2317
(S'int'
p2318
S'nodeType'
p2319
g2319
S'0 = leaf,  1 = branch,  2 = cut,  3 = subset'
p2320
I0
I0
I01
tp2321
a(S'TValue'
p2322
S'leaf'
p2323
g2323
S'most frequent class at this node'
p2324
I0
I0
I01
tp2325
a(S'float'
p2326
S'items'
p2327
g2327
S'no of items at this node'
p2328
I0
I0
I01
tp2329
a(S'TDiscDistribution'
p2330
S'classDist'
p2331
g2331
S'class distribution of items'
p2332
I0
I0
I00
tp2333
a(S'TVariable'
p2334
S'tested'
p2335
g2335
S'attribute referenced in test'
p2336
I0
I0
I00
tp2337
a(S'float'
p2338
S'cut'
p2339
g2339
S'threshold for continuous attribute'
p2340
I0
I0
I01
tp2341
a(S'float'
p2342
S'lower'
p2343
g2343
S'lower limit of soft threshold'
p2344
I0
I0
I01
tp2345
a(S'float'
p2346
S'upper'
p2347
g2347
S'upper limit of soft threshold'
p2348
I0
I0
I01
tp2349
a(S'TIntList'
p2350
S'mapping'
p2351
g2351
S'mapping for discrete value'
p2352
I0
I0
I00
tp2353
a(S'TC45TreeNodeList'
p2354
S'branch'
p2355
g2355
S'branch[x] = (sub)tree for outcome x */'
p2356
I0
I0
I00
tp2357
asbsS'TMeasureAttribute_Python'
p2358
(i__main__
ClassDefinition
p2359
(dp2360
g4
I1
sg5
I01
sg6
g2358
sg7
S'TMeasureAttribute'
p2361
sg9
(lp2362
sg11
I00
sg12
(lp2363
g559
ag563
ag567
asbsS'TDistributionAssessor_Measure'
p2364
(i__main__
ClassDefinition
p2365
(dp2366
g4
I1
sg5
I01
sg6
g2364
sg7
S'TDistributionAssessor'
p2367
sg9
(lp2368
sg11
I00
sg12
(lp2369
(S'TMeasureAttribute'
p2370
S'measure'
p2371
g2371
S'attribute quality measure'
p2372
I0
I0
I00
tp2373
asbsS'TDistributionAssessor_m'
p2374
(i__main__
ClassDefinition
p2375
(dp2376
g4
I1
sg5
I01
sg6
g2374
sg7
S'TDistributionAssessor'
p2377
sg9
(lp2378
sg11
I00
sg12
(lp2379
(S'float'
p2380
g797
g797
S'm for m-estimate'
p2381
I0
I0
I01
tp2382
asbsS'TClassifierRandomGenerator'
p2383
(i__main__
ClassDefinition
p2384
(dp2385
g4
I1
sg5
I01
sg6
g2383
sg7
S'TExampleGenerator'
p2386
sg9
(lp2387
sg11
I00
sg12
(lp2388
(S'TClassifier'
p2389
S'classify'
p2390
g2390
S'classifier'
p2391
I0
I0
I00
tp2392
a(S'int'
p2393
S'noOfEx'
p2394
g2394
S'number of examples'
p2395
I0
I0
I01
tp2396
ag137
ag141
asbsS'TExamplesDistance_Hamiltonian'
p2397
(i__main__
ClassDefinition
p2398
(dp2399
g4
I1
sg5
I01
sg6
g2397
sg7
S'TExamplesDistance'
p2400
sg9
(lp2401
sg11
I00
sg12
(lp2402
(S'bool'
p2403
S'ignoreClass'
p2404
g2404
S'if true (default), class value is ignored when computing distances'
p2405
I0
I0
I01
tp2406
a(S'bool'
p2407
S'ignoreUnknowns'
p2408
g2408
S'if true (default: false) unknown values are ignored in computation'
p2409
I0
I0
I01
tp2410
asbsS'TThresholdDiscretizer'
p2411
(i__main__
ClassDefinition
p2412
(dp2413
g4
I1
sg5
I01
sg6
g2411
sg7
S'TDiscretizer'
p2414
sg9
(lp2415
sg11
I00
sg12
(lp2416
(S'float'
p2417
S'threshold'
p2418
g2418
S'threshold'
p2419
I0
I0
I01
tp2420
ag493
asbsS'TExampleTable'
p2421
(i__main__
ClassDefinition
p2422
(dp2423
g4
I1
sg5
I01
sg6
g2421
sg7
S'TExampleGenerator'
p2424
sg9
(lp2425
sg11
I00
sg12
(lp2426
(S'TRandomGenerator'
p2427
S'randomGenerator'
p2428
g2428
S'random generator used by randomExample'
p2429
I0
I0
I00
tp2430
a(S'TExampleGenerator'
p2431
S'lock'
p2432
g2432
S'the real owner of examples'
p2433
I01
I0
I00
tp2434
a(S'bool'
p2435
S'ownsExamples'
p2436
g2436
S'if false, examples in this table are references to examples in another table'
p2437
I01
I0
I01
tp2438
ag137
ag141
asbsS'TTreeSplitConstructor_Threshold'
p2439
(i__main__
ClassDefinition
p2440
(dp2441
g4
I1
sg5
I01
sg6
g2439
sg7
S'TTreeSplitConstructor_Measure'
p2442
sg9
(lp2443
sg11
I00
sg12
(lp2444
g873
ag877
ag881
asbsS'TStopDistributionClustering_n'
p2445
(i__main__
ClassDefinition
p2446
(dp2447
g4
I1
sg5
I01
sg6
g2445
sg7
S'TStopDistributionClustering'
p2448
sg9
(lp2449
sg11
I00
sg12
(lp2450
(S'int'
p2451
g1302
g1302
S'number of clusters'
p2452
I0
I0
I01
tp2453
asbsS'TLWRLearner'
p2454
(i__main__
ClassDefinition
p2455
(dp2456
g4
I1
sg5
I01
sg6
g2454
sg7
S'TLearner'
p2457
sg9
(lp2458
sg11
I00
sg12
(lp2459
(S'TExamplesDistanceConstructor'
p2460
S'distanceConstructor'
p2461
g2461
S'constructor for object that will find the nearest neighbours'
p2462
I0
I0
I00
tp2463
a(S'TLinRegLearner'
p2464
S'linRegLearner'
p2465
g2465
S'learner that performs local linear regression'
p2466
I0
I0
I00
tp2467
a(S'float'
p2468
g793
g793
S'number of neighbours'
p2469
I0
I0
I01
tp2470
a(S'bool'
p2471
S'rankWeight'
p2472
g2472
S'use ranks instead of distances'
p2473
I0
I0
I01
tp2474
ag97
asbsS'TTreeExampleSplitter_UnknownsAsSelector'
p2475
(i__main__
ClassDefinition
p2476
(dp2477
g4
I1
sg5
I01
sg6
g2475
sg7
S'TTreeExampleSplitter'
p2478
sg9
(lp2479
sg11
I00
sg12
(lp2480
sbsS'TClassifier_Python'
p2481
(i__main__
ClassDefinition
p2482
(dp2483
g4
I1
sg5
I01
sg6
g2481
sg7
S'TClassifier'
p2484
sg9
(lp2485
sg11
I00
sg12
(lp2486
g83
ag87
asbsS'TFilter_isDefined'
p2487
(i__main__
ClassDefinition
p2488
(dp2489
g4
I1
sg5
I01
sg6
g2487
sg7
S'TFilter'
p2490
sg9
(lp2491
sg11
I00
sg12
(lp2492
(S'TAttributedBoolList'
p2493
S'check'
p2494
g2494
S'tells which attributes to check; checks all if the list is empty'
p2495
I01
I0
I00
tp2496
ag429
ag433
asbsS'TRemoveRedundantByQuality'
p2497
(i__main__
ClassDefinition
p2498
(dp2499
g4
I1
sg5
I01
sg6
g2497
sg7
S'TRemoveRedundant'
p2500
sg9
(lp2501
sg11
I00
sg12
(lp2502
(S'bool'
p2503
S'remeasure'
p2504
g2504
S'reapply the measure after removal'
p2505
I0
I0
I01
tp2506
a(S'float'
p2507
S'minQuality'
p2508
g2508
S'minimal acceptable quality'
p2509
I0
I0
I01
tp2510
a(S'int'
p2511
S'removeBut'
p2512
g2512
S'the desired number of attributes'
p2513
I0
I0
I01
tp2514
a(S'TMeasureAttribute'
p2515
S'measure'
p2516
g2516
S'attribute quality measure'
p2517
I0
I0
I00
tp2518
ag915
asbsS'TGraphAsList'
p2519
(i__main__
ClassDefinition
p2520
(dp2521
g4
I1
sg5
I01
sg6
g2519
sg7
S'TGraph'
p2522
sg9
(lp2523
sg11
I00
sg12
(lp2524
g1043
ag1047
ag1051
asbsS'TProbabilityEstimatorConstructor_m'
p2525
(i__main__
ClassDefinition
p2526
(dp2527
g4
I1
sg5
I01
sg6
g2525
sg7
S'TProbabilityEstimatorConstructor'
p2528
sg9
(lp2529
sg11
I00
sg12
(lp2530
(S'float'
p2531
g797
g797
S'parameter m for m-estimation'
p2532
I0
I0
I01
tp2533
a(S'bool'
p2534
S'renormalize'
p2535
g2535
S'computes the estimate on the original (not the normalized) distribution'
p2536
I0
I0
I01
tp2537
asbsS'TDistanceMap'
p2538
(i__main__
ClassDefinition
p2539
(dp2540
g4
I1
sg5
I01
sg6
g2538
sg7
S'TOrange'
p2541
sg9
(lp2542
sg11
I00
sg12
(lp2543
(S'int'
p2544
S'dim'
p2545
g2545
S'bitmap dimension (in cells)'
p2546
I01
I0
I01
tp2547
a(S'int'
p2548
S'matrixType'
p2549
g2549
S'0 lower, 1 upper, 2 symmetric'
p2550
I0
I0
I01
tp2551
a(S'TIntList'
p2552
S'elementIndices'
p2553
g2553
S'indices to elements (one for row + one at the end)'
p2554
I01
I0
I00
tp2555
asbsS'TDistanceMapConstructor'
p2556
(i__main__
ClassDefinition
p2557
(dp2558
g4
I1
sg5
I01
sg6
g2556
sg7
S'TOrange'
p2559
sg9
(lp2560
sg11
I00
sg12
(lp2561
(S'TSymMatrix'
p2562
S'distanceMatrix'
p2563
g2563
S'distance matrix'
p2564
I0
I0
I00
tp2565
a(S'TIntList'
p2566
S'order'
p2567
g2567
S'order of elements'
p2568
I0
I0
I00
tp2569
asbsS'TTransformValue'
p2570
(i__main__
ClassDefinition
p2571
(dp2572
g4
I1
sg5
I01
sg6
g2570
sg7
S'TOrange'
p2573
sg9
(lp2574
sg11
I01
sg12
(lp2575
g493
asbsS'TComputeDomainContingency_DomainTransformation'
p2576
(i__main__
ClassDefinition
p2577
(dp2578
g4
I1
sg5
I01
sg6
g2576
sg7
S'TComputeDomainContingency'
p2579
sg9
(lp2580
sg11
I00
sg12
(lp2581
(S'TDomainTransformerConstructor'
p2582
S'domainTransformerConstructor'
p2583
g2583
S'constructs a domain in which each attribute corresponds one of originals'
p2584
I0
I0
I00
tp2585
a(S'bool'
p2586
S'resultInOriginalDomain'
p2587
g2587
S'tells whether the resulting DomainContingency should consist of original attributes'
p2588
I0
I0
I01
tp2589
ag25
asbsS'TStopDistributionClustering_noBigChange'
p2590
(i__main__
ClassDefinition
p2591
(dp2592
g4
I1
sg5
I01
sg6
g2590
sg7
S'TStopDistributionClustering'
p2593
sg9
(lp2594
sg11
I00
sg12
(lp2595
sbsS'TTreePruner'
p2596
(i__main__
ClassDefinition
p2597
(dp2598
g4
I1
sg5
I01
sg6
g2596
sg7
S'TOrange'
p2599
sg9
(lp2600
sg11
I01
sg12
(lp2601
sbsS'TImputer_Python'
p2602
(i__main__
ClassDefinition
p2603
(dp2604
g4
I1
sg5
I01
sg6
g2602
sg7
S'TImputer'
p2605
sg9
(lp2606
sg11
I00
sg12
(lp2607
sbsS'TRuleLearner'
p2608
(i__main__
ClassDefinition
p2609
(dp2610
g4
I1
sg5
I01
sg6
g2608
sg7
S'TLearner'
p2611
sg9
(lp2612
sg11
I00
sg12
(lp2613
(S'TRuleDataStoppingCriteria'
p2614
S'dataStopping'
p2615
g2615
g1417
I0
I0
I00
tp2616
a(S'TRuleStoppingCriteria'
p2617
S'ruleStopping'
p2618
g2618
g1417
I0
I0
I00
tp2619
a(S'TRuleCovererAndRemover'
p2620
S'coverAndRemove'
p2621
g2621
g1417
I0
I0
I00
tp2622
a(S'TRuleFinder'
p2623
S'ruleFinder'
p2624
g2624
g1417
I0
I0
I00
tp2625
a(S'TRuleClassifierConstructor'
p2626
S'classifierConstructor'
p2627
g2627
S'classifier'
p2628
I0
I0
I00
tp2629
a(S'TProgressCallback'
p2630
S'progressCallback'
p2631
g2631
S'progress callback function'
p2632
I0
I0
I00
tp2633
a(S'bool'
p2634
S'storeExamples'
p2635
g2635
g1417
I0
I0
I01
tp2636
a(S'int'
p2637
S'targetClass'
p2638
g2638
g1417
I0
I0
I01
tp2639
a(S'TRuleList'
p2640
S'baseRules'
p2641
g2641
g1417
I0
I0
I00
tp2642
ag97
asbsS'TOrdinal2Continuous'
p2643
(i__main__
ClassDefinition
p2644
(dp2645
g4
I1
sg5
I01
sg6
g2643
sg7
S'TTransformValue'
p2646
sg9
(lp2647
sg11
I00
sg12
(lp2648
(S'float'
p2649
S'factor'
p2650
g2650
S'number of values'
p2651
I0
I0
I01
tp2652
ag493
asbsS'TTreeSplitConstructor_Combined'
p2653
(i__main__
ClassDefinition
p2654
(dp2655
g4
I1
sg5
I01
sg6
g2653
sg7
S'TTreeSplitConstructor'
p2656
sg9
(lp2657
sg11
I00
sg12
(lp2658
(S'TTreeSplitConstructor'
p2659
S'discreteSplitConstructor'
p2660
g2660
S'split constructor for discrete attributes'
p2661
I0
I0
I00
tp2662
a(S'TTreeSplitConstructor'
p2663
S'continuousSplitConstructor'
p2664
g2664
S'split constructor for continuous attributes'
p2665
I0
I0
I00
tp2666
ag881
asbsS'TTransformValue_Python'
p2667
(i__main__
ClassDefinition
p2668
(dp2669
g4
I1
sg5
I01
sg6
g2667
sg7
S'TTransformValue'
p2670
sg9
(lp2671
sg11
I00
sg12
(lp2672
g493
asbsS'TRuleStoppingCriteria_Python'
p2673
(i__main__
ClassDefinition
p2674
(dp2675
g4
I1
sg5
I01
sg6
g2673
sg7
S'TRuleStoppingCriteria'
p2676
sg9
(lp2677
sg11
I00
sg12
(lp2678
sbsS'TRuleEvaluator_Python'
p2679
(i__main__
ClassDefinition
p2680
(dp2681
g4
I1
sg5
I01
sg6
g2679
sg7
S'TRuleEvaluator'
p2682
sg9
(lp2683
sg11
I00
sg12
(lp2684
sbsS'TIGBySorting'
p2685
(i__main__
ClassDefinition
p2686
(dp2687
g4
I1
sg5
I01
sg6
g2685
sg7
S'TIGConstructor'
p2688
sg9
(lp2689
sg11
I00
sg12
(lp2690
sbsS'TConditionalProbabilityEstimator_ByRows'
p2691
(i__main__
ClassDefinition
p2692
(dp2693
g4
I1
sg5
I01
sg6
g2691
sg7
S'TConditionalProbabilityEstimator'
p2694
sg9
(lp2695
sg11
I00
sg12
(lp2696
(S'TProbabilityEstimatorList'
p2697
S'estimatorList'
p2698
g2698
S'A list of probability estimators'
p2699
I0
I0
I00
tp2700
ag111
ag115
asbsS'TProgressCallback'
p2701
(i__main__
ClassDefinition
p2702
(dp2703
g4
I1
sg5
I01
sg6
g2701
sg7
S'TOrange'
p2704
sg9
(lp2705
sg11
I01
sg12
(lp2706
sbsS'THierarchicalClustering'
p2707
(i__main__
ClassDefinition
p2708
(dp2709
g4
I1
sg5
I01
sg6
g2707
sg7
S'TOrange'
p2710
sg9
(lp2711
sg11
I00
sg12
(lp2712
(S'int'
p2713
S'linkage'
p2714
g2714
S'linkage'
p2715
I0
I0
I01
tp2716
a(S'bool'
p2717
S'overwriteMatrix'
p2718
g2718
S'if true (default is false) it will use (and destroy) the distance matrix given as argument'
p2719
I0
I0
I01
tp2720
a(S'TProgressCallback'
p2721
S'progressCallback'
p2722
g2722
S'progress callback function'
p2723
I0
I0
I00
tp2724
asbsS'TRuleBeamInitializer_Default'
p2725
(i__main__
ClassDefinition
p2726
(dp2727
g4
I1
sg5
I01
sg6
g2725
sg7
S'TRuleBeamInitializer'
p2728
sg9
(lp2729
sg11
I00
sg12
(lp2730
sbsS'TClassifierFromVar'
p2731
(i__main__
ClassDefinition
p2732
(dp2733
g4
I1
sg5
I01
sg6
g2731
sg7
S'TClassifier'
p2734
sg9
(lp2735
sg11
I00
sg12
(lp2736
(S'TVariable'
p2737
S'whichVar'
p2738
(g2738
S'variable'
p2739
tp2740
S' variable'
p2741
I0
I0
I00
tp2742
a(S'TTransformValue'
p2743
S'transformer'
p2744
g2744
S'transformer'
p2745
I0
I0
I00
tp2746
a(S'TDistribution'
p2747
S'distributionForUnknown'
p2748
g2748
S'distribution for unknown value'
p2749
I0
I0
I00
tp2750
a(S'bool'
p2751
S'transformUnknowns'
p2752
g2752
S'if false (default), unknowns stay unknown or are changed into distribution if given'
p2753
I0
I0
I01
tp2754
ag83
ag87
asbsS'TIM'
p2755
(i__main__
ClassDefinition
p2756
(dp2757
g4
I1
sg5
I01
sg6
g2755
sg7
S'TOrange'
p2758
sg9
(lp2759
sg11
I00
sg12
(lp2760
(S'int'
p2761
S'varType'
p2762
g2762
S'class variable type'
p2763
I0
I0
I01
tp2764
a(S'TExampleTable'
p2765
S'rowExamples'
p2766
g2766
S'examples with free attributes for each row'
p2767
I0
I0
I00
tp2768
asbsS'TClassifier'
p2769
(i__main__
ClassDefinition
p2770
(dp2771
g4
I1
sg5
I01
sg6
g2769
sg7
S'TOrange'
p2772
sg9
(lp2773
sg11
I00
sg12
(lp2774
g83
ag87
asbsS'TTreeSplitConstructor_Python'
p2775
(i__main__
ClassDefinition
p2776
(dp2777
g4
I1
sg5
I01
sg6
g2775
sg7
S'TTreeSplitConstructor'
p2778
sg9
(lp2779
sg11
I00
sg12
(lp2780
g881
asbsS'TIG'
p2781
(i__main__
ClassDefinition
p2782
(dp2783
g4
I1
sg5
I01
sg6
g2781
sg7
S'TOrange'
p2784
sg9
(lp2785
sg11
I00
sg12
(lp2786
sbsS'TMeasureAttribute_relief'
p2787
(i__main__
ClassDefinition
p2788
(dp2789
g4
I1
sg5
I01
sg6
g2787
sg7
S'TMeasureAttribute'
p2790
sg9
(lp2791
S'prevGenerator'
p2792
aS'prevDomain'
p2793
asg11
I00
sg12
(lp2794
(S'float'
p2795
g793
g793
S'number of neighbours'
p2796
I0
I0
I01
tp2797
a(S'float'
p2798
g797
g797
S'number of reference examples'
p2799
I0
I0
I01
tp2800
ag559
ag563
ag567
asbsS'TTreeExampleSplitter_Python'
p2801
(i__main__
ClassDefinition
p2802
(dp2803
g4
I1
sg5
I01
sg6
g2801
sg7
S'TTreeExampleSplitter'
p2804
sg9
(lp2805
sg11
I00
sg12
(lp2806
sbsS'TExampleGenerator'
p2807
(i__main__
ClassDefinition
p2808
(dp2809
g4
I1
sg5
I01
sg6
g2807
sg7
S'TOrange'
p2810
sg9
(lp2811
sg11
I01
sg12
(lp2812
g137
ag141
asbsS'TAdapterGenerator'
p2813
(i__main__
ClassDefinition
p2814
(dp2815
g4
I1
sg5
I01
sg6
g2813
sg7
S'TExampleGenerator'
p2816
sg9
(lp2817
sg11
I00
sg12
(lp2818
g137
ag141
asbsS'TIMFromExamples'
p2819
(i__main__
ClassDefinition
p2820
(dp2821
g4
I1
sg5
I01
sg6
g2819
sg7
S'TOrange'
p2822
sg9
(lp2823
sg11
I01
sg12
(lp2824
sbsS'TFilter_random'
p2825
(i__main__
ClassDefinition
p2826
(dp2827
g4
I1
sg5
I01
sg6
g2825
sg7
S'TFilter'
p2828
sg9
(lp2829
sg11
I00
sg12
(lp2830
(S'float'
p2831
S'prob'
p2832
g2832
S'probability of selecting an example'
p2833
I0
I0
I01
tp2834
a(S'TRandomGenerator'
p2835
S'randomGenerator'
p2836
g2836
S'random generator'
p2837
I0
I0
I00
tp2838
ag429
ag433
asbsS'TC45ExampleGenerator'
p2839
(i__main__
ClassDefinition
p2840
(dp2841
g4
I1
sg5
I01
sg6
g2839
sg7
S'TFileExampleGenerator'
p2842
sg9
(lp2843
sg11
I00
sg12
(lp2844
(S'TBoolList'
p2845
S'skip'
p2846
g2846
S'a boolean list, one element per attribute, denoting which attributes to skip'
p2847
I0
I0
I00
tp2848
ag125
ag129
ag133
ag137
ag141
asbsS'TExamplesDistanceConstructor_Hamiltonian'
p2849
(i__main__
ClassDefinition
p2850
(dp2851
g4
I1
sg5
I01
sg6
g2849
sg7
S'TExamplesDistanceConstructor'
p2852
sg9
(lp2853
sg11
I00
sg12
(lp2854
(S'bool'
p2855
S'ignoreClass'
p2856
g2856
S'if true (default), class value is ignored when computing distances'
p2857
I0
I0
I01
tp2858
a(S'bool'
p2859
S'ignoreUnknowns'
p2860
g2860
S'if true (default: false) unknown values are ignored in computation'
p2861
I0
I0
I01
tp2862
ag1580
asbsS'TProbabilityEstimatorConstructor_loess'
p2863
(i__main__
ClassDefinition
p2864
(dp2865
g4
I1
sg5
I01
sg6
g2863
sg7
S'TProbabilityEstimatorConstructor'
p2866
sg9
(lp2867
sg11
I00
sg12
(lp2868
(S'float'
p2869
S'windowProportion'
p2870
g2870
S'The proportion of points in a window for LR'
p2871
I0
I0
I01
tp2872
a(S'int'
p2873
S'nPoints'
p2874
g2874
S'The number of points on curve (negative means the given number of points is inserted in each interval)'
p2875
I0
I0
I01
tp2876
a(S'int'
p2877
S'distributionMethod'
p2878
g2878
S"Meaning of the 'nPoints'"
p2879
I0
I0
I01
tp2880
asbsS'TLogRegFitter'
p2881
(i__main__
ClassDefinition
p2882
(dp2883
g4
I1
sg5
I01
sg6
g2881
sg7
S'TOrange'
p2884
sg9
(lp2885
sg11
I01
sg12
(lp2886
sbsS'TMakeRandomIndicesCV'
p2887
(i__main__
ClassDefinition
p2888
(dp2889
g4
I1
sg5
I01
sg6
g2887
sg7
S'TMakeRandomIndices'
p2890
sg9
(lp2891
sg11
I00
sg12
(lp2892
(S'int'
p2893
S'folds'
p2894
g2894
S'number of folds'
p2895
I0
I0
I01
tp2896
ag455
ag459
ag463
asbsS'TPreprocessor_removeDuplicates'
p2897
(i__main__
ClassDefinition
p2898
(dp2899
g4
I1
sg5
I01
sg6
g2897
sg7
S'TPreprocessor'
p2900
sg9
(lp2901
sg11
I00
sg12
(lp2902
sbsS'TTreeExampleSplitter_UnknownsAsBranchSizes'
p2903
(i__main__
ClassDefinition
p2904
(dp2905
g4
I1
sg5
I01
sg6
g2903
sg7
S'TTreeExampleSplitter'
p2906
sg9
(lp2907
sg11
I00
sg12
(lp2908
sbsS'TExamplesDistanceConstructor_Normalized'
p2909
(i__main__
ClassDefinition
p2910
(dp2911
g4
I1
sg5
I01
sg6
g2909
sg7
S'TExamplesDistanceConstructor'
p2912
sg9
(lp2913
sg11
I01
sg12
(lp2914
g1572
ag1576
ag1580
asbsS'TCostWrapperLearner'
p2915
(i__main__
ClassDefinition
p2916
(dp2917
g4
I1
sg5
I01
sg6
g2915
sg7
S'TLearner'
p2918
sg9
(lp2919
sg11
I00
sg12
(lp2920
(S'TLearner'
p2921
S'basicLearner'
p2922
g2922
S'basic learner'
p2923
I0
I0
I00
tp2924
a(S'TCostMatrix'
p2925
S'costMatrix'
p2926
g2926
S'cost matrix'
p2927
I0
I0
I00
tp2928
ag97
asbsS'TFindNearest'
p2929
(i__main__
ClassDefinition
p2930
(dp2931
g4
I1
sg5
I01
sg6
g2929
sg7
S'TOrange'
p2932
sg9
(lp2933
sg11
I01
sg12
(lp2934
g691
ag695
asbsS'TLogRegFitter_Cholesky'
p2935
(i__main__
ClassDefinition
p2936
(dp2937
g4
I1
sg5
I01
sg6
g2935
sg7
S'TLogRegFitter'
p2938
sg9
(lp2939
sg11
I00
sg12
(lp2940
sbsS'TDistributionAssessor_Laplace'
p2941
(i__main__
ClassDefinition
p2942
(dp2943
g4
I1
sg5
I01
sg6
g2941
sg7
S'TDistributionAssessor'
p2944
sg9
(lp2945
sg11
I00
sg12
(lp2946
sbsS'TColumnAssessor_Relief'
p2947
(i__main__
ClassDefinition
p2948
(dp2949
g4
I1
sg5
I01
sg6
g2947
sg7
S'TColumnAssessor'
p2950
sg9
(lp2951
sg11
I00
sg12
(lp2952
sbsS'TClassifierByLookupTable'
p2953
(i__main__
ClassDefinition
p2954
(dp2955
g4
I1
sg5
I01
sg6
g2953
sg7
S'TClassifier'
p2956
sg9
(lp2957
sg11
I01
sg12
(lp2958
g75
ag79
ag83
ag87
asbsS'TRuleBeamFinder'
p2959
(i__main__
ClassDefinition
p2960
(dp2961
g4
I1
sg5
I01
sg6
g2959
sg7
S'TRuleFinder'
p2962
sg9
(lp2963
sg11
I00
sg12
(lp2964
(S'TRuleBeamInitializer'
p2965
S'initializer'
p2966
g2966
g1417
I0
I0
I00
tp2967
a(S'TRuleBeamRefiner'
p2968
S'refiner'
p2969
g2969
g1417
I0
I0
I00
tp2970
a(S'TRuleBeamCandidateSelector'
p2971
S'candidateSelector'
p2972
g2972
g1417
I0
I0
I00
tp2973
a(S'TRuleBeamFilter'
p2974
S'ruleFilter'
p2975
g2975
g1417
I0
I0
I00
tp2976
a(S'TRuleValidator'
p2977
S'ruleStoppingValidator'
p2978
g2978
g1417
I0
I0
I00
tp2979
a(S'TRuleValidator'
p2980
S'validator'
p2981
g2981
g1417
I0
I0
I00
tp2982
a(S'TRuleEvaluator'
p2983
S'evaluator'
p2984
g2984
g1417
I0
I0
I00
tp2985
asbsS'TFilter'
p2986
(i__main__
ClassDefinition
p2987
(dp2988
g4
I1
sg5
I01
sg6
g2986
sg7
S'TOrange'
p2989
sg9
(lp2990
sg11
I01
sg12
(lp2991
g429
ag433
asbsS'TC45Classifier'
p2992
(i__main__
ClassDefinition
p2993
(dp2994
g4
I1
sg5
I01
sg6
g2992
sg7
S'TClassifierFD'
p2995
sg9
(lp2996
sg11
I00
sg12
(lp2997
(S'TC45TreeNode'
p2998
S'tree'
p2999
g2999
S'tree'
p3000
I0
I0
I00
tp3001
ag205
ag83
ag87
asbsS'TMeasureAttribute_cost'
p3002
(i__main__
ClassDefinition
p3003
(dp3004
g4
I1
sg5
I01
sg6
g3002
sg7
S'TMeasureAttributeFromProbabilities'
p3005
sg9
(lp3006
sg11
I00
sg12
(lp3007
(S'TCostMatrix'
p3008
S'cost'
p3009
g3009
S'cost matrix'
p3010
I0
I0
I00
tp3011
ag547
ag551
ag555
ag559
ag563
ag567
asbsS'TImputerConstructor_minimal'
p3012
(i__main__
ClassDefinition
p3013
(dp3014
g4
I1
sg5
I01
sg6
g3012
sg7
S'TImputerConstructor'
p3015
sg9
(lp3016
sg11
I00
sg12
(lp3017
g151
asbsS'TClustersFromIM'
p3018
(i__main__
ClassDefinition
p3019
(dp3020
g4
I1
sg5
I01
sg6
g3018
sg7
S'TOrange'
p3021
sg9
(lp3022
sg11
I01
sg12
(lp3023
sbsS'TFilter_values'
p3024
(i__main__
ClassDefinition
p3025
(dp3026
g4
I1
sg5
I01
sg6
g3024
sg7
S'TFilter'
p3027
sg9
(lp3028
sg11
I00
sg12
(lp3029
(S'TValueFilterList'
p3030
S'conditions'
p3031
g3031
S'a list of filters'
p3032
I0
I0
I00
tp3033
a(S'bool'
p3034
S'conjunction'
p3035
g3035
S'if true, filter computes conjunction, otherwise disjunction'
p3036
I0
I0
I01
tp3037
ag429
ag433
asbsS'TClassifierForKMWeight'
p3038
(i__main__
ClassDefinition
p3039
(dp3040
g4
I1
sg5
I01
sg6
g3038
sg7
S'TClassifier'
p3041
sg9
(lp3042
sg11
I00
sg12
(lp3043
(S'int'
p3044
S'whichID'
p3045
g3045
S'Id of meta variable for time'
p3046
I0
I0
I01
tp3047
a(S'TVariable'
p3048
S'outcomeVar'
p3049
g3049
S'outcome variable'
p3050
I0
I0
I00
tp3051
a(S'int'
p3052
S'failIndex'
p3053
g3053
S"index of 'fail' value"
p3054
I0
I0
I01
tp3055
a(S'TKaplanMeier'
p3056
S'kaplanMeier'
p3057
g3057
S'Kaplan-Meier curve'
p3058
I0
I0
I00
tp3059
ag83
ag87
asbsS'TSymMatrix'
p3060
(i__main__
ClassDefinition
p3061
(dp3062
g4
I1
sg5
I01
sg6
g3060
sg7
S'TOrange'
p3063
sg9
(lp3064
sg11
I00
sg12
(lp3065
(S'int'
p3066
S'dim'
p3067
g3067
S'matrix dimension'
p3068
I01
I0
I01
tp3069
a(S'int'
p3070
S'matrixType'
p3071
g3071
S'0 lower, 1 upper, 2 symmetric, 3 lower_filled, 4 upper_filled'
p3072
I0
I0
I01
tp3073
asbsS'TSVMLearner'
p3074
(i__main__
ClassDefinition
p3075
(dp3076
g4
I1
sg5
I01
sg6
g3074
sg7
S'TLearner'
p3077
sg9
(lp3078
sg11
I00
sg12
(lp3079
(S'int'
p3080
S'svm_type'
p3081
S'type'
p3082
S' SVM type (C_SVC=0, NU_SVC, ONE_CLASS, C_SVR=3)'
p3083
I0
I0
I01
tp3084
a(S'int'
p3085
S'kernel_type'
p3086
S'kernel'
p3087
S' kernel type (LINEAR=0, POLY, RBF, SIGMOID=3)'
p3088
I0
I0
I01
tp3089
a(S'float'
p3090
S'degree'
p3091
g3091
S'polynomial kernel degree'
p3092
I0
I0
I01
tp3093
a(S'float'
p3094
S'gamma'
p3095
g3095
S'poly/rbf/sigm parameter'
p3096
I0
I0
I01
tp3097
a(S'float'
p3098
S'coef0'
p3099
g3099
S'poly/sigm parameter'
p3100
I0
I0
I01
tp3101
a(S'float'
p3102
S'cache_size'
p3103
g3103
S'cache size in MB'
p3104
I0
I0
I01
tp3105
a(S'float'
p3106
S'eps'
p3107
g3107
S'stopping criteria'
p3108
I0
I0
I01
tp3109
a(S'float'
p3110
S'C'
p3111
g3111
S'for C_SVC and C_SVR'
p3112
I0
I0
I01
tp3113
a(S'float'
p3114
S'nu'
p3115
g3115
S'for NU_SVC and ONE_CLASS'
p3116
I0
I0
I01
tp3117
a(S'float'
p3118
g1775
g1775
S'for C_SVR'
p3119
I0
I0
I01
tp3120
a(S'int'
p3121
S'max_iter'
p3122
g3122
S'maximal number of iterations'
p3123
I0
I0
I01
tp3124
a(S'float'
p3125
S'iter_mult'
p3126
g3126
S'epsilon multiplier'
p3127
I0
I0
I01
tp3128
ag97
asbsS'TImputerConstructor_defaults'
p3129
(i__main__
ClassDefinition
p3130
(dp3131
g4
I1
sg5
I01
sg6
g3129
sg7
S'TImputerConstructor'
p3132
sg9
(lp3133
sg11
I00
sg12
(lp3134
(S'TExample'
p3135
S'defaults'
p3136
g3136
S'default values to be imputed instead missing ones'
p3137
I0
I0
I00
tp3138
ag151
asbsS'TConditionalProbabilityEstimatorConstructor'
p3139
(i__main__
ClassDefinition
p3140
(dp3141
g4
I1
sg5
I01
sg6
g3139
sg7
S'TOrange'
p3142
sg9
(lp3143
sg11
I01
sg12
(lp3144
sbsS'TPreprocessor_takeMissingClasses'
p3145
(i__main__
ClassDefinition
p3146
(dp3147
g4
I1
sg5
I01
sg6
g3145
sg7
S'TPreprocessor'
p3148
sg9
(lp3149
sg11
I00
sg12
(lp3150
sbsS'TClustersFromIMByAssessor'
p3151
(i__main__
ClassDefinition
p3152
(dp3153
g4
I1
sg5
I01
sg6
g3151
sg7
S'TClustersFromIM'
p3154
sg9
(lp3155
sg11
I00
sg12
(lp3156
(S'TColumnAssessor'
p3157
S'columnAssessor'
p3158
g3158
S'column quality assessor'
p3159
I0
I0
I00
tp3160
a(S'TStopIMClusteringByAssessor'
p3161
S'stopCriterion'
p3162
g3162
S'stop criterion'
p3163
I0
I0
I00
tp3164
asbsS'TRuleValidator_LRS'
p3165
(i__main__
ClassDefinition
p3166
(dp3167
g4
I1
sg5
I01
sg6
g3165
sg7
S'TRuleValidator'
p3168
sg9
(lp3169
sg11
I00
sg12
(lp3170
(S'float'
p3171
S'alpha'
p3172
g3172
g1417
I0
I0
I01
tp3173
a(S'float'
p3174
S'min_coverage'
p3175
g3175
g1417
I0
I0
I01
tp3176
a(S'float'
p3177
S'max_rule_complexity'
p3178
g3178
g1417
I0
I0
I01
tp3179
asbsS'TLogRegFitter_Python'
p3180
(i__main__
ClassDefinition
p3181
(dp3182
g4
I1
sg5
I01
sg6
g3180
sg7
S'TLogRegFitter'
p3183
sg9
(lp3184
sg11
I00
sg12
(lp3185
sbsS'TMakeRandomIndices2'
p3186
(i__main__
ClassDefinition
p3187
(dp3188
g4
I1
sg5
I01
sg6
g3186
sg7
S'TMakeRandomIndices'
p3189
sg9
(lp3190
sg11
I00
sg12
(lp3191
(S'float'
p3192
S'p0'
p3193
g3193
S"a proportion or a number of 0's"
p3194
I0
I0
I01
tp3195
ag455
ag459
ag463
asbsS'TValueList'
p3196
(i__main__
ClassDefinition
p3197
(dp3198
g4
I1
sg5
I01
sg6
g3196
sg7
g1348
sg9
(lp3199
sg11
I00
sg12
(lp3200
(S'TVariable'
p3201
S'variable'
p3202
g3202
S'the variable to which the list applies'
p3203
I0
I0
I00
tp3204
asbsS'TTreeExampleSplitter_UnknownsToCommon'
p3205
(i__main__
ClassDefinition
p3206
(dp3207
g4
I1
sg5
I01
sg6
g3205
sg7
S'TTreeExampleSplitter'
p3208
sg9
(lp3209
sg11
I00
sg12
(lp3210
sbsS'TContDistribution'
p3211
(i__main__
ClassDefinition
p3212
(dp3213
g4
I1
sg5
I01
sg6
g3211
sg7
S'TDistribution'
p3214
sg9
(lp3215
sg11
I00
sg12
(lp3216
(S'TFloatList'
p3217
S'variances'
p3218
g3218
S'variances'
p3219
I0
I0
I00
tp3220
a(S'float'
p3221
S'sum'
p3222
g3222
S'weighted sum of elements (i.e. N*average)'
p3223
I01
I0
I01
tp3224
a(S'float'
p3225
S'sum2'
p3226
g3226
S'weighted sum of squares of elements'
p3227
I01
I0
I01
tp3228
ag727
ag731
ag735
ag739
ag743
ag747
ag751
ag755
asbsS'TTreeDescender_UnknownMergeAsSelector'
p3229
(i__main__
ClassDefinition
p3230
(dp3231
g4
I1
sg5
I01
sg6
g3229
sg7
g1079
sg9
(lp3232
sg11
I0
sg12
(lp3233
sbsS'TContingencyAttrClass'
p3234
(i__main__
ClassDefinition
p3235
(dp3236
g4
I1
sg5
I01
sg6
g3234
sg7
S'TContingencyClass'
p3237
sg9
(lp3238
sg11
I00
sg12
(lp3239
g1192
ag1198
ag1202
ag1206
ag1210
asbsS'TDomainTransformerConstructor'
p3240
(i__main__
ClassDefinition
p3241
(dp3242
g4
I1
sg5
I01
sg6
g3240
sg7
S'TOrange'
p3243
sg9
(lp3244
sg11
I01
sg12
(lp3245
(S'bool'
p3246
S'preservesOrder'
p3247
g3247
S'a flag, telling that original attributes have corresponding attribute in the same order'
p3248
I01
I0
I01
tp3249
a(S'bool'
p3250
S'preservesAttributes'
p3251
g3251
S'a flag, telling whether each original has a corresponding new attribute'
p3252
I01
I0
I01
tp3253
asbsS'TPythonValueSpecial'
p3254
(i__main__
ClassDefinition
p3255
(dp3256
g4
I1
sg5
I01
sg6
g3254
sg7
S'TOrange'
p3257
sg9
(lp3258
sg11
I00
sg12
(lp3259
(S'int'
p3260
S'valueType'
p3261
g3261
S'value type'
p3262
I0
I0
I01
tp3263
asbsS'TIGConstructor'
p3264
(i__main__
ClassDefinition
p3265
(dp3266
g4
I1
sg5
I01
sg6
g3264
sg7
S'TOrange'
p3267
sg9
(lp3268
sg11
I01
sg12
(lp3269
sbsS'TProbabilityEstimatorConstructor'
p3270
(i__main__
ClassDefinition
p3271
(dp3272
g4
I1
sg5
I01
sg6
g3270
sg7
S'TOrange'
p3273
sg9
(lp3274
sg11
I01
sg12
(lp3275
sbsS'TFloatVariable'
p3276
(i__main__
ClassDefinition
p3277
(dp3278
g4
I1
sg5
I01
sg6
g3276
sg7
S'TVariable'
p3279
sg9
(lp3280
sg11
I00
sg12
(lp3281
(S'float'
p3282
S'startValue'
p3283
g3283
S'lowest value'
p3284
I0
I0
I01
tp3285
a(S'float'
p3286
S'endValue'
p3287
g3287
S'highest value'
p3288
I0
I0
I01
tp3289
a(S'float'
p3290
S'stepValue'
p3291
g3291
S'step'
p3292
I0
I0
I01
tp3293
a(S'int'
p3294
S'numberOfDecimals'
p3295
g3295
S'number of digits after decimal point'
p3296
I0
I0
I01
tp3297
a(S'bool'
p3298
S'scientificFormat'
p3299
g3299
S'use scientific format in output'
p3300
I0
I0
I01
tp3301
a(S'int'
p3302
S'adjustDecimals'
p3303
g3303
S"adjust number of decimals according to the values converted (0 - no, 1 - yes, 2 - yes, but haven't seen any yet)"
p3304
I0
I0
I01
tp3305
ag233
ag237
ag241
ag245
ag249
ag253
ag257
asbsS'TImputer_random'
p3306
(i__main__
ClassDefinition
p3307
(dp3308
g4
I1
sg5
I01
sg6
g3306
sg7
S'TImputer'
p3309
sg9
(lp3310
sg11
I00
sg12
(lp3311
(S'bool'
p3312
S'imputeClass'
p3313
g3313
S'Tells whether to impute the class values, too (default: true)'
p3314
I0
I0
I01
tp3315
a(S'bool'
p3316
S'deterministic'
p3317
g3317
S"tells whether to initialize random by example's CRC (default: false)"
p3318
I0
I0
I01
tp3319
asbsS'TProbabilityEstimatorConstructor_kernel'
p3320
(i__main__
ClassDefinition
p3321
(dp3322
g4
I1
sg5
I01
sg6
g3320
sg7
S'TProbabilityEstimatorConstructor'
p3323
sg9
(lp3324
sg11
I00
sg12
(lp3325
(S'float'
p3326
S'minImpact'
p3327
g3327
S'Minimal impact the point must have to be counted'
p3328
I0
I0
I01
tp3329
a(S'float'
p3330
S'smoothing'
p3331
g3331
S'Smoothing factor'
p3332
I0
I0
I01
tp3333
a(S'int'
p3334
S'nPoints'
p3335
g3335
S'Number of points for curve (negative means the given number of points is inserted in each interval)'
p3336
I0
I0
I01
tp3337
asbsS'TRuleCovererAndRemover_Default'
p3338
(i__main__
ClassDefinition
p3339
(dp3340
g4
I1
sg5
I01
sg6
g3338
sg7
S'TRuleCovererAndRemover'
p3341
sg9
(lp3342
sg11
I00
sg12
(lp3343
sbsS'TP2NN'
p3344
(i__main__
ClassDefinition
p3345
(dp3346
g4
I1
sg5
I01
sg6
g3344
sg7
S'TPNN'
p3347
sg9
(lp3348
sg11
I00
sg12
(lp3349
g1524
ag1528
ag1532
ag1536
ag1540
ag1544
ag1548
ag205
ag83
ag87
asbsS'TFilter_Python'
p3350
(i__main__
ClassDefinition
p3351
(dp3352
g4
I1
sg5
I01
sg6
g3350
sg7
S'TFilter'
p3353
sg9
(lp3354
sg11
I00
sg12
(lp3355
g429
ag433
asbsS'TExamplesDistanceConstructor_Maximal'
p3356
(i__main__
ClassDefinition
p3357
(dp3358
g4
I1
sg5
I01
sg6
g3356
sg7
S'TExamplesDistanceConstructor_Normalized'
p3359
sg9
(lp3360
sg11
I00
sg12
(lp3361
g1572
ag1576
ag1580
asbsS'TTreeDescender_Python'
p3362
(i__main__
ClassDefinition
p3363
(dp3364
g4
I1
sg5
I01
sg6
g3362
sg7
S'TTreeDescender'
p3365
sg9
(lp3366
sg11
I00
sg12
(lp3367
sbsS'TSubsetsGenerator_constant'
p3368
(i__main__
ClassDefinition
p3369
(dp3370
g4
I1
sg5
I01
sg6
g3368
sg7
S'TSubsetsGenerator'
p3371
sg9
(lp3372
sg11
I00
sg12
(lp3373
(S'TVarList'
p3374
S'constant'
p3375
g3375
S'a subset that is returned (once!)'
p3376
I0
I0
I00
tp3377
ag183
asbsS'TGaussianNoiseGenerator'
p3378
(i__main__
ClassDefinition
p3379
(dp3380
g4
I1
sg5
I01
sg6
g3378
sg7
S'TChangeExampleGenerator'
p3381
sg9
(lp3382
sg11
I00
sg12
(lp3383
(S'TIntFloatList'
p3384
S'deviations'
p3385
g3385
S"deviations for attributes' values"
p3386
I0
I0
I00
tp3387
a(S'TRandomGenerator'
p3388
S'randomGenerator'
p3389
g3389
S'random generator'
p3390
I0
I0
I00
tp3391
ag137
ag141
asbsS'TClustersFromDistributionsByAssessor'
p3392
(i__main__
ClassDefinition
p3393
(dp3394
g4
I1
sg5
I01
sg6
g3392
sg7
S'TClustersFromDistributions'
p3395
sg9
(lp3396
sg11
I00
sg12
(lp3397
(S'TDistributionAssessor'
p3398
S'distributionAssessor'
p3399
g3399
S'column quality assessor'
p3400
I0
I0
I00
tp3401
a(S'TStopDistributionClustering'
p3402
S'stopCriterion'
p3403
g3403
S'stop criterion'
p3404
I0
I0
I00
tp3405
a(S'float'
p3406
S'minProfitProportion'
p3407
g3407
S'minimal merge profit'
p3408
I0
I0
I01
tp3409
asbsS'TDefaultClassifier'
p3410
(i__main__
ClassDefinition
p3411
(dp3412
g4
I1
sg5
I01
sg6
g3410
sg7
S'TClassifier'
p3413
sg9
(lp3414
sg11
I00
sg12
(lp3415
(S'TValue'
p3416
S'defaultVal'
p3417
g3417
S'default prediction'
p3418
I0
I0
I01
tp3419
a(S'TDistribution'
p3420
S'defaultDistribution'
p3421
g3421
S'default distribution'
p3422
I0
I0
I00
tp3423
ag83
ag87
asbsS'TColumnAssessor_Kramer'
p3424
(i__main__
ClassDefinition
p3425
(dp3426
g4
I1
sg5
I01
sg6
g3424
sg7
S'TColumnAssessor'
p3427
sg9
(lp3428
sg11
I00
sg12
(lp3429
sbsS'TDiscretization'
p3430
(i__main__
ClassDefinition
p3431
(dp3432
g4
I1
sg5
I01
sg6
g3430
sg7
S'TOrange'
p3433
sg9
(lp3434
sg11
I01
sg12
(lp3435
sbsS'TTreeSplitConstructor_Measure'
p3436
(i__main__
ClassDefinition
p3437
(dp3438
g4
I1
sg5
I01
sg6
g3436
sg7
S'TTreeSplitConstructor'
p3439
sg9
(lp3440
sg11
I01
sg12
(lp3441
g873
ag877
ag881
asbsS'TTreeNode'
p3442
(i__main__
ClassDefinition
p3443
(dp3444
g4
I1
sg5
I01
sg6
g3442
sg7
S'TOrange'
p3445
sg9
(lp3446
sg11
I00
sg12
(lp3447
(S'TClassifier'
p3448
S'nodeClassifier'
p3449
g3449
S'classifies an example'
p3450
I0
I0
I00
tp3451
a(S'TDistribution'
p3452
S'distribution'
p3453
g3453
S'distribution of classes in the node'
p3454
I0
I0
I00
tp3455
a(S'TDomainContingency'
p3456
S'contingency'
p3457
g3457
S'domain contingency for examples in the node'
p3458
I0
I0
I00
tp3459
a(S'TExampleGenerator'
p3460
S'examples'
p3461
g3461
S'learning examples (if stored)'
p3462
I0
I0
I00
tp3463
a(S'int'
p3464
S'weightID'
p3465
g3465
S'weightID used to construct this node'
p3466
I0
I0
I01
tp3467
a(S'TClassifier'
p3468
S'branchSelector'
p3469
g3469
S'classifier that select a branch for an example'
p3470
I0
I0
I00
tp3471
a(S'TTreeNodeList'
p3472
S'branches'
p3473
g3473
S'classifiers presenting the branches'
p3474
I0
I0
I00
tp3475
a(S'TStringList'
p3476
S'branchDescriptions'
p3477
g3477
S'descriptions of branches'
p3478
I0
I0
I00
tp3479
a(S'TDiscDistribution'
p3480
S'branchSizes'
p3481
g3481
S'numbers of examples in branches'
p3482
I0
I0
I00
tp3483
asbsS'TTransformValue_IsDefined'
p3484
(i__main__
ClassDefinition
p3485
(dp3486
g4
I1
sg5
I01
sg6
g3484
sg7
S'TTransformValue'
p3487
sg9
(lp3488
sg11
I00
sg12
(lp3489
g493
asbsS'TFilter_hasClassValue'
p3490
(i__main__
ClassDefinition
p3491
(dp3492
g4
I1
sg5
I01
sg6
g3490
sg7
S'TFilter'
p3493
sg9
(lp3494
sg11
I00
sg12
(lp3495
g429
ag433
asbsS'TStopDistributionClustering_binary'
p3496
(i__main__
ClassDefinition
p3497
(dp3498
g4
I1
sg5
I01
sg6
g3496
sg7
S'TStopDistributionClustering'
p3499
sg9
(lp3500
sg11
I00
sg12
(lp3501
sbsS'TIMByRows'
p3502
(i__main__
ClassDefinition
p3503
(dp3504
g4
I1
sg5
I01
sg6
g3502
sg7
S'TOrange'
p3505
sg9
(lp3506
sg11
I00
sg12
(lp3507
(S'int'
p3508
S'varType'
p3509
g3509
S'class variable type'
p3510
I0
I0
I01
tp3511
asbsS'TRuleFinder'
p3512
(i__main__
ClassDefinition
p3513
(dp3514
g4
I1
sg5
I01
sg6
g3512
sg7
S'TOrange'
p3515
sg9
(lp3516
sg11
I01
sg12
(lp3517
g2982
ag2985
asbsS'TClassifierByExampleTable'
p3518
(i__main__
ClassDefinition
p3519
(dp3520
g4
I1
sg5
I01
sg6
g3518
sg7
S'TClassifierFD'
p3521
sg9
(lp3522
sg11
I00
sg12
(lp3523
(S'TExampleTable'
p3524
S'sortedExamples'
p3525
g3525
S'a table of examples'
p3526
I0
I0
I00
tp3527
a(S'bool'
p3528
S'containsUnknowns'
p3529
g3529
S'if true, the table contains unknown values'
p3530
I0
I0
I01
tp3531
a(S'TClassifier'
p3532
S'classifierForUnknown'
p3533
g3533
S'a classifier for unknown cases'
p3534
I0
I0
I00
tp3535
a(S'TEFMDataDescription'
p3536
S'dataDescription'
p3537
g3537
S'data description'
p3538
I0
I0
I00
tp3539
ag205
ag83
ag87
asbsNNsS'TChangeExampleGenerator'
p3540
(i__main__
ClassDefinition
p3541
(dp3542
g4
I1
sg5
I01
sg6
g3540
sg7
S'TAdapterGenerator'
p3543
sg9
(lp3544
sg11
I01
sg12
(lp3545
g137
ag141
asbsS'TRule'
p3546
(i__main__
ClassDefinition
p3547
(dp3548
g4
I1
sg5
I01
sg6
g3546
sg7
S'TOrange'
p3549
sg9
(lp3550
sg11
I00
sg12
(lp3551
(S'TFilter'
p3552
S'filter'
p3553
g3553
S'stored filter for this rule'
p3554
I0
I0
I00
tp3555
a(S'TClassifier'
p3556
S'classifier'
p3557
g3557
S'classifies an example'
p3558
I0
I0
I00
tp3559
a(S'TLearner'
p3560
S'learner'
p3561
g3561
S'learns a classifier from data'
p3562
I0
I0
I00
tp3563
a(S'TDistribution'
p3564
S'classDistribution'
p3565
g3565
S'distribution of classes covered by the rule'
p3566
I0
I0
I00
tp3567
a(S'TExampleTable'
p3568
S'examples'
p3569
g3569
S'covered examples'
p3570
I0
I0
I00
tp3571
a(S'int'
p3572
S'weightID'
p3573
g3573
S'weight for the stored examples'
p3574
I0
I0
I01
tp3575
a(S'float'
p3576
S'quality'
p3577
g3577
S'some measure of rule quality'
p3578
I0
I0
I01
tp3579
a(S'float'
p3580
S'complexity'
p3581
g3581
g1417
I0
I0
I01
tp3582
asbsS'TClassifierByLookupTable2'
p3583
(i__main__
ClassDefinition
p3584
(dp3585
g4
I1
sg5
I01
sg6
g3583
sg7
S'TClassifierByLookupTable'
p3586
sg9
(lp3587
sg11
I00
sg12
(lp3588
(S'TVariable'
p3589
S'variable1'
p3590
g3590
S'the first attribute used for classification'
p3591
I01
I0
I00
tp3592
a(S'TVariable'
p3593
S'variable2'
p3594
g3594
S'the second attribute used for classification'
p3595
I01
I0
I00
tp3596
a(S'int'
p3597
S'noOfValues1'
p3598
g3598
S'number of values of the first attribute'
p3599
I01
I0
I01
tp3600
a(S'int'
p3601
S'noOfValues2'
p3602
g3602
S'number of values of the second attribute'
p3603
I01
I0
I01
tp3604
a(S'TEFMDataDescription'
p3605
S'dataDescription'
p3606
g3606
S'data description'
p3607
I0
I0
I00
tp3608
ag75
ag79
ag83
ag87
asbsS'TPreprocessor_addClassNoise'
p3609
(i__main__
ClassDefinition
p3610
(dp3611
g4
I1
sg5
I01
sg6
g3609
sg7
S'TPreprocessor'
p3612
sg9
(lp3613
sg11
I00
sg12
(lp3614
(S'float'
p3615
S'proportion'
p3616
g3616
S'proportion of changed class values'
p3617
I0
I0
I01
tp3618
a(S'TRandomGenerator'
p3619
S'randomGenerator'
p3620
g3620
S'random number generator'
p3621
I0
I0
I00
tp3622
asbsS'TClassifierByLookupTable1'
p3623
(i__main__
ClassDefinition
p3624
(dp3625
g4
I1
sg5
I01
sg6
g3623
sg7
S'TClassifierByLookupTable'
p3626
sg9
(lp3627
sg11
I00
sg12
(lp3628
(S'TVariable'
p3629
S'variable1'
p3630
(g3630
S'variable'
p3631
tp3632
S' attribute used for classification'
p3633
I01
I0
I00
tp3634
ag75
ag79
ag83
ag87
asbsS'TRuleClassifierConstructor_Python'
p3635
(i__main__
ClassDefinition
p3636
(dp3637
g4
I1
sg5
I01
sg6
g3635
sg7
S'TRuleClassifierConstructor'
p3638
sg9
(lp3639
sg11
I00
sg12
(lp3640
sbsS'TRemoveRedundantOneValue'
p3641
(i__main__
ClassDefinition
p3642
(dp3643
g4
I1
sg5
I01
sg6
g3641
sg7
S'TRemoveRedundant'
p3644
sg9
(lp3645
sg11
I00
sg12
(lp3646
(S'bool'
p3647
S'onData'
p3648
g3648
S'observe the actual number of value on the data (not on attribute definitions)'
p3649
I0
I0
I01
tp3650
ag915
asbsS'TDistributionAssessor_Relief'
p3651
(i__main__
ClassDefinition
p3652
(dp3653
g4
I1
sg5
I01
sg6
g3651
sg7
S'TDistributionAssessor'
p3654
sg9
(lp3655
sg11
I00
sg12
(lp3656
sbsS'TEnumVariable'
p3657
(i__main__
ClassDefinition
p3658
(dp3659
g4
I1
sg5
I01
sg6
g3657
sg7
S'TVariable'
p3660
sg9
(lp3661
sg11
I00
sg12
(lp3662
(S'TStringList'
p3663
S'values'
p3664
g3664
S"attribute's values"
p3665
I0
I0
I00
tp3666
a(S'int'
p3667
S'baseValue'
p3668
g3668
S'the index of the base value'
p3669
I0
I0
I01
tp3670
ag233
ag237
ag241
ag245
ag249
ag253
ag257
asbsS'TConditionalProbabilityEstimatorConstructor_loess'
p3671
(i__main__
ClassDefinition
p3672
(dp3673
g4
I1
sg5
I01
sg6
g3671
sg7
S'TConditionalProbabilityEstimatorConstructor'
p3674
sg9
(lp3675
sg11
I00
sg12
(lp3676
(S'float'
p3677
S'windowProportion'
p3678
g3678
S'The proportion of points in a window for LR'
p3679
I0
I0
I01
tp3680
a(S'int'
p3681
S'nPoints'
p3682
g3682
S'The number of points on curve'
p3683
I0
I0
I01
tp3684
a(S'int'
p3685
S'distributionMethod'
p3686
g3686
S"Meaning of the 'nPoints'"
p3687
I0
I0
I01
tp3688
asbsS'TPreprocessor_addMissing'
p3689
(i__main__
ClassDefinition
p3690
(dp3691
g4
I1
sg5
I01
sg6
g3689
sg7
S'TPreprocessor'
p3692
sg9
(lp3693
sg11
I00
sg12
(lp3694
(S'TVariableFloatMap'
p3695
S'proportions'
p3696
g3696
S'proportion of removed values for individual values'
p3697
I0
I0
I00
tp3698
a(S'float'
p3699
S'defaultProportion'
p3700
g3700
S'default proportion of removed values (for attributes not specified above)'
p3701
I0
I0
I01
tp3702
a(S'int'
p3703
S'specialType'
p3704
g3704
S'special value type (1=DC, 2=DK)'
p3705
I0
I0
I01
tp3706
a(S'TRandomGenerator'
p3707
S'randomGenerator'
p3708
g3708
S'random number generator'
p3709
I0
I0
I00
tp3710
asbsS'TRuleBeamCandidateSelector'
p3711
(i__main__
ClassDefinition
p3712
(dp3713
g4
I1
sg5
I01
sg6
g3711
sg7
S'TOrange'
p3714
sg9
(lp3715
sg11
I01
sg12
(lp3716
sbsS'TSubsetsGenerator_minMaxSize'
p3717
(i__main__
ClassDefinition
p3718
(dp3719
g4
I1
sg5
I01
sg6
g3717
sg7
S'TSubsetsGenerator'
p3720
sg9
(lp3721
sg11
I00
sg12
(lp3722
(S'int'
p3723
S'min'
p3724
g3724
S'minimal subset size'
p3725
I0
I0
I01
tp3726
a(S'int'
p3727
S'max'
p3728
g3728
S'maximal subset size'
p3729
I0
I0
I01
tp3730
ag183
asbsS'TMakeRandomIndicesN'
p3731
(i__main__
ClassDefinition
p3732
(dp3733
g4
I1
sg5
I01
sg6
g3731
sg7
S'TMakeRandomIndices'
p3734
sg9
(lp3735
sg11
I00
sg12
(lp3736
(S'TFloatList'
p3737
g1775
g1775
S'probabilities of indices (last is 1-sum(p))'
p3738
I0
I0
I00
tp3739
ag455
ag459
ag463
asbsS'TTreeExampleSplitter_UnknownsToAll'
p3740
(i__main__
ClassDefinition
p3741
(dp3742
g4
I1
sg5
I01
sg6
g3740
sg7
S'TTreeExampleSplitter'
p3743
sg9
(lp3744
sg11
I00
sg12
(lp3745
sbsS'TValueFilter_stringList'
p3746
(i__main__
ClassDefinition
p3747
(dp3748
g4
I1
sg5
I01
sg6
g3746
sg7
S'TValueFilter'
p3749
sg9
(lp3750
sg11
I00
sg12
(lp3751
(S'TStringList'
p3752
S'values'
p3753
g3753
S'accepted values'
p3754
I0
I0
I00
tp3755
a(S'bool'
p3756
S'caseSensitive'
p3757
g3757
S'if true (default), the comparison is case sensitive'
p3758
I0
I0
I01
tp3759
ag665
ag669
asbsS'TContingencyClass'
p3760
(i__main__
ClassDefinition
p3761
(dp3762
g4
I1
sg5
I01
sg6
g3760
sg7
S'TContingency'
p3763
sg9
(lp3764
sg11
I01
sg12
(lp3765
g1192
ag1198
ag1202
ag1206
ag1210
asbsS'TAssociationClassifier'
p3766
(i__main__
ClassDefinition
p3767
(dp3768
g4
I1
sg5
I01
sg6
g3766
sg7
S'TClassifierFD'
p3769
sg9
(lp3770
sg11
I00
sg12
(lp3771
(S'TAssociationRules'
p3772
S'rules'
p3773
g3773
S'association rules'
p3774
I0
I0
I00
tp3775
a(S'int'
p3776
S'voteWeight'
p3777
g3777
S'vote weight (s=support, c=confidence, p=product)'
p3778
I0
I0
I01
tp3779
ag205
ag83
ag87
asbsS'TDomainDistributions'
p3780
(i__main__
ClassDefinition
p3781
(dp3782
g4
I1
sg5
I01
sg6
g3780
sg7
g1348
sg9
(lp3783
sg11
I00
sg12
(lp3784
sbsS'TDomain'
p3785
(i__main__
ClassDefinition
p3786
(dp3787
g4
I1
sg5
I01
sg6
g3785
sg7
S'TOrange'
p3788
sg9
(lp3789
sg11
I00
sg12
(lp3790
g1736
ag1740
ag1744
ag1748
asbsS'TTreePruner_SameMajority'
p3791
(i__main__
ClassDefinition
p3792
(dp3793
g4
I1
sg5
I01
sg6
g3791
sg7
S'TTreePruner'
p3794
sg9
(lp3795
sg11
I00
sg12
(lp3796
sbsS'TExampleDistConstructor'
p3797
(i__main__
ClassDefinition
p3798
(dp3799
g4
I1
sg5
I01
sg6
g3797
sg7
S'TOrange'
p3800
sg9
(lp3801
sg11
I01
sg12
(lp3802
sbsS'TIMByIMByRows'
p3803
(i__main__
ClassDefinition
p3804
(dp3805
g4
I1
sg5
I01
sg6
g3803
sg7
S'TIMConstructor'
p3806
sg9
(lp3807
sg11
I00
sg12
(lp3808
g827
asbsS'TDiscrete2Continuous'
p3809
(i__main__
ClassDefinition
p3810
(dp3811
g4
I1
sg5
I01
sg6
g3809
sg7
S'TTransformValue'
p3812
sg9
(lp3813
sg11
I00
sg12
(lp3814
(S'int'
p3815
S'value'
p3816
g3816
S'target value'
p3817
I0
I0
I01
tp3818
a(S'bool'
p3819
S'invert'
p3820
g3820
S'give 1.0 to values not equal to the target'
p3821
I0
I0
I01
tp3822
a(S'bool'
p3823
S'zeroBased'
p3824
g3824
S'if true (default) it gives values 0.0 and 1.0; else -1.0 and 1.0, 0.0 for undefined'
p3825
I0
I0
I01
tp3826
ag493
asbsS'TDomainDiscretization'
p3827
(i__main__
ClassDefinition
p3828
(dp3829
g4
I1
sg5
I01
sg6
g3827
sg7
S'TOrange'
p3830
sg9
(lp3831
sg11
I00
sg12
(lp3832
(S'TDiscretization'
p3833
S'discretization'
p3834
g3834
S'discretization'
p3835
I0
I0
I00
tp3836
asbsS'TColumnAssessor_m'
p3837
(i__main__
ClassDefinition
p3838
(dp3839
g4
I1
sg5
I01
sg6
g3837
sg7
S'TColumnAssessor'
p3840
sg9
(lp3841
sg11
I00
sg12
(lp3842
(S'float'
p3843
g797
g797
S'm for m-estimate'
p3844
I0
I0
I01
tp3845
asbsS'TImputer_defaults'
p3846
(i__main__
ClassDefinition
p3847
(dp3848
g4
I1
sg5
I01
sg6
g3846
sg7
S'TImputer'
p3849
sg9
(lp3850
sg11
I00
sg12
(lp3851
(S'TExample'
p3852
S'defaults'
p3853
g3853
S'values that are to be inserted instead of missing ones'
p3854
I0
I0
I00
tp3855
asbsS'TContingency'
p3856
(i__main__
ClassDefinition
p3857
(dp3858
g4
I1
sg5
I01
sg6
g3856
sg7
S'TOrange'
p3859
sg9
(lp3860
sg11
I00
sg12
(lp3861
g1192
ag1198
ag1202
ag1206
ag1210
asbsS'TStringValue'
p3862
(i__main__
ClassDefinition
p3863
(dp3864
g4
I1
sg5
I01
sg6
g3862
sg7
S'TSomeValue'
p3865
sg9
(lp3866
sg11
I00
sg12
(lp3867
sbsS'TClassifierGenerator'
p3868
(i__main__
ClassDefinition
p3869
(dp3870
g4
I1
sg5
I01
sg6
g3868
sg7
S'TExampleGenerator'
p3871
sg9
(lp3872
sg11
I00
sg12
(lp3873
(S'TClassifier'
p3874
S'classify'
p3875
g3875
S'classifier'
p3876
I0
I0
I00
tp3877
ag137
ag141
asbsS'TRuleDataStoppingCriteria_Python'
p3878
(i__main__
ClassDefinition
p3879
(dp3880
g4
I1
sg5
I01
sg6
g3878
sg7
S'TRuleDataStoppingCriteria'
p3881
sg9
(lp3882
sg11
I00
sg12
(lp3883
sbsS'TTreeDescender_UnknownToCommonSelector'
p3884
(i__main__
ClassDefinition
p3885
(dp3886
g4
I1
sg5
I01
sg6
g3884
sg7
g1079
sg9
(lp3887
sg11
I0
sg12
(lp3888
sbsS'THierarchicalCluster'
p3889
(i__main__
ClassDefinition
p3890
(dp3891
g4
I1
sg5
I01
sg6
g3889
sg7
S'TOrange'
p3892
sg9
(lp3893
sg11
I00
sg12
(lp3894
(S'THierarchicalClusterList'
p3895
S'branches'
p3896
g3896
S'subclusters'
p3897
I0
I0
I00
tp3898
a(S'float'
p3899
S'height'
p3900
g3900
S'height'
p3901
I0
I0
I01
tp3902
a(S'TIntList'
p3903
S'mapping'
p3904
g3904
S'indices to the list of all elements in the clustering'
p3905
I0
I0
I00
tp3906
a(S'int'
p3907
S'first'
p3908
g3908
S"the index into 'elements' to the first element of the cluster"
p3909
I0
I0
I01
tp3910
a(S'int'
p3911
S'last'
p3912
g3912
S"the index into 'elements' to the one after the last element of the cluster"
p3913
I0
I0
I01
tp3914
asbsS'TPreprocessIM'
p3915
(i__main__
ClassDefinition
p3916
(dp3917
g4
I1
sg5
I01
sg6
g3915
sg7
S'TOrange'
p3918
sg9
(lp3919
sg11
I01
sg12
(lp3920
sbsS'TRuleEvaluator_Laplace'
p3921
(i__main__
ClassDefinition
p3922
(dp3923
g4
I1
sg5
I01
sg6
g3921
sg7
S'TRuleEvaluator'
p3924
sg9
(lp3925
sg11
I00
sg12
(lp3926
sbsS'TColumnAssessor_N'
p3927
(i__main__
ClassDefinition
p3928
(dp3929
g4
I1
sg5
I01
sg6
g3927
sg7
S'TColumnAssessor'
p3930
sg9
(lp3931
sg11
I00
sg12
(lp3932
sbsS'TPreprocessor_dropMissing'
p3933
(i__main__
ClassDefinition
p3934
(dp3935
g4
I1
sg5
I01
sg6
g3933
sg7
S'TPreprocessor'
p3936
sg9
(lp3937
sg11
I00
sg12
(lp3938
sbsS'TFeatureByMinComplexity'
p3939
(i__main__
ClassDefinition
p3940
(dp3941
g4
I1
sg5
I01
sg6
g3939
sg7
S'TFeatureInducer'
p3942
sg9
(lp3943
sg11
I00
sg12
(lp3944
(S'TColorIG'
p3945
S'colorIG'
p3946
g3946
S'graph coloring algorithm'
p3947
I0
I0
I00
tp3948
a(S'int'
p3949
S'completion'
p3950
g3950
S'decides how to determine the class for points not covered by any cluster'
p3951
I0
I0
I01
tp3952
asbsS'TExample'
p3953
(i__main__
ClassDefinition
p3954
(dp3955
g4
I1
sg5
I01
sg6
g3953
sg7
S'TOrange'
p3956
sg9
(lp3957
sg11
I00
sg12
(lp3958
g2048
asbsS'TFixedDiscretization'
p3959
(i__main__
ClassDefinition
p3960
(dp3961
g4
I1
sg5
I01
sg6
g3959
sg7
S'TDiscretization'
p3962
sg9
(lp3963
sg11
I00
sg12
(lp3964
(S'TFloatList'
p3965
S'points'
p3966
g3966
S'cut-off points'
p3967
I0
I0
I00
tp3968
asbsS'TDomainContingency'
p3969
(i__main__
ClassDefinition
p3970
(dp3971
g4
I1
sg5
I01
sg6
g3969
sg7
g1348
sg9
(lp3972
sg11
I00
sg12
(lp3973
(S'TDistribution'
p3974
S'classes'
p3975
g3975
S'distribution of class values'
p3976
I01
I0
I00
tp3977
a(S'bool'
p3978
S'classIsOuter'
p3979
g3979
S'tells whether the class is the outer variable'
p3980
I01
I0
I01
tp3981
asbsS'TPreprocessor_addGaussianClassNoise'
p3982
(i__main__
ClassDefinition
p3983
(dp3984
g4
I1
sg5
I01
sg6
g3982
sg7
S'TPreprocessor'
p3985
sg9
(lp3986
sg11
I00
sg12
(lp3987
(S'float'
p3988
S'deviation'
p3989
g3989
S'class deviation'
p3990
I0
I0
I01
tp3991
a(S'TRandomGenerator'
p3992
S'randomGenerator'
p3993
g3993
S'random number generator'
p3994
I0
I0
I00
tp3995
asbsS'TRuleDataStoppingCriteria'
p3996
(i__main__
ClassDefinition
p3997
(dp3998
g4
I1
sg5
I01
sg6
g3996
sg7
S'TOrange'
p3999
sg9
(lp4000
sg11
I01
sg12
(lp4001
sbsS'TPreprocessor_filter'
p4002
(i__main__
ClassDefinition
p4003
(dp4004
g4
I1
sg5
I01
sg6
g4002
sg7
S'TPreprocessor'
p4005
sg9
(lp4006
sg11
I00
sg12
(lp4007
(S'TFilter'
p4008
S'filter'
p4009
g4009
S'filter'
p4010
I0
I0
I00
tp4011
asbsS'TExampleDistBySorting'
p4012
(i__main__
ClassDefinition
p4013
(dp4014
g4
I1
sg5
I01
sg6
g4012
sg7
S'TExampleDistConstructor'
p4015
sg9
(lp4016
sg11
I00
sg12
(lp4017
sbsS'TGraphAsMatrix'
p4018
(i__main__
ClassDefinition
p4019
(dp4020
g4
I1
sg5
I01
sg6
g4018
sg7
S'TGraph'
p4021
sg9
(lp4022
sg11
I00
sg12
(lp4023
g1043
ag1047
ag1051
asbsS'TLWRClassifier'
p4024
(i__main__
ClassDefinition
p4025
(dp4026
g4
I1
sg5
I01
sg6
g4024
sg7
S'TClassifierFD'
p4027
sg9
(lp4028
sg11
I00
sg12
(lp4029
(S'TFindNearest'
p4030
S'findNearest'
p4031
g4031
S'object that find nearest neighbours'
p4032
I0
I0
I00
tp4033
a(S'TLinRegLearner'
p4034
S'linRegLearner'
p4035
g4035
S'learner the performs local linear regression'
p4036
I0
I0
I00
tp4037
a(S'float'
p4038
g793
g793
S'number of neighbours'
p4039
I0
I0
I01
tp4040
a(S'bool'
p4041
S'rankWeight'
p4042
g4042
S'use ranks instead of distances'
p4043
I0
I0
I01
tp4044
a(S'int'
p4045
S'weightID'
p4046
g4046
S"weights of examples stored in 'findNearest'"
p4047
I0
I0
I01
tp4048
ag205
ag83
ag87
asbsS'TValueFilter_discrete'
p4049
(i__main__
ClassDefinition
p4050
(dp4051
g4
I1
sg5
I01
sg6
g4049
sg7
S'TValueFilter'
p4052
sg9
(lp4053
sg11
I00
sg12
(lp4054
(S'TValueList'
p4055
S'values'
p4056
g4056
S'accepted values'
p4057
I0
I0
I00
tp4058
ag665
ag669
asbsS'TComputeDomainContingency'
p4059
(i__main__
ClassDefinition
p4060
(dp4061
g4
I1
sg5
I01
sg6
g4059
sg7
S'TOrange'
p4062
sg9
(lp4063
sg11
I00
sg12
(lp4064
g25
asbsS'TAssociationRulesInducer'
p4065
(i__main__
ClassDefinition
p4066
(dp4067
g4
I1
sg5
I01
sg6
g4065
sg7
S'TOrange'
p4068
sg9
(lp4069
sg11
I00
sg12
(lp4070
(S'int'
p4071
S'maxItemSets'
p4072
g4072
S'maximal number of itemsets (increase if you want)'
p4073
I0
I0
I01
tp4074
a(S'float'
p4075
S'confidence'
p4076
g4076
S'required confidence'
p4077
I0
I0
I01
tp4078
a(S'float'
p4079
S'support'
p4080
g4080
S'required support'
p4081
I0
I0
I01
tp4082
a(S'bool'
p4083
S'classificationRules'
p4084
g4084
S'if true, rules will have the class and only the class attribute on the right-hand side'
p4085
I0
I0
I01
tp4086
asbsS'TTreeStopCriteria'
p4087
(i__main__
ClassDefinition
p4088
(dp4089
g4
I1
sg5
I01
sg6
g4087
sg7
S'TOrange'
p4090
sg9
(lp4091
sg11
I00
sg12
(lp4092
sbsS'TPreprocessor_addMissingClasses'
p4093
(i__main__
ClassDefinition
p4094
(dp4095
g4
I1
sg5
I01
sg6
g4093
sg7
S'TPreprocessor'
p4096
sg9
(lp4097
sg11
I00
sg12
(lp4098
(S'float'
p4099
S'proportion'
p4100
g4100
S'proportion of removed class values'
p4101
I0
I0
I01
tp4102
a(S'int'
p4103
S'specialType'
p4104
g4104
S'special value type (1=DC, 2=DK)'
p4105
I0
I0
I01
tp4106
a(S'TRandomGenerator'
p4107
S'randomGenerator'
p4108
g4108
S'random number generator'
p4109
I0
I0
I00
tp4110
asbsS'TLookupLearner'
p4111
(i__main__
ClassDefinition
p4112
(dp4113
g4
I1
sg5
I01
sg6
g4111
sg7
S'TLearner'
p4114
sg9
(lp4115
sg11
I00
sg12
(lp4116
(S'TLearner'
p4117
S'learnerForUnknown'
p4118
g4118
S'a learner for classifying cases not found in the table'
p4119
I0
I0
I00
tp4120
a(S'bool'
p4121
S'allowFastLookups'
p4122
g4122
S'if true, it constructs LookupClassifiers for <=3 attributes'
p4123
I0
I0
I01
tp4124
a(S'int'
p4125
S'unknownsHandling'
p4126
g4126
S'0 omit examples with unknowns, 1 distribute them, 2 keep them in table'
p4127
I0
I0
I01
tp4128
ag97
asbsS'TBasketExampleGenerator'
p4129
(i__main__
ClassDefinition
p4130
(dp4131
g4
I1
sg5
I01
sg6
g4129
sg7
S'TFileExampleGenerator'
p4132
sg9
(lp4133
sg11
I00
sg12
(lp4134
(S'bool'
p4135
S'dontStore'
p4136
g4136
S'disables items storing'
p4137
I0
I0
I01
tp4138
a(S'bool'
p4139
S'dontCheckStored'
p4140
g4140
S'disables items lookup in the global cache'
p4141
I0
I0
I01
tp4142
a(S'TDomain'
p4143
S'sourceDomain'
p4144
g4144
S'domain with items that can be reused'
p4145
I0
I0
I00
tp4146
ag125
ag129
ag133
ag137
ag141
asbsS'TRuleEvaluator_Entropy'
p4147
(i__main__
ClassDefinition
p4148
(dp4149
g4
I1
sg5
I01
sg6
g4147
sg7
S'TRuleEvaluator'
p4150
sg9
(lp4151
sg11
I00
sg12
(lp4152
sbsS'TDistribution'
p4153
(i__main__
ClassDefinition
p4154
(dp4155
g4
I1
sg5
I01
sg6
g4153
sg7
S'TSomeValue'
p4156
sg9
(lp4157
sg11
I01
sg12
(lp4158
g727
ag731
ag735
ag739
ag743
ag747
ag751
ag755
asbsS'TExamplesDistance_DTW'
p4159
(i__main__
ClassDefinition
p4160
(dp4161
g4
I1
sg5
I01
sg6
g4159
sg7
S'TExamplesDistance_Normalized'
p4162
sg9
(lp4163
sg11
I00
sg12
(lp4164
(S'int'
p4165
S'dtwDistance'
p4166
g4166
S'distance measure between individual attributes (default: square of difference)'
p4167
I0
I0
I01
tp4168
ag323
ag327
ag331
ag335
ag339
ag343
ag347
asbsS'TTreeExampleSplitter_UnknownsToRandom'
p4169
(i__main__
ClassDefinition
p4170
(dp4171
g4
I1
sg5
I01
sg6
g4169
sg7
S'TTreeExampleSplitter'
p4172
sg9
(lp4173
sg11
I00
sg12
(lp4174
sbsS'TTreePruner_m'
p4175
(i__main__
ClassDefinition
p4176
(dp4177
g4
I1
sg5
I01
sg6
g4175
sg7
S'TTreePruner'
p4178
sg9
(lp4179
sg11
I00
sg12
(lp4180
(S'float'
p4181
g797
g797
S'm for m-estimate'
p4182
I0
I0
I01
tp4183
asbsS'TImputer'
p4184
(i__main__
ClassDefinition
p4185
(dp4186
g4
I1
sg5
I01
sg6
g4184
sg7
S'TOrange'
p4187
sg9
(lp4188
sg11
I01
sg12
(lp4189
sbsS'TExamplesDistanceConstructor_DTW'
p4190
(i__main__
ClassDefinition
p4191
(dp4192
g4
I1
sg5
I01
sg6
g4190
sg7
S'TExamplesDistanceConstructor_Normalized'
p4193
sg9
(lp4194
sg11
I00
sg12
(lp4195
(S'int'
p4196
S'dtwDistance'
p4197
g4197
S'distance measure between individual attributes (default: square of difference)'
p4198
I0
I0
I01
tp4199
ag1572
ag1576
ag1580
asbsS'TStopIMClusteringByAssessor_n'
p4200
(i__main__
ClassDefinition
p4201
(dp4202
g4
I1
sg5
I01
sg6
g4200
sg7
S'TStopIMClusteringByAssessor'
p4203
sg9
(lp4204
sg11
I00
sg12
(lp4205
(S'int'
p4206
g1302
g1302
S'number of clusters'
p4207
I0
I0
I01
tp4208
asbsS'TRandomGenerator'
p4209
(i__main__
ClassDefinition
p4210
(dp4211
g4
I1
sg5
I01
sg6
g4209
sg7
S'TOrange'
p4212
sg9
(lp4213
sg11
I00
sg12
(lp4214
(S'int'
p4215
S'initseed'
p4216
g4216
S'initial random seed'
p4217
I0
I0
I01
tp4218
a(S'int'
p4219
S'uses'
p4220
g4220
S'#times a number was returned'
p4221
I0
I0
I01
tp4222
asbsS'TThresholdCA'
p4223
(i__main__
ClassDefinition
p4224
(dp4225
g4
I1
sg5
I01
sg6
g4223
sg7
S'TOrange'
p4226
sg9
(lp4227
sg11
I00
sg12
(lp4228
sbsS'TPreprocessor_imputeByLearner'
p4229
(i__main__
ClassDefinition
p4230
(dp4231
g4
I1
sg5
I01
sg6
g4229
sg7
S'TPreprocessor'
p4232
sg9
(lp4233
sg11
I00
sg12
(lp4234
(S'TLearner'
p4235
S'learner'
p4236
g4236
S'learner used for inducing a model for imputation'
p4237
I0
I0
I00
tp4238
asbsS'TRuleBeamRefiner_Python'
p4239
(i__main__
ClassDefinition
p4240
(dp4241
g4
I1
sg5
I01
sg6
g4239
sg7
S'TRuleBeamRefiner'
p4242
sg9
(lp4243
sg11
I00
sg12
(lp4244
sbsS'TClassifierFromVarFD'
p4245
(i__main__
ClassDefinition
p4246
(dp4247
g4
I1
sg5
I01
sg6
g4245
sg7
S'TClassifierFD'
p4248
sg9
(lp4249
sg11
I00
sg12
(lp4250
(S'int'
p4251
S'position'
p4252
g4252
S'position of the attribute in domain'
p4253
I0
I0
I01
tp4254
a(S'TTransformValue'
p4255
S'transformer'
p4256
g4256
S'transformer'
p4257
I0
I0
I00
tp4258
a(S'TDistribution'
p4259
S'distributionForUnknown'
p4260
g4260
S'distribution for unknown value'
p4261
I0
I0
I00
tp4262
a(S'bool'
p4263
S'transformUnknowns'
p4264
g4264
S'if false (default), unknowns stay unknown or are changed into distribution if given'
p4265
I0
I0
I01
tp4266
ag205
ag83
ag87
asbsS'TImputer_model'
p4267
(i__main__
ClassDefinition
p4268
(dp4269
g4
I1
sg5
I01
sg6
g4267
sg7
S'TImputer'
p4270
sg9
(lp4271
sg11
I00
sg12
(lp4272
(S'TClassifierList'
p4273
S'models'
p4274
g4274
S'classifiers'
p4275
I0
I0
I00
tp4276
asbsS'TLogRegLearner'
p4277
(i__main__
ClassDefinition
p4278
(dp4279
g4
I1
sg5
I01
sg6
g4277
sg7
S'TLearner'
p4280
sg9
(lp4281
sg11
I00
sg12
(lp4282
(S'TLogRegFitter'
p4283
S'fitter'
p4284
g4284
S'fits beta coefficients and calculates beta errors.'
p4285
I0
I0
I00
tp4286
a(S'TImputerConstructor'
p4287
S'imputerConstructor'
p4288
g4288
S'if present, it constructs an imputer for unknown values'
p4289
I0
I0
I00
tp4290
a(S'TDomainContinuizer'
p4291
S'domainContinuizer'
p4292
g4292
S'if present, it constructs continuous domain if needed; if absent, default is used'
p4293
I0
I0
I00
tp4294
ag97
asbsS'TPreprocessor_takeMissing'
p4295
(i__main__
ClassDefinition
p4296
(dp4297
g4
I1
sg5
I01
sg6
g4295
sg7
S'TPreprocessor'
p4298
sg9
(lp4299
sg11
I00
sg12
(lp4300
sbsS'TMeasureAttribute_IM'
p4301
(i__main__
ClassDefinition
p4302
(dp4303
g4
I1
sg5
I01
sg6
g4301
sg7
S'TMeasureAttribute'
p4304
sg9
(lp4305
sg11
I00
sg12
(lp4306
(S'TIMConstructor'
p4307
S'IMconstructor'
p4308
g4308
S'incompatibility matrix constructor'
p4309
I0
I0
I00
tp4310
a(S'TColumnAssessor'
p4311
S'columnAssessor'
p4312
g4312
S'column quality assessor'
p4313
I0
I0
I00
tp4314
ag559
ag563
ag567
asbsS'TFeatureByDistributions'
p4315
(i__main__
ClassDefinition
p4316
(dp4317
g4
I1
sg5
I01
sg6
g4315
sg7
S'TFeatureInducer'
p4318
sg9
(lp4319
sg11
I00
sg12
(lp4320
(S'TClustersFromDistributions'
p4321
S'clustersFromDistributions'
p4322
g4322
S'clustering algorithm'
p4323
I0
I0
I00
tp4324
a(S'int'
p4325
S'completion'
p4326
g4326
S'decides how to determine the class for points not covered by any cluster'
p4327
I0
I0
I01
tp4328
asbsS'TCostMatrix'
p4329
(i__main__
ClassDefinition
p4330
(dp4331
g4
I1
sg5
I01
sg6
g4329
sg7
S'TOrange'
p4332
sg9
(lp4333
sg11
I00
sg12
(lp4334
(S'TVariable'
p4335
S'classVar'
p4336
g4336
S'attribute to which the matrix applies'
p4337
I0
I0
I00
tp4338
asbsS'TStopIMClusteringByAssessor_noProfit'
p4339
(i__main__
ClassDefinition
p4340
(dp4341
g4
I1
sg5
I01
sg6
g4339
sg7
S'TStopIMClusteringByAssessor'
p4342
sg9
(lp4343
sg11
I00
sg12
(lp4344
(S'float'
p4345
S'minProfitProportion'
p4346
g4346
S'minimal allowable profit proportion'
p4347
I0
I0
I01
tp4348
asbsS'TRemoveUnusedValues'
p4349
(i__main__
ClassDefinition
p4350
(dp4351
g4
I1
sg5
I01
sg6
g4349
sg7
S'TOrange'
p4352
sg9
(lp4353
sg11
I00
sg12
(lp4354
(S'bool'
p4355
S'removeOneValued'
p4356
g4356
S'if true (default is false), one valued attributes are also removed'
p4357
I0
I0
I01
tp4358
asbsS'TExamplesDistance_Normalized'
p4359
(i__main__
ClassDefinition
p4360
(dp4361
g4
I1
sg5
I01
sg6
g4359
sg7
S'TExamplesDistance'
p4362
sg9
(lp4363
sg11
I01
sg12
(lp4364
g323
ag327
ag331
ag335
ag339
ag343
ag347
asbsS'TExamplesDistance_Euclidean'
p4365
(i__main__
ClassDefinition
p4366
(dp4367
g4
I1
sg5
I01
sg6
g4365
sg7
S'TExamplesDistance_Normalized'
p4368
sg9
(lp4369
sg11
I00
sg12
(lp4370
(S'TDomainDistributions'
p4371
S'distributions'
p4372
g4372
S'distributions (of discrete attributes only)'
p4373
I0
I0
I00
tp4374
a(S'TAttributedFloatList'
p4375
S'bothSpecialDist'
p4376
g4376
S'distances between discrete attributes if both values are unknown'
p4377
I0
I0
I00
tp4378
ag323
ag327
ag331
ag335
ag339
ag343
ag347
asbsS'TPreprocessor_take'
p4379
(i__main__
ClassDefinition
p4380
(dp4381
g4
I1
sg5
I01
sg6
g4379
sg7
S'TPreprocessor'
p4382
sg9
(lp4383
sg11
I00
sg12
(lp4384
(S'TVariableFilterMap'
p4385
S'values'
p4386
g4386
S'variable-filter pairs'
p4387
I0
I0
I00
tp4388
a(S'bool'
p4389
S'conjunction'
p4390
g4390
S'decides whether to take conjunction or disjunction of values'
p4391
I0
I0
I01
tp4392
asbsS'TIMConstructor'
p4393
(i__main__
ClassDefinition
p4394
(dp4395
g4
I1
sg5
I01
sg6
g4393
sg7
S'TOrange'
p4396
sg9
(lp4397
sg11
I01
sg12
(lp4398
g827
asbsS'TRuleFinder_Python'
p4399
(i__main__
ClassDefinition
p4400
(dp4401
g4
I1
sg5
I01
sg6
g4399
sg7
S'TRuleFinder'
p4402
sg9
(lp4403
sg11
I00
sg12
(lp4404
g2982
ag2985
asbsS'TTabDelimExampleGenerator'
p4405
(i__main__
ClassDefinition
p4406
(dp4407
g4
I1
sg5
I01
sg6
g4405
sg7
S'TFileExampleGenerator'
p4408
sg9
(lp4409
sg11
I00
sg12
(lp4410
(S'TIntList'
p4411
S'attributeTypes'
p4412
g4412
S'types of attributes (-1 normal, 0 skip, <-1 = meta ID)'
p4413
I0
I0
I00
tp4414
a(S'int'
p4415
S'classPos'
p4416
g4416
S'position of the class attribute'
p4417
I0
I0
I01
tp4418
a(S'int'
p4419
S'headerLines'
p4420
g4420
S'number of header lines (3 for .tab, 1 for .txt)'
p4421
I0
I0
I01
tp4422
a(S'bool'
p4423
S'csv'
p4424
g4424
S"also allow ',' as a separator"
p4425
I0
I0
I01
tp4426
ag125
ag129
ag133
ag137
ag141
asbsS'TRandomClassifier'
p4427
(i__main__
ClassDefinition
p4428
(dp4429
g4
I1
sg5
I01
sg6
g4427
sg7
S'TClassifier'
p4430
sg9
(lp4431
sg11
I00
sg12
(lp4432
(S'TDistribution'
p4433
S'probabilities'
p4434
g4434
S'probabilities of predictions'
p4435
I0
I0
I00
tp4436
ag83
ag87
asbsS'TkNNLearner'
p4437
(i__main__
ClassDefinition
p4438
(dp4439
g4
I1
sg5
I01
sg6
g4437
sg7
S'TLearner'
p4440
sg9
(lp4441
sg11
I00
sg12
(lp4442
(S'float'
p4443
g793
g793
S'number of neighbours'
p4444
I0
I0
I01
tp4445
a(S'bool'
p4446
S'rankWeight'
p4447
g4447
S'enable weighting by ranks'
p4448
I0
I0
I01
tp4449
a(S'TExamplesDistanceConstructor'
p4450
S'distanceConstructor'
p4451
g4451
S'metrics'
p4452
I0
I0
I00
tp4453
ag97
asbsS'TTreeDescender_UnknownToNode'
p4454
(i__main__
ClassDefinition
p4455
(dp4456
g4
I1
sg5
I01
sg6
g4454
sg7
g1079
sg9
(lp4457
sg11
I0
sg12
(lp4458
sbsS'TDistributionAssessor_mf'
p4459
(i__main__
ClassDefinition
p4460
(dp4461
g4
I1
sg5
I01
sg6
g4459
sg7
S'TDistributionAssessor'
p4462
sg9
(lp4463
sg11
I00
sg12
(lp4464
(S'float'
p4465
g797
g797
S'm for m-estimate'
p4466
I0
I0
I01
tp4467
asbsS'TExampleClusters'
p4468
(i__main__
ClassDefinition
p4469
(dp4470
g4
I1
sg5
I01
sg6
g4468
sg7
S'TGeneralExampleClustering'
p4471
sg9
(lp4472
sg11
I00
sg12
(lp4473
(S'TExampleCluster'
p4474
S'root'
p4475
g4475
S'root of cluster hierarchy'
p4476
I0
I0
I00
tp4477
a(S'float'
p4478
S'quality'
p4479
g4479
S"'quality' of clustering"
p4480
I0
I0
I01
tp4481
asbsS'TCostLearner'
p4482
(i__main__
ClassDefinition
p4483
(dp4484
g4
I1
sg5
I01
sg6
g4482
sg7
S'TMajorityLearner'
p4485
sg9
(lp4486
sg11
I00
sg12
(lp4487
(S'TCostMatrix'
p4488
S'cost'
p4489
g4489
S'cost matrix'
p4490
I0
I0
I00
tp4491
ag515
ag519
ag97
asbsS'TEFMDataDescription'
p4492
(i__main__
ClassDefinition
p4493
(dp4494
g4
I1
sg5
I01
sg6
g4492
sg7
S'TOrange'
p4495
sg9
(lp4496
sg11
I00
sg12
(lp4497
(S'TDomain'
p4498
S'domain'
p4499
g4499
S'domain'
p4500
I01
I0
I00
tp4501
asbsS'TClassifierFD'
p4502
(i__main__
ClassDefinition
p4503
(dp4504
g4
I1
sg5
I01
sg6
g4502
sg7
S'TClassifier'
p4505
sg9
(lp4506
sg11
I00
sg12
(lp4507
g205
ag83
ag87
asbsS'TPreprocessor_drop'
p4508
(i__main__
ClassDefinition
p4509
(dp4510
g4
I1
sg5
I01
sg6
g4508
sg7
S'TPreprocessor'
p4511
sg9
(lp4512
sg11
I00
sg12
(lp4513
(S'TVariableFilterMap'
p4514
S'values'
p4515
g4515
S'variable-filter pairs'
p4516
I0
I0
I00
tp4517
a(S'bool'
p4518
S'conjunction'
p4519
g4519
S'decides whether to take conjunction or disjunction of values'
p4520
I0
I0
I01
tp4521
asbsS'TTreeDescender_UnknownToCommonBranch'
p4522
(i__main__
ClassDefinition
p4523
(dp4524
g4
I1
sg5
I01
sg6
g4522
sg7
g1079
sg9
(lp4525
sg11
I0
sg12
(lp4526
sbsS'TPreprocessor_addNoise'
p4527
(i__main__
ClassDefinition
p4528
(dp4529
g4
I1
sg5
I01
sg6
g4527
sg7
S'TPreprocessor'
p4530
sg9
(lp4531
sg11
I00
sg12
(lp4532
(S'TVariableFloatMap'
p4533
S'proportions'
p4534
g4534
S'proportion of changed values for individual attributes'
p4535
I0
I0
I00
tp4536
a(S'float'
p4537
S'defaultProportion'
p4538
g4538
S'default proportion of changed values (for attributes not specified above)'
p4539
I0
I0
I01
tp4540
a(S'TRandomGenerator'
p4541
S'randomGenerator'
p4542
g4542
S'random number generator'
p4543
I0
I0
I00
tp4544
asbsS'TStopIMClusteringByAssessor_binary'
p4545
(i__main__
ClassDefinition
p4546
(dp4547
g4
I1
sg5
I01
sg6
g4545
sg7
S'TStopIMClusteringByAssessor'
p4548
sg9
(lp4549
sg11
I00
sg12
(lp4550
sbsS'TColumnAssessor_mf'
p4551
(i__main__
ClassDefinition
p4552
(dp4553
g4
I1
sg5
I01
sg6
g4551
sg7
S'TColumnAssessor'
p4554
sg9
(lp4555
sg11
I00
sg12
(lp4556
(S'float'
p4557
g797
g797
S'm for m-estimate'
p4558
I0
I0
I01
tp4559
asbsS'TExamplesDistanceConstructor'
p4560
(i__main__
ClassDefinition
p4561
(dp4562
g4
I1
sg5
I01
sg6
g4560
sg7
S'TOrange'
p4563
sg9
(lp4564
sg11
I01
sg12
(lp4565
g1580
asbsS'TSubsetsGenerator'
p4566
(i__main__
ClassDefinition
p4567
(dp4568
g4
I1
sg5
I01
sg6
g4566
sg7
S'TOrange'
p4569
sg9
(lp4570
sg11
I01
sg12
(lp4571
g183
asbsS'TPreprocessor_addCensorWeight'
p4572
(i__main__
ClassDefinition
p4573
(dp4574
g4
I1
sg5
I01
sg6
g4572
sg7
S'TPreprocessor'
p4575
sg9
(lp4576
sg11
I00
sg12
(lp4577
(S'TVariable'
p4578
S'outcomeVar'
p4579
g4579
S'outcome variable'
p4580
I0
I0
I00
tp4581
a(S'TVariable'
p4582
S'timeVar'
p4583
g4583
S'time variable'
p4584
I0
I0
I00
tp4585
a(S'TValue'
p4586
S'eventValue'
p4587
g4587
S'event (fail) value'
p4588
I0
I0
I01
tp4589
a(S'int'
p4590
S'method'
p4591
g4591
S'weighting method'
p4592
I0
I0
I01
tp4593
a(S'float'
p4594
S'maxTime'
p4595
g4595
S'maximal time'
p4596
I0
I0
I01
tp4597
a(S'bool'
p4598
S'addComplementary'
p4599
g4599
S'if true (default is false), complementary examples are added for censored examples'
p4600
I0
I0
I01
tp4601
asbsS'TRuleBeamCandidateSelector_Python'
p4602
(i__main__
ClassDefinition
p4603
(dp4604
g4
I1
sg5
I01
sg6
g4602
sg7
S'TRuleBeamCandidateSelector'
p4605
sg9
(lp4606
sg11
I00
sg12
(lp4607
sbsS'TRandomForest'
p4608
(i__main__
ClassDefinition
p4609
(dp4610
g1103
I1
sg1104
I0
sg1105
g4608
sg1106
S'TClassifier'
p4611
sg1108
I00
sg1109
(lp4612
sg1111
(lp4613
(S'TRandomGenerator'
p4614
S'randomGenerator'
p4615
g4615
S'random generator'
p4616
I01
I0
I00
tp4617
ag83
ag87
asbsS'TEntropyDiscretization'
p4618
(i__main__
ClassDefinition
p4619
(dp4620
g4
I1
sg5
I01
sg6
g4618
sg7
S'TDiscretization'
p4621
sg9
(lp4622
sg11
I00
sg12
(lp4623
(S'int'
p4624
S'maxNumberOfIntervals'
p4625
g4625
S'maximal number of intervals; default = 0 (no limits)'
p4626
I0
I0
I01
tp4627
a(S'bool'
p4628
S'forceAttribute'
p4629
g4629
S'minimal number of intervals; default = 0 (no limits)'
p4630
I0
I0
I01
tp4631
asbsS'TIMBySorting'
p4632
(i__main__
ClassDefinition
p4633
(dp4634
g4
I1
sg5
I01
sg6
g4632
sg7
S'TIMConstructor'
p4635
sg9
(lp4636
sg11
I00
sg12
(lp4637
g827
asbsS'TImputerConstructor_asValue'
p4638
(i__main__
ClassDefinition
p4639
(dp4640
g4
I1
sg5
I01
sg6
g4638
sg7
S'TImputerConstructor'
p4641
sg9
(lp4642
sg11
I00
sg12
(lp4643
g151
asbsS'TGaussianDistribution'
p4644
(i__main__
ClassDefinition
p4645
(dp4646
g4
I1
sg5
I01
sg6
g4644
sg7
S'TDistribution'
p4647
sg9
(lp4648
sg11
I00
sg12
(lp4649
(S'float'
p4650
S'mean'
p4651
g4651
S'mu'
p4652
I0
I0
I01
tp4653
a(S'float'
p4654
S'sigma'
p4655
g4655
S'sigma'
p4656
I0
I0
I01
tp4657
ag727
ag731
ag735
ag739
ag743
ag747
ag751
ag755
asbsS'TExampleDistVector'
p4658
(i__main__
ClassDefinition
p4659
(dp4660
g4
I1
sg5
I01
sg6
g4658
sg7
S'TOrange'
p4661
sg9
(lp4662
sg11
I00
sg12
(lp4663
sbsS'TRuleClassifier'
p4664
(i__main__
ClassDefinition
p4665
(dp4666
g4
I1
sg5
I01
sg6
g4664
sg7
S'TClassifier'
p4667
sg9
(lp4668
sg11
I01
sg12
(lp4669
g1418
ag1421
ag83
ag87
asbsS'TRuleBeamFilter_Width'
p4670
(i__main__
ClassDefinition
p4671
(dp4672
g4
I1
sg5
I01
sg6
g4670
sg7
S'TRuleBeamFilter'
p4673
sg9
(lp4674
sg11
I00
sg12
(lp4675
(S'int'
p4676
S'width'
p4677
g4677
g1417
I0
I0
I01
tp4678
asbsS'TProbabilityEstimator'
p4679
(i__main__
ClassDefinition
p4680
(dp4681
g4
I1
sg5
I01
sg6
g4679
sg7
S'TOrange'
p4682
sg9
(lp4683
sg11
I01
sg12
(lp4684
g1071
ag1075
asbsS'TIMClustering'
p4685
(i__main__
ClassDefinition
p4686
(dp4687
g4
I1
sg5
I01
sg6
g4685
sg7
S'TOrange'
p4688
sg9
(lp4689
sg11
I00
sg12
(lp4690
(S'TIM'
p4691
S'im'
p4692
g4692
S'incompatibilty matrix'
p4693
I0
I0
I00
tp4694
a(S'TIntList'
p4695
S'clusters'
p4696
g4696
S'cluster index for each matrix column'
p4697
I0
I0
I00
tp4698
a(S'int'
p4699
S'maxCluster'
p4700
g4700
S'the highest cluster index'
p4701
I0
I0
I01
tp4702
a(S'float'
p4703
S'quality'
p4704
g4704
S'cluster quality'
p4705
I0
I0
I01
tp4706
asbsS'TImputerConstructor_model'
p4707
(i__main__
ClassDefinition
p4708
(dp4709
g4
I1
sg5
I01
sg6
g4707
sg7
S'TImputerConstructor'
p4710
sg9
(lp4711
sg11
I00
sg12
(lp4712
(S'TLearner'
p4713
S'learnerDiscrete'
p4714
g4714
S'learner for discrete attributes'
p4715
I0
I0
I00
tp4716
a(S'TLearner'
p4717
S'learnerContinuous'
p4718
g4718
S'learner for continuous attributes'
p4719
I0
I0
I00
tp4720
a(S'bool'
p4721
S'useClass'
p4722
g4722
S'tells whether to use class value in imputation (default: false)'
p4723
I0
I0
I01
tp4724
ag151
asbsS'TFindNearestConstructor_BruteForce'
p4725
(i__main__
ClassDefinition
p4726
(dp4727
g4
I1
sg5
I01
sg6
g4725
sg7
S'TFindNearestConstructor'
p4728
sg9
(lp4729
sg11
I00
sg12
(lp4730
g1400
ag1404
asbsS'TImputerConstructor'
p4731
(i__main__
ClassDefinition
p4732
(dp4733
g4
I1
sg5
I01
sg6
g4731
sg7
S'TOrange'
p4734
sg9
(lp4735
sg11
I01
sg12
(lp4736
g151
asbsS'TPreprocessor'
p4737
(i__main__
ClassDefinition
p4738
(dp4739
g4
I1
sg5
I01
sg6
g4737
sg7
S'TOrange'
p4740
sg9
(lp4741
sg11
I01
sg12
(lp4742
sbsS'TMakeRandomIndices'
p4743
(i__main__
ClassDefinition
p4744
(dp4745
g4
I1
sg5
I01
sg6
g4743
sg7
S'TOrange'
p4746
sg9
(lp4747
sg11
I00
sg12
(lp4748
g455
ag459
ag463
asbsS'TDiscretizer'
p4749
(i__main__
ClassDefinition
p4750
(dp4751
g4
I1
sg5
I01
sg6
g4749
sg7
S'TTransformValue'
p4752
sg9
(lp4753
sg11
I01
sg12
(lp4754
g493
asbsS'TIMByRowsPreprocessor'
p4755
(i__main__
ClassDefinition
p4756
(dp4757
g4
I1
sg5
I01
sg6
g4755
sg7
S'TOrange'
p4758
sg9
(lp4759
sg11
I01
sg12
(lp4760
sbsS'TTreeStopCriteria_common'
p4761
(i__main__
ClassDefinition
p4762
(dp4763
g4
I1
sg5
I01
sg6
g4761
sg7
S'TTreeStopCriteria'
p4764
sg9
(lp4765
sg11
I00
sg12
(lp4766
(S'float'
p4767
S'maxMajority'
p4768
g4768
S'a maximal proportion of majority class for division to continue'
p4769
I0
I0
I01
tp4770
a(S'float'
p4771
S'minExamples'
p4772
g4772
S'a minimal number of examples for division to continue'
p4773
I0
I0
I01
tp4774
asbsS'TRetisExampleGenerator'
p4775
(i__main__
ClassDefinition
p4776
(dp4777
g4
I1
sg5
I01
sg6
g4775
sg7
S'TFileExampleGenerator'
p4778
sg9
(lp4779
sg11
I00
sg12
(lp4780
g125
ag129
ag133
ag137
ag141
asbsS'TTreeStopCriteria_Python'
p4781
(i__main__
ClassDefinition
p4782
(dp4783
g4
I1
sg5
I01
sg6
g4781
sg7
S'TTreeStopCriteria'
p4784
sg9
(lp4785
sg11
I00
sg12
(lp4786
sbsS'TGeneralExampleClustering'
p4787
(i__main__
ClassDefinition
p4788
(dp4789
g4
I1
sg5
I01
sg6
g4787
sg7
S'TOrange'
p4790
sg9
(lp4791
sg11
I01
sg12
(lp4792
sbsS'TIGByIM'
p4793
(i__main__
ClassDefinition
p4794
(dp4795
g4
I1
sg5
I01
sg6
g4793
sg7
S'TIGConstructor'
p4796
sg9
(lp4797
sg11
I00
sg12
(lp4798
(S'TIMConstructor'
p4799
S'IMconstructor'
p4800
g4800
S'IM constructor'
p4801
I0
I0
I00
tp4802
asbs.