/* This file was generated by pyxtract 
   Do not edit.*/

#include "externs.px"



PyMethodDef mymoduleFunctions[]={
     {NULL, NULL}
};

int noOfmymoduleClasses=3;

TOrangeType *mymoduleClasses[]={
    &PyOrMyClassifier_Type,
    &PyOrMyFilter_Type,
    &PyOrMyLearner_Type,
    NULL};



void addmymoduleConstants(PyObject *mod) {
     PyModule_AddObject(mod, "MyClassifier", (PyObject *)&PyOrMyClassifier_Type);
     PyModule_AddObject(mod, "MyFilter", (PyObject *)&PyOrMyFilter_Type);
     PyModule_AddObject(mod, "MyLearner", (PyObject *)&PyOrMyLearner_Type);
}


#ifdef _MSC_VER
  #define WIN32_LEAN_AND_MEAN
  #include <windows.h>
  BOOL APIENTRY DllMain( HANDLE, DWORD  ul_reason_for_call, LPVOID)  { return TRUE; }
#endif

PyObject *mymoduleModule;

ORANGE_API void addClassList(TOrangeType **);

#ifdef DARWIN
  extern "C" MYMODULE_API void initmymoduleLow()
#else
  extern "C" MYMODULE_API void initmymodule()
#endif
{ 
  if (!initmymoduleExceptions())
    return;

  for(TOrangeType **type=mymoduleClasses; *type; type++)
    if (PyType_Ready((PyTypeObject *)*type)<0)
      return;
  addClassList(mymoduleClasses);

  gcmymoduleUnsafeStaticInitialization();
  mymoduleModule = Py_InitModule("mymodule", mymoduleFunctions);  
  addmymoduleConstants(mymoduleModule);
}
