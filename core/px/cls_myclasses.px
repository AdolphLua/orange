/* This file was generated by pyxtract 
   Do not edit.*/

extern IMPORT_DLL TOrangeType PyOrClassifier_Type;
extern IMPORT_DLL TOrangeType PyOrLearner_Type;


/* -------------- RandomForest --------------*/



PyTypeObject PyOrRandomForest_Type_inh = {
  PyObject_HEAD_INIT((_typeobject *)&PyType_Type)
  0,
  "RandomForest",
  sizeof(TPyOrange), 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  Py_TPFLAGS_DEFAULT | Py_TPFLAGS_BASETYPE | Py_TPFLAGS_HAVE_RICHCOMPARE, /* tp_flags */
  "(classVar | examples, [randomGenerator | int])",  /* tp_doc */
  0, 0, 0, 0, 0, 0, 0, 0, 0,
  (_typeobject *)&PyOrClassifier_Type,               /* tp_base */
  0, 0, 0, 0, 0,
  PyType_GenericAlloc,                               /* tp_alloc */
  (newfunc)RandomForest_new,                         /* tp_new */
  _PyObject_GC_Del,                                  /* tp_free */
  0, 0, 0, 0, 0, 0,
};

int cc_func_RandomForest(PyObject *obj, void *ptr) { if (!PyOrRandomForest_Check(obj)) return 0;      *(GCPtr<TRandomForest> *)(ptr) = PyOrange_AsRandomForest(obj); return 1; }
int ccn_func_RandomForest(PyObject *obj, void *ptr) { if (obj == Py_None) { *(GCPtr<TRandomForest> *)(ptr) = GCPtr<TRandomForest>(); return 1; }      if (!PyOrRandomForest_Check(obj)) return 0;      *(GCPtr<TRandomForest> *)(ptr) = PyOrange_AsRandomForest(obj); return 1; }


CORE_API TOrangeType PyOrRandomForest_Type (PyOrRandomForest_Type_inh, typeid(TRandomForest), 0, cc_RandomForest, ccn_RandomForest, NULL, NULL, NULL);



/* -------------- RandomForestLearner --------------*/


POrange RandomForestLearner_default_constructor(PyTypeObject *type)
{ return POrange(mlnew TRandomForestLearner(), type); }


PyTypeObject PyOrRandomForestLearner_Type_inh = {
  PyObject_HEAD_INIT((_typeobject *)&PyType_Type)
  0,
  "RandomForestLearner",
  sizeof(TPyOrange), 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  Py_TPFLAGS_DEFAULT | Py_TPFLAGS_BASETYPE | Py_TPFLAGS_HAVE_RICHCOMPARE, /* tp_flags */
  "() -/-> RandomForest",                            /* tp_doc */
  0, 0, 0, 0, 0, 0, 0, 0, 0,
  (_typeobject *)&PyOrLearner_Type,                  /* tp_base */
  0, 0, 0, 0, 0,
  PyType_GenericAlloc,                               /* tp_alloc */
  (newfunc)PyOrType_GenericCallableNew,              /* tp_new */
  _PyObject_GC_Del,                                  /* tp_free */
  0, 0, 0, 0, 0, 0,
};

int cc_func_RandomForestLearner(PyObject *obj, void *ptr) { if (!PyOrRandomForestLearner_Check(obj)) return 0;      *(GCPtr<TRandomForestLearner> *)(ptr) = PyOrange_AsRandomForestLearner(obj); return 1; }
int ccn_func_RandomForestLearner(PyObject *obj, void *ptr) { if (obj == Py_None) { *(GCPtr<TRandomForestLearner> *)(ptr) = GCPtr<TRandomForestLearner>(); return 1; }      if (!PyOrRandomForestLearner_Check(obj)) return 0;      *(GCPtr<TRandomForestLearner> *)(ptr) = PyOrange_AsRandomForestLearner(obj); return 1; }


CORE_API TOrangeType PyOrRandomForestLearner_Type (PyOrRandomForestLearner_Type_inh, typeid(TRandomForestLearner), RandomForestLearner_default_constructor, cc_RandomForestLearner, ccn_RandomForestLearner, NULL, NULL, NULL);



